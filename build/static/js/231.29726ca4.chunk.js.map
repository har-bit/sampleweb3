{"version":3,"file":"static/js/231.29726ca4.chunk.js","mappings":"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EAAM,IAAM,IAC1F,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,EAAM,IAAM,IAAM,EAAM,IAAM,IAAM,GAAM,IAAM,GAC1F,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAC1F,IAAM,GAAM,IAAM,GAAM,EAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAC1F,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAC1F,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAC1F,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAC1F,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAC1F,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAC1F,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAC1F,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAC1F,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAC1F,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAC1F,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,EAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAC1F,IAAM,EAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,EAAM,IAAM,IAAM,IAC1F,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,EAAM,IAAM,IAAM,IAAM,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,+HAEL7M,OAAQ,CACNvO,EAAG,KACHob,EAAG,iCAELte,KAAM,CACJkD,EAAG,GACHob,EAAG,+BAELiiC,YAAa,CACXr9C,EAAG,KACHob,EAAG,uCAELkiC,kBAAmB,CACjBt9C,EAAG,IACHob,EAAG,qDAELmiC,eAAgB,CACdv9C,EAAG,KACHob,EAAG,iEAELy/B,mBAAoB,CAClB76C,EAAG,KACHob,EAAG,+CAELoiC,OAAQ,CACNx9C,EAAG,EACHob,EAAG,0JAELqiC,aAAc,CACZz9C,EAAG,IACHob,EAAG,kEAELsiC,WAAY,CACV19C,EAAG,IACHob,EAAG,IAELuiC,GAAI,CACF39C,EAAG,KACHob,EAAG,4EAELwiC,WAAY,CACV59C,EAAG,KACHob,EAAG,0CAELyiC,WAAY,CACV79C,EAAG,EACHob,EAAG,wHAEL0iC,cAAe,CACb99C,EAAG,GACHob,EAAG,iIAELxb,KAAM,CACJI,EAAG,EACHob,EAAG,0GAEL2iC,UAAW,CACT/9C,EAAG,IACHob,EAAG,IAEL2Z,OAAQ,CACN/0B,EAAG,GACHob,EAAG,IAEL4iC,WAAY,CACVh+C,EAAG,GACHob,EAAG,IAEL6iC,UAAW,CACTj+C,EAAG,IACHob,EAAG,IAEL8iC,cAAe,CACbl+C,EAAG,IACHob,EAAG,IAEL+iC,SAAU,CACRn+C,EAAG,GACHob,EAAG,IAELgjC,aAAc,CACZp+C,EAAG,EACHob,EAAG,IAELowB,KAAM,CACJxrC,EAAG,EACHob,EAAG,+BAEL9c,IAAK,CACH0B,EAAG,EACHob,EAAG,8BAELqF,IAAK,CACHzgB,EAAG,EACHob,EAAG,8BAEL6H,IAAK,CACHjjB,EAAG,EACHob,EAAG,8BAELsF,IAAK,CACH1gB,EAAG,EACHob,EAAG,8BAELijC,KAAM,CACJr+C,EAAG,EACHob,EAAG,+BAEL0E,IAAK,CACH9f,EAAG,EACHob,EAAG,8BAELkjC,KAAM,CACJt+C,EAAG,EACHob,EAAG,+BAELmjC,OAAQ,CACNv+C,EAAG,EACHob,EAAG,iCAELojC,OAAQ,CACNx+C,EAAG,EACHob,EAAG,iCAELqjC,WAAY,CACVz+C,EAAG,EACHob,EAAG,qCAELsjC,GAAI,CACF1+C,EAAG,EACHob,EAAG,6BAELujC,GAAI,CACF3+C,EAAG,EACHob,EAAG,6BAELwjC,IAAK,CACH5+C,EAAG,EACHob,EAAG,8BAELyjC,IAAK,CACH7+C,EAAG,EACHob,EAAG,8BAEL0jC,GAAI,CACF9+C,EAAG,EACHob,EAAG,6BAEL2jC,OAAQ,CACN/+C,EAAG,EACHob,EAAG,iCAEL4jC,IAAK,CACHh/C,EAAG,EACHob,EAAG,8BAEL6jC,GAAI,CACFj/C,EAAG,EACHob,EAAG,6BAEL8jC,IAAK,CACHl/C,EAAG,EACHob,EAAG,8BAEL+jC,IAAK,CACHn/C,EAAG,EACHob,EAAG,8BAEL8K,KAAM,CACJlmB,EAAG,EACHob,EAAG,+BAELjjB,QAAS,CACP6H,EAAG,EACHob,EAAG,kCAELvlB,QAAS,CACPmK,EAAG,GACHob,EAAG,kCAELs0B,OAAQ,CACN1vC,EAAG,EACHob,EAAG,iCAELgkC,OAAQ,CACNp/C,EAAG,EACHob,EAAG,iCAELikC,UAAW,CACTr/C,EAAG,EACHob,EAAG,oCAELkkC,aAAc,CACZt/C,EAAG,EACHob,EAAG,uCAELmkC,aAAc,CACZv/C,EAAG,EACHob,EAAG,uCAELokC,aAAc,CACZx/C,EAAG,EACHob,EAAG,uCAELqkC,SAAU,CACRz/C,EAAG,EACHob,EAAG,mCAELskC,SAAU,CACR1/C,EAAG,EACHob,EAAG,mCAELukC,SAAU,CACR3/C,EAAG,EACHob,EAAG,mCAEL4+B,YAAa,CACXh6C,EAAG,GACHob,EAAG,sCAEL6+B,YAAa,CACXj6C,EAAG,GACHob,EAAG,sCAELwkC,UAAW,CACT5/C,EAAG,GACHob,EAAG,oCAELykC,SAAU,CACR7/C,EAAG,EACHob,EAAG,mCAELqwB,UAAW,CACTzrC,EAAG,EACHob,EAAG,oCAELvQ,OAAQ,CACN7K,EAAG,EACHob,EAAG,iCAELg7B,WAAY,CACVp2C,EAAG,EACHob,EAAG,qCAEL0kC,SAAU,CACR9/C,EAAG,EACHob,EAAG,mCAELi1B,IAAK,CACHrwC,EAAG,EACHob,EAAG,8BAEL2kC,MAAO,CACL//C,EAAG,EACHob,EAAG,gCAEL4kC,OAAQ,CACNhgD,EAAG,EACHob,EAAG,iCAEL6kC,QAAS,CACPjgD,EAAG,EACHob,EAAG,kCAELg/B,OAAQ,CACNp6C,EAAG,EACHob,EAAG,iCAEL8kC,KAAM,CACJlgD,EAAG,EACHob,EAAG,+BAEL+kC,MAAO,CACLngD,EAAG,GACHob,EAAG,gCAELglC,GAAI,CACFpgD,EAAG,EACHob,EAAG,6BAELilC,MAAO,CACLrgD,EAAG,EACHob,EAAG,gCAELklC,IAAK,CACHtgD,EAAG,EACHob,EAAG,8BAELpa,KAAM,CACJhB,EAAG,EACHob,EAAG,+BAELmlC,IAAK,CACHvgD,EAAG,EACHob,EAAG,8BAELolC,KAAM,CACJxgD,EAAG,EACHob,EAAG,+BAELy+B,SAAU,CACR75C,EAAG,GACHob,EAAG,mCAELqlC,OAAQ,CACNzgD,EAAG,EACHob,EAAG,iCAELslC,QAAS,CACP1gD,EAAG,EACHob,EAAG,kCAELulC,aAAc,CACZ3gD,EAAG,EACHob,EAAG,wCAGP6/B,GAAI,CACF2F,WAAY,CACV5gD,EAAG,KACHob,EAAG,oCAELylC,gBAAiB,CACf7gD,EAAG,KACHob,EAAG,sCAEL0lC,iBAAkB,CAChB9gD,EAAG,GACHob,EAAG,iDAGPuG,IAAK,CACHo/B,kBAAmB,CACjB/gD,EAAG,OACHob,EAAG,+CAEL4lC,uBAAwB,CACtBhhD,EAAG,KACHob,EAAG,wEAEL6lC,cAAe,CACbjhD,EAAG,GACHob,EAAG,4GAEL8lC,cAAe,CACblhD,EAAG,IACHob,EAAG,yCAEL+lC,eAAgB,CACdnhD,EAAG,IACHob,EAAG,0CAELgmC,YAAa,CACXphD,EAAG1K,OAAO,uBACV8lB,EAAG,sDAEL4/B,oBAAqB,CACnBh7C,EAAG,EACHob,EAAG,4DAITimC,UAAW,CACTr3C,KAAM,YACNisC,QAAS,uDACTlxC,IAAK,yCACLizC,OAAQF,GAAOU,MACfH,UAAW,CACTyB,aAAc,CACZ95C,EAAG,GACHob,EAAG,yCAITkmC,IAAK,CACHt3C,KAAM,MACNisC,QAAS,sBACTlxC,IAAK,yCACLizC,OAAQF,GAAOU,OAEjB+I,iBAAkB,CAChBv3C,KAAM,mBACNisC,QAAS,yDACTlxC,IAAK,yCACLizC,OAAQF,GAAOU,MACfH,UAAW,CACT8B,MAAO,CACLn6C,EAAG,IACHob,EAAG,4BAELte,KAAM,CACJkD,EAAG,IACHob,EAAG,sDAEL4+B,YAAa,CACXh6C,EAAG,IACHob,EAAG,sCAEL6+B,YAAa,CACXj6C,EAAG,IACHob,EAAG,sCAELvlB,QAAS,CACPmK,EAAG,IACHob,EAAG,kCAEL0+B,aAAc,CACZ95C,EAAG,IACHob,EAAG,uCAELy+B,SAAU,CACR75C,EAAG,IACHob,EAAG,mCAELulC,aAAc,CACZ3gD,EAAG,IACHob,EAAG,yCAITomC,eAAgB,CACdx3C,KAAM,iBACNisC,QACE,qHACFlxC,IAAK,yCACLizC,OAAQF,GAAOU,MACfH,UAAW,CACTwE,QAAS,CACP78C,EAAG,GACHob,EAAG,yDAGP6/B,GAAI,CACFwG,YAAa,CACXzhD,EAAG,MACHob,EAAG,qCAITsmC,UAAW,CACT13C,KAAM,YACNisC,QAAS,yEACTlxC,IAAK,yCACLizC,OAAQF,GAAOU,MACfH,UAAW,CACTe,mBAAoB,CAClBp5C,EAAG,GACHob,EAAG,2DAELumC,MAAO,CACL3hD,EAAG,IACHob,EAAG,2CAELwmC,MAAO,CACL5hD,EAAG,IACHob,EAAG,iDAELymC,UAAW,CACT7hD,EAAG,IACHob,EAAG,+CAEL0mC,cAAe,CACb9hD,EAAG,IACHob,EAAG,6DAEL2mC,OAAQ,CACN/hD,EAAG,EACHob,EAAG,iCAEL2+B,WAAY,CACV/5C,EAAG,IACHob,EAAG,qCAEL4mC,eAAgB,CACdhiD,EAAG,EACHob,EAAG,yCAEL6mC,eAAgB,CACdjiD,EAAG,EACHob,EAAG,0CAGPuG,IAAK,CACHy/B,YAAa,CACXphD,EAAG1K,OAAO,uBACV8lB,EAAG,sDAEL4/B,oBAAqB,CACnBh7C,EAAG,IACHob,EAAG,4DAIT8mC,eAAgB,CACdl4C,KAAM,iBACNisC,QAAS,sEACTlxC,IAAK,0CACLizC,OAAQF,GAAOU,MACfH,UAAW,CACT8J,iBAAkB,CAChBniD,EAAG,IACHob,EAAG,yDAELgnC,iBAAkB,CAChBpiD,EAAG,IACHob,EAAG,6CAELinC,kBAAmB,CACjBriD,EAAG,IACHob,EAAG,iDAELknC,kBAAmB,CACjBtiD,EAAG,IACHob,EAAG,wCAELmnC,qBAAsB,CACpBviD,EAAG,KACHob,EAAG,8EAELonC,qBAAsB,CACpBxiD,EAAG,KACHob,EAAG,0EAELqnC,0BAA2B,CACzBziD,EAAG,MACHob,EAAG,sEAEL6N,IAAK,CACHjpB,EAAG,EACHob,EAAG,8BAELsnC,IAAK,CACH1iD,EAAG,EACHob,EAAG,8BAELunC,IAAK,CACH3iD,EAAG,EACHob,EAAG,8BAEL8+B,YAAa,CACXl6C,EAAG,IACHob,EAAG,sCAELwnC,QAAS,CACP5iD,EAAG,KACHob,EAAG,mCAGPuG,IAAK,CACHy/B,YAAa,CACXphD,EAAG1K,OAAO,uBACV8lB,EAAG,uDAEL4/B,oBAAqB,CACnBh7C,EAAG,IACHob,EAAG,4DAITynC,WAAY,CACV74C,KAAM,aACNisC,QACE,0FACFlxC,IAAK,0CACLizC,OAAQF,GAAOU,MACfH,UAAW,CACT8J,iBAAkB,CAChBniD,EAAG,KACHob,EAAG,0BAELgnC,iBAAkB,CAChBpiD,EAAG,KACHob,EAAG,0BAELinC,kBAAmB,CACjBriD,EAAG,KACHob,EAAG,0BAELknC,kBAAmB,CACjBtiD,EAAG,KACHob,EAAG,0BAELmnC,qBAAsB,CACpBviD,EAAG,KACHob,EAAG,0BAELonC,qBAAsB,CACpBxiD,EAAG,KACHob,EAAG,0BAELqnC,0BAA2B,CACzBziD,EAAG,KACHob,EAAG,4BAIT0nC,SAAU,CACR94C,KAAM,WACNisC,QAAS,2EACTlxC,IAAK,0CACLizC,OAAQF,GAAOU,MACfE,UAAW,CAAC,EACZL,UAAW,CACT0K,YAAa,CACX/iD,EAAG,EACHob,EAAG,kDAELumC,MAAO,CACL3hD,EAAG,IACHob,EAAG,2CAELwmC,MAAO,CACL5hD,EAAG,IACHob,EAAG,iDAELymC,UAAW,CACT7hD,EAAG,KACHob,EAAG,+CAEL0mC,cAAe,CACb9hD,EAAG,KACHob,EAAG,6DAEL0iC,cAAe,CACb99C,EAAG,GACHob,EAAG,iIAEL4nC,uBAAwB,CACtBhjD,EAAG,KACHob,EAAG,uEAELq+B,qBAAsB,CACpBz5C,EAAG,IACHob,EAAG,yDAELs+B,sBAAuB,CACrB15C,EAAG,IACHob,EAAG,yDAEL6nC,qBAAsB,CACpBjjD,EAAG,IACHob,EAAG,yDAELu+B,wBAAyB,CACvB35C,EAAG,MACHob,EAAG,sEAELo+B,sBAAuB,CACrBx5C,EAAG,IACHob,EAAG,mEAELw+B,yBAA0B,CACxB55C,EAAG,KACHob,EAAG,0EAEL0/B,yBAA0B,CACxB96C,EAAG,KACHob,EAAG,8EAELvlB,QAAS,CACPmK,EAAG,IACHob,EAAG,kCAEL8+B,YAAa,CACXl6C,EAAG,IACHob,EAAG,sCAEL8nC,QAAS,CACPljD,EAAG,EACHob,EAAG,kCAEL+nC,YAAa,CACXnjD,EAAG,EACHob,EAAG,sCAEL++B,MAAO,CACLn6C,EAAG,IACHob,EAAG,kCAITgoC,YAAa,CACXp5C,KAAM,cACNisC,QAAS,kCACTlxC,IAAK,0CACLizC,OAAQF,GAAOU,MACf72B,IAAK,CACHq5B,oBAAqB,CACnBh7C,EAAG,IACHob,EAAG,4DAITioC,OAAQ,CACNr5C,KAAM,SACNisC,QAAS,0DACTlxC,IAAK,0CACLizC,OAAQF,GAAOU,MACf8K,KAAM,CAAC,KAAM,KAAM,KAAM,OAE3BC,OAAQ,CACNv5C,KAAM,SACNisC,QAAS,sDACTlxC,IAAK,mGACLizC,OAAQF,GAAOU,MACf8K,KAAM,CAAC,KAAM,KAAM,KAAM,OAE3BE,aAAc,CACZx5C,KAAM,eACNisC,QAAS,kCACTlxC,IAAK,6GACLizC,OAAQF,GAAOU,MACf8K,KAAM,CAAC,OAETG,YAAa,CACXz5C,KAAM,cACNisC,QAAS,qDACTl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ADAue,IADAve,EAAIqe,EAAKU,EAAM,IACN,EAAI/e,IAAK,IACTqe,EAAK,IACL,EAAIre,IAAK,IACTue,EAAK,IACJ,GAAKve,IAAK,IACV2e,EAAK,IACN,GAAK3e,IAAK,GASnBwe,IADAxe,GADAse,IADAte,GADAgf,IADAhf,GADA4e,IADA5e,EAAIwe,EAAKF,EAAK,IACL,EAAIte,IAAK,IACTwe,EAAK,IACJ,EAAIxe,IAAK,IACT4e,EAAK,IACN,GAAK5e,IAAK,IACVgf,EAAM,IACN,GAAKhf,IAAK,GASnB6e,IADA7e,GADAye,IADAze,GADAyK,IADAzK,GADAif,IADAjf,EAAI6e,EAAMJ,EAAK,IACL,EAAIze,IAAK,IACT6e,EAAM,IACP,EAAI7e,IAAK,IACTif,EAAM,IACN,GAAKjf,IAAK,IACVyK,EAAK,IACJ,GAAKzK,IAAK,GASpBkf,IADAlf,GADA8e,IADA9e,GADA0e,IADA1e,GADA0K,IADA1K,EAAIkf,EAAMJ,EAAM,IACP,EAAI9e,IAAK,IACTkf,EAAM,IACN,EAAIlf,IAAK,IACT0K,EAAK,IACJ,GAAK1K,IAAK,IACV0e,EAAK,IACL,GAAK1e,IAAK,GASpBqe,IADAre,GADA0K,IADA1K,GADAyK,IADAzK,GADAse,IADAte,EAAIqe,EAAK3T,EAAK,IACL,EAAI1K,IAAK,IACTqe,EAAK,IACL,EAAIre,IAAK,IACTse,EAAK,IACL,GAAKte,IAAK,IACVyK,EAAK,IACL,GAAKzK,IAAK,GASnBwe,IADAxe,GADAue,IADAve,GADA0e,IADA1e,GADAye,IADAze,EAAIwe,EAAKD,EAAK,IACL,EAAIve,IAAK,IACTwe,EAAK,IACL,EAAIxe,IAAK,IACTye,EAAK,IACL,GAAKze,IAAK,IACV0e,EAAK,IACL,GAAK1e,IAAK,GASnB6e,IADA7e,GADA4e,IADA5e,GADA2e,IADA3e,GADA8e,IADA9e,EAAI6e,EAAMD,EAAK,IACL,EAAI5e,IAAK,IACT6e,EAAM,IACP,EAAI7e,IAAK,IACT8e,EAAM,IACN,GAAK9e,IAAK,IACV2e,EAAK,IACJ,GA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","sources":["../node_modules/@ethereumjs/util/src/account.ts","../node_modules/@ethereumjs/util/src/address.ts","../node_modules/@ethereumjs/util/src/asyncEventEmitter.ts","../node_modules/@ethereumjs/util/src/bytes.ts","../node_modules/@ethereumjs/util/src/constants.ts","../node_modules/@ethereumjs/util/src/encoding.ts","../node_modules/@ethereumjs/util/src/helpers.ts","../node_modules/@ethereumjs/util/src/index.ts","../node_modules/@ethereumjs/util/src/internal.ts","../node_modules/@ethereumjs/util/src/lock.ts","../node_modules/@ethereumjs/util/src/provider.ts","../node_modules/@ethereumjs/util/src/signature.ts","../node_modules/@ethereumjs/util/src/types.ts","../node_modules/@ethereumjs/util/src/units.ts","../node_modules/@ethereumjs/util/src/withdrawal.ts","../node_modules/@metamask/abi-utils/src/abi.ts","../node_modules/@metamask/abi-utils/src/errors.ts","../node_modules/@metamask/abi-utils/src/index.ts","../node_modules/@metamask/abi-utils/src/iterator.ts","../node_modules/@metamask/abi-utils/src/packer.ts","../node_modules/@metamask/abi-utils/src/parsers/address.ts","../node_modules/@metamask/abi-utils/src/parsers/array.ts","../node_modules/@metamask/abi-utils/src/parsers/bool.ts","../node_modules/@metamask/abi-utils/src/parsers/bytes.ts","../node_modules/@metamask/abi-utils/src/parsers/fixed-bytes.ts","../node_modules/@metamask/abi-utils/src/parsers/function.ts","../node_modules/@metamask/abi-utils/src/parsers/index.ts","../node_modules/@metamask/abi-utils/src/parsers/number.ts","../node_modules/@metamask/abi-utils/src/parsers/string.ts","../node_modules/@metamask/abi-utils/src/parsers/tuple.ts","../node_modules/@metamask/abi-utils/src/types/index.ts","../node_modules/@metamask/abi-utils/src/utils/buffer.ts","../node_modules/@metamask/abi-utils/src/utils/index.ts","../node_modules/@metamask/eth-sig-util/src/encryption.ts","../node_modules/@metamask/eth-sig-util/src/index.ts","../node_modules/@metamask/eth-sig-util/src/personal-sign.ts","../node_modules/@metamask/eth-sig-util/src/sign-typed-data.ts","../node_modules/@metamask/eth-sig-util/src/utils.ts","../node_modules/@noble/curves/src/_shortw_utils.ts","../node_modules/@noble/curves/src/abstract/curve.ts","../node_modules/@noble/curves/src/abstract/hash-to-curve.ts","../node_modules/@noble/curves/src/abstract/modular.ts","../node_modules/@noble/curves/src/abstract/utils.ts","../node_modules/@noble/curves/src/abstract/weierstrass.ts","../node_modules/@noble/curves/src/secp256k1.ts","../node_modules/@noble/hashes/src/_sha2.ts","../node_modules/@noble/hashes/src/hmac.ts","../node_modules/@noble/hashes/src/sha256.ts","../node_modules/@stablelib/binary/binary.ts","../node_modules/@stablelib/chacha20poly1305/chacha20poly1305.ts","../node_modules/@stablelib/chacha/chacha.ts","../node_modules/@stablelib/constant-time/constant-time.ts","../node_modules/@stablelib/hash/hash.ts","../node_modules/@stablelib/hkdf/hkdf.ts","../node_modules/@stablelib/hmac/hmac.ts","../node_modules/@stablelib/int/int.ts","../node_modules/@stablelib/poly1305/poly1305.ts","../node_modules/@stablelib/random/random.ts","../node_modules/@stablelib/random/source/browser.ts","../node_modules/@stablelib/random/source/node.ts","../node_modules/@stablelib/random/source/system.ts","../node_modules/@stablelib/sha256/sha256.ts","../node_modules/@stablelib/wipe/wipe.ts","../node_modules/@stablelib/x25519/x25519.ts","../../../../src/constants/index.ts","../../../../src/constants/misc.ts","../../../../src/constants/time.ts","../../../src/index.ts","../../../../src/types/index.ts","../../../../src/types/watch.ts","../../../../src/utils/convert.ts","../../../../src/utils/delay.ts","../../../../src/utils/index.ts","../../../src/watch.ts","../node_modules/detect-browser/es/index.js","../../../src/jsonrpc.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/rlp/src/index.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/internal.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/helpers.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/bytes.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/constants.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/units.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/account.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/address.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/db.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/types.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/signature.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/kzg.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/blobs.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/provider.ts","../node_modules/crc/mjs/calculators/crc1.js","../node_modules/crc/mjs/create_buffer.js","../node_modules/crc/mjs/define_crc.js","../node_modules/crc/mjs/crc1.js","../node_modules/crc/mjs/calculators/crc8.js","../node_modules/crc/mjs/crc8.js","../node_modules/crc/mjs/calculators/crc81wire.js","../node_modules/crc/mjs/crc81wire.js","../node_modules/crc/mjs/calculators/crc8dvbs2.js","../node_modules/crc/mjs/crc8dvbs2.js","../node_modules/crc/mjs/calculators/crc16.js","../node_modules/crc/mjs/crc16.js","../node_modules/crc/mjs/calculators/crc16ccitt.js","../node_modules/crc/mjs/crc16ccitt.js","../node_modules/crc/mjs/calculators/crc16modbus.js","../node_modules/crc/mjs/crc16modbus.js","../node_modules/crc/mjs/crc16xmodem.js","../node_modules/crc/mjs/calculators/crc16xmodem.js","../node_modules/crc/mjs/calculators/crc16kermit.js","../node_modules/crc/mjs/crc16kermit.js","../node_modules/crc/mjs/calculators/crc24.js","../node_modules/crc/mjs/crc24.js","../node_modules/crc/mjs/calculators/crc32.js","../node_modules/crc/mjs/crc32.js","../node_modules/crc/mjs/calculators/crc32mpeg2.js","../node_modules/crc/mjs/crc32mpeg2.js","../node_modules/crc/mjs/calculators/crcjam.js","../node_modules/crc/mjs/crcjam.js","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/chains.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/enums.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/eips.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/hardforks.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/utils.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/common.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/types.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/util.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/baseTransaction.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/capabilities/eip1559.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/capabilities/legacy.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/capabilities/eip2718.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/capabilities/eip2930.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/eip1559Transaction.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/eip2930Transaction.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/constants.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/eip4844Transaction.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/legacyTransaction.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/transactionFactory.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/fromRpc.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@toruslabs/http-helpers/src/index.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/walletMidddleware.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/ethRpcMiddlewares.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/jrpcClient.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/walletConnectV2Utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/WalletConnectV2Provider.ts","../node_modules/@web3auth/ethereum-provider/src/providers/converter.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/ethPrivatekeyUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/constants.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/index.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/EthereumPrivateKeyProvider.ts","../node_modules/assert/build/assert.js","../node_modules/assert/build/internal/assert/assertion_error.js","../node_modules/assert/build/internal/errors.js","../node_modules/assert/build/internal/util/comparisons.js","../node_modules/decode-uri-component/index.js","../node_modules/define-properties/index.js","../node_modules/ethereum-cryptography/keccak.js","../node_modules/ethereum-cryptography/secp256k1.js","../node_modules/ethereum-cryptography/utils.js","../node_modules/filter-obj/index.js","../node_modules/for-each/index.js","../node_modules/has-tostringtag/shams.js","../node_modules/is-arguments/index.js","../node_modules/is-callable/index.js","../node_modules/is-generator-function/index.js","../node_modules/is-nan/implementation.js","../node_modules/is-nan/index.js","../node_modules/is-nan/polyfill.js","../node_modules/is-nan/shim.js","../node_modules/is-typed-array/index.js","../node_modules/jsonschema/lib/attribute.js","../node_modules/jsonschema/lib/helpers.js","../node_modules/jsonschema/lib/index.js","../node_modules/jsonschema/lib/scan.js","../node_modules/jsonschema/lib/validator.js","../node_modules/micro-ftch/index.js","../node_modules/object-is/implementation.js","../node_modules/object-is/index.js","../node_modules/object-is/polyfill.js","../node_modules/object-is/shim.js","../node_modules/object.assign/implementation.js","../node_modules/object.assign/polyfill.js","../node_modules/query-string/index.js","../node_modules/split-on-first/index.js","../node_modules/strict-uri-encode/index.js","../node_modules/tslib/tslib.es6.js","../node_modules/tweetnacl-util/nacl-util.js","../node_modules/tweetnacl/nacl-fast.js","../node_modules/util/support/isBufferBrowser.js","../node_modules/util/support/types.js","../node_modules/util/util.js","../node_modules/which-typed-array/index.js","../node_modules/available-typed-arrays/index.js","../../src/error.ts","../../src/utils.ts","../../src/struct.ts","../../src/structs/utilities.ts","../../src/structs/types.ts","../../src/structs/coercions.ts","../../src/structs/refinements.ts","../node_modules/uint8arrays/esm/src/alloc.js","../node_modules/uint8arrays/esm/src/concat.js","../node_modules/uint8arrays/esm/src/from-string.js","../node_modules/uint8arrays/esm/src/to-string.js","../node_modules/uint8arrays/esm/src/util/as-uint8array.js","../node_modules/multiformats/esm/vendor/base-x.js","../node_modules/multiformats/esm/src/bytes.js","../node_modules/multiformats/esm/src/bases/base.js","../node_modules/multiformats/esm/src/bases/identity.js","../node_modules/multiformats/esm/src/bases/base2.js","../node_modules/multiformats/esm/src/bases/base8.js","../node_modules/multiformats/esm/src/bases/base10.js","../node_modules/multiformats/esm/src/bases/base16.js","../node_modules/multiformats/esm/src/bases/base32.js","../node_modules/multiformats/esm/src/bases/base36.js","../node_modules/multiformats/esm/src/bases/base58.js","../node_modules/multiformats/esm/src/bases/base64.js","../node_modules/multiformats/esm/src/bases/base256emoji.js","../node_modules/multiformats/esm/vendor/varint.js","../node_modules/multiformats/esm/src/varint.js","../node_modules/multiformats/esm/src/hashes/digest.js","../node_modules/multiformats/esm/src/hashes/hasher.js","../node_modules/multiformats/esm/src/hashes/sha2-browser.js","../node_modules/multiformats/esm/src/hashes/identity.js","../node_modules/multiformats/esm/src/codecs/raw.js","../node_modules/multiformats/esm/src/codecs/json.js","../node_modules/multiformats/esm/src/cid.js","../node_modules/multiformats/esm/src/basics.js","../node_modules/uint8arrays/esm/src/util/bases.js"],"sourcesContent":["import { RLP } from '@ethereumjs/rlp'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\nimport { secp256k1 } from 'ethereum-cryptography/secp256k1'\nimport { bytesToHex } from 'ethereum-cryptography/utils'\n\nimport {\n  arrToBufArr,\n  bigIntToUnpaddedBuffer,\n  bufArrToArr,\n  bufferToBigInt,\n  bufferToHex,\n  toBuffer,\n  zeros,\n} from './bytes'\nimport { KECCAK256_NULL, KECCAK256_RLP } from './constants'\nimport { assertIsBuffer, assertIsHexString, assertIsString } from './helpers'\nimport { stripHexPrefix } from './internal'\n\nimport type { BigIntLike, BufferLike } from './types'\n\nconst _0n = BigInt(0)\n\nexport interface AccountData {\n  nonce?: BigIntLike\n  balance?: BigIntLike\n  storageRoot?: BufferLike\n  codeHash?: BufferLike\n}\n\nexport type AccountBodyBuffer = [Buffer, Buffer, Buffer | Uint8Array, Buffer | Uint8Array]\n\nexport class Account {\n  nonce: bigint\n  balance: bigint\n  storageRoot: Buffer\n  codeHash: Buffer\n\n  static fromAccountData(accountData: AccountData) {\n    const { nonce, balance, storageRoot, codeHash } = accountData\n\n    return new Account(\n      nonce !== undefined ? bufferToBigInt(toBuffer(nonce)) : undefined,\n      balance !== undefined ? bufferToBigInt(toBuffer(balance)) : undefined,\n      storageRoot !== undefined ? toBuffer(storageRoot) : undefined,\n      codeHash !== undefined ? toBuffer(codeHash) : undefined\n    )\n  }\n\n  public static fromRlpSerializedAccount(serialized: Buffer) {\n    const values = arrToBufArr(RLP.decode(Uint8Array.from(serialized)) as Uint8Array[]) as Buffer[]\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized account input. Must be array')\n    }\n\n    return this.fromValuesArray(values)\n  }\n\n  public static fromValuesArray(values: Buffer[]) {\n    const [nonce, balance, storageRoot, codeHash] = values\n\n    return new Account(bufferToBigInt(nonce), bufferToBigInt(balance), storageRoot, codeHash)\n  }\n\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating an Account from varying data types.\n   */\n  constructor(nonce = _0n, balance = _0n, storageRoot = KECCAK256_RLP, codeHash = KECCAK256_NULL) {\n    this.nonce = nonce\n    this.balance = balance\n    this.storageRoot = storageRoot\n    this.codeHash = codeHash\n\n    this._validate()\n  }\n\n  private _validate() {\n    if (this.nonce < _0n) {\n      throw new Error('nonce must be greater than zero')\n    }\n    if (this.balance < _0n) {\n      throw new Error('balance must be greater than zero')\n    }\n    if (this.storageRoot.length !== 32) {\n      throw new Error('storageRoot must have a length of 32')\n    }\n    if (this.codeHash.length !== 32) {\n      throw new Error('codeHash must have a length of 32')\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers for the account, in order.\n   */\n  raw(): Buffer[] {\n    return [\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.balance),\n      this.storageRoot,\n      this.codeHash,\n    ]\n  }\n\n  /**\n   * Returns the RLP serialization of the account as a `Buffer`.\n   */\n  serialize(): Buffer {\n    return Buffer.from(RLP.encode(bufArrToArr(this.raw())))\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is a contract.\n   */\n  isContract(): boolean {\n    return !this.codeHash.equals(KECCAK256_NULL)\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is empty complying to the definition of\n   * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n   * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n   */\n  isEmpty(): boolean {\n    return this.balance === _0n && this.nonce === _0n && this.codeHash.equals(KECCAK256_NULL)\n  }\n}\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexport const isValidAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  return /^0x[0-9a-fA-F]{40}$/.test(hexAddress)\n}\n\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nexport const toChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BigIntLike\n): string {\n  assertIsHexString(hexAddress)\n  const address = stripHexPrefix(hexAddress).toLowerCase()\n\n  let prefix = ''\n  if (eip1191ChainId !== undefined) {\n    const chainId = bufferToBigInt(toBuffer(eip1191ChainId))\n    prefix = chainId.toString() + '0x'\n  }\n\n  const buf = Buffer.from(prefix + address, 'utf8')\n  const hash = bytesToHex(keccak256(buf))\n  let ret = '0x'\n\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexport const isValidChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BigIntLike\n): boolean {\n  return isValidAddress(hexAddress) && toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress\n}\n\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexport const generateAddress = function (from: Buffer, nonce: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(nonce)\n\n  if (bufferToBigInt(nonce) === BigInt(0)) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    return Buffer.from(keccak256(RLP.encode(bufArrToArr([from, null] as any)))).slice(-20)\n  }\n\n  // Only take the lower 160bits of the hash\n  return Buffer.from(keccak256(RLP.encode(bufArrToArr([from, nonce])))).slice(-20)\n}\n\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexport const generateAddress2 = function (from: Buffer, salt: Buffer, initCode: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(salt)\n  assertIsBuffer(initCode)\n\n  if (from.length !== 20) {\n    throw new Error('Expected from to be of length 20')\n  }\n  if (salt.length !== 32) {\n    throw new Error('Expected salt to be of length 32')\n  }\n\n  const address = keccak256(\n    Buffer.concat([Buffer.from('ff', 'hex'), from, salt, keccak256(initCode)])\n  )\n\n  return toBuffer(address).slice(-20)\n}\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexport const isValidPrivate = function (privateKey: Buffer): boolean {\n  return secp256k1.utils.isValidPrivateKey(privateKey)\n}\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const isValidPublic = function (publicKey: Buffer, sanitize: boolean = false): boolean {\n  assertIsBuffer(publicKey)\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    // Automatically checks whether point is on curve\n    try {\n      secp256k1.ProjectivePoint.fromHex(Buffer.concat([Buffer.from([4]), publicKey]))\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n\n  if (!sanitize) {\n    return false\n  }\n\n  try {\n    secp256k1.ProjectivePoint.fromHex(publicKey)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const pubToAddress = function (pubKey: Buffer, sanitize: boolean = false): Buffer {\n  assertIsBuffer(pubKey)\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = Buffer.from(secp256k1.ProjectivePoint.fromHex(pubKey).toRawBytes(false).slice(1))\n  }\n  if (pubKey.length !== 64) {\n    throw new Error('Expected pubKey to be of length 64')\n  }\n  // Only take the lower 160bits of the hash\n  return Buffer.from(keccak256(pubKey)).slice(-20)\n}\nexport const publicToAddress = pubToAddress\n\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToPublic = function (privateKey: Buffer): Buffer {\n  assertIsBuffer(privateKey)\n  // skip the type flag and use the X, Y points\n  return Buffer.from(\n    secp256k1.ProjectivePoint.fromPrivateKey(privateKey).toRawBytes(false).slice(1)\n  )\n}\n\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToAddress = function (privateKey: Buffer): Buffer {\n  return publicToAddress(privateToPublic(privateKey))\n}\n\n/**\n * Converts a public key to the Ethereum format.\n */\nexport const importPublic = function (publicKey: Buffer): Buffer {\n  assertIsBuffer(publicKey)\n  if (publicKey.length !== 64) {\n    publicKey = Buffer.from(secp256k1.ProjectivePoint.fromHex(publicKey).toRawBytes(false).slice(1))\n  }\n  return publicKey\n}\n\n/**\n * Returns the zero address.\n */\nexport const zeroAddress = function (): string {\n  const addressLength = 20\n  const addr = zeros(addressLength)\n  return bufferToHex(addr)\n}\n\n/**\n * Checks if a given address is the zero address.\n */\nexport const isZeroAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  const zeroAddr = zeroAddress()\n  return zeroAddr === hexAddress\n}\n\nexport function accountBodyFromSlim(body: AccountBodyBuffer) {\n  const [nonce, balance, storageRoot, codeHash] = body\n  return [\n    nonce,\n    balance,\n    arrToBufArr(storageRoot).length === 0 ? KECCAK256_RLP : storageRoot,\n    arrToBufArr(codeHash).length === 0 ? KECCAK256_NULL : codeHash,\n  ]\n}\n\nconst emptyUint8Arr = new Uint8Array(0)\nexport function accountBodyToSlim(body: AccountBodyBuffer) {\n  const [nonce, balance, storageRoot, codeHash] = body\n  return [\n    nonce,\n    balance,\n    arrToBufArr(storageRoot).equals(KECCAK256_RLP) ? emptyUint8Arr : storageRoot,\n    arrToBufArr(codeHash).equals(KECCAK256_NULL) ? emptyUint8Arr : codeHash,\n  ]\n}\n\n/**\n * Converts a slim account (per snap protocol spec) to the RLP encoded version of the account\n * @param body Array of 4 Buffer-like items to represent the account\n * @returns RLP encoded version of the account\n */\nexport function accountBodyToRLP(body: AccountBodyBuffer, couldBeSlim = true) {\n  const accountBody = couldBeSlim ? accountBodyFromSlim(body) : body\n  return arrToBufArr(RLP.encode(accountBody))\n}\n","import {\n  generateAddress,\n  generateAddress2,\n  isValidAddress,\n  privateToAddress,\n  pubToAddress,\n} from './account'\nimport { bigIntToBuffer, bufferToBigInt, toBuffer, zeros } from './bytes'\n\n/**\n * Handling and generating Ethereum addresses\n */\nexport class Address {\n  public readonly buf: Buffer\n\n  constructor(buf: Buffer) {\n    if (buf.length !== 20) {\n      throw new Error('Invalid address length')\n    }\n    this.buf = buf\n  }\n\n  /**\n   * Returns the zero address.\n   */\n  static zero(): Address {\n    return new Address(zeros(20))\n  }\n\n  /**\n   * Returns an Address object from a hex-encoded string.\n   * @param str - Hex-encoded address\n   */\n  static fromString(str: string): Address {\n    if (!isValidAddress(str)) {\n      throw new Error('Invalid address')\n    }\n    return new Address(toBuffer(str))\n  }\n\n  /**\n   * Returns an address for a given public key.\n   * @param pubKey The two points of an uncompressed key\n   */\n  static fromPublicKey(pubKey: Buffer): Address {\n    if (!Buffer.isBuffer(pubKey)) {\n      throw new Error('Public key should be Buffer')\n    }\n    const buf = pubToAddress(pubKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Returns an address for a given private key.\n   * @param privateKey A private key must be 256 bits wide\n   */\n  static fromPrivateKey(privateKey: Buffer): Address {\n    if (!Buffer.isBuffer(privateKey)) {\n      throw new Error('Private key should be Buffer')\n    }\n    const buf = privateToAddress(privateKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Generates an address for a newly created contract.\n   * @param from The address which is creating this new address\n   * @param nonce The nonce of the from account\n   */\n  static generate(from: Address, nonce: bigint): Address {\n    if (typeof nonce !== 'bigint') {\n      throw new Error('Expected nonce to be a bigint')\n    }\n    return new Address(generateAddress(from.buf, bigIntToBuffer(nonce)))\n  }\n\n  /**\n   * Generates an address for a contract created using CREATE2.\n   * @param from The address which is creating this new address\n   * @param salt A salt\n   * @param initCode The init code of the contract being created\n   */\n  static generate2(from: Address, salt: Buffer, initCode: Buffer): Address {\n    if (!Buffer.isBuffer(salt)) {\n      throw new Error('Expected salt to be a Buffer')\n    }\n    if (!Buffer.isBuffer(initCode)) {\n      throw new Error('Expected initCode to be a Buffer')\n    }\n    return new Address(generateAddress2(from.buf, salt, initCode))\n  }\n\n  /**\n   * Is address equal to another.\n   */\n  equals(address: Address): boolean {\n    return this.buf.equals(address.buf)\n  }\n\n  /**\n   * Is address zero.\n   */\n  isZero(): boolean {\n    return this.equals(Address.zero())\n  }\n\n  /**\n   * True if address is in the address range defined\n   * by EIP-1352\n   */\n  isPrecompileOrSystemAddress(): boolean {\n    const address = bufferToBigInt(this.buf)\n    const rangeMin = BigInt(0)\n    const rangeMax = BigInt('0xffff')\n    return address >= rangeMin && address <= rangeMax\n  }\n\n  /**\n   * Returns hex encoding of address.\n   */\n  toString(): string {\n    return '0x' + this.buf.toString('hex')\n  }\n\n  /**\n   * Returns Buffer representation of address.\n   */\n  toBuffer(): Buffer {\n    return Buffer.from(this.buf)\n  }\n}\n","/**\n * Ported to Typescript from original implementation below:\n * https://github.com/ahultgren/async-eventemitter -- MIT licensed\n *\n * Type Definitions based on work by: patarapolw <https://github.com/patarapolw> -- MIT licensed\n * that was contributed to Definitely Typed below:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/async-eventemitter\n */\n\nimport { EventEmitter } from 'events'\ntype AsyncListener<T, R> =\n  | ((data: T, callback?: (result?: R) => void) => Promise<R>)\n  | ((data: T, callback?: (result?: R) => void) => void)\nexport interface EventMap {\n  [event: string]: AsyncListener<any, any>\n}\n\nasync function runInSeries(\n  context: any,\n  tasks: Array<(data: unknown, callback?: (error?: Error) => void) => void>,\n  data: unknown\n): Promise<void> {\n  let error: Error | undefined\n  for await (const task of tasks) {\n    try {\n      if (task.length < 2) {\n        //sync\n        task.call(context, data)\n      } else {\n        await new Promise<void>((resolve, reject) => {\n          task.call(context, data, (error) => {\n            if (error) {\n              reject(error)\n            } else {\n              resolve()\n            }\n          })\n        })\n      }\n    } catch (e: unknown) {\n      error = e as Error\n    }\n  }\n  if (error) {\n    throw error\n  }\n}\n\nexport class AsyncEventEmitter<T extends EventMap> extends EventEmitter {\n  emit<E extends keyof T>(event: E & string, ...args: Parameters<T[E]>) {\n    let [data, callback] = args\n    const self = this\n\n    let listeners = (self as any)._events[event] ?? []\n\n    // Optional data argument\n    if (callback === undefined && typeof data === 'function') {\n      callback = data\n      data = undefined\n    }\n\n    // Special treatment of internal newListener and removeListener events\n    if (event === 'newListener' || event === 'removeListener') {\n      data = {\n        event: data,\n        fn: callback,\n      }\n\n      callback = undefined\n    }\n\n    // A single listener is just a function not an array...\n    listeners = Array.isArray(listeners) ? listeners : [listeners]\n    runInSeries(self, listeners.slice(), data).then(callback).catch(callback)\n\n    return self.listenerCount(event) > 0\n  }\n\n  once<E extends keyof T>(event: E & string, listener: T[E]): this {\n    const self = this\n    let g: (...args: any[]) => void\n\n    if (typeof listener !== 'function') {\n      throw new TypeError('listener must be a function')\n    }\n\n    // Hack to support set arity\n    if (listener.length >= 2) {\n      g = function (e: E, next: any) {\n        self.removeListener(event, g as T[E])\n        void listener(e, next)\n      }\n    } else {\n      g = function (e: E) {\n        self.removeListener(event, g as T[E])\n        void listener(e, g)\n      }\n    }\n\n    self.on(event, g as T[E])\n\n    return self\n  }\n\n  first<E extends keyof T>(event: E & string, listener: T[E]): this {\n    let listeners = (this as any)._events[event] ?? []\n\n    // Contract\n    if (typeof listener !== 'function') {\n      throw new TypeError('listener must be a function')\n    }\n\n    // Listeners are not always an array\n    if (!Array.isArray(listeners)) {\n      ;(this as any)._events[event] = listeners = [listeners]\n    }\n\n    listeners.unshift(listener)\n\n    return this\n  }\n\n  before<E extends keyof T>(event: E & string, target: T[E], listener: T[E]): this {\n    return this.beforeOrAfter(event, target, listener)\n  }\n\n  after<E extends keyof T>(event: E & string, target: T[E], listener: T[E]): this {\n    return this.beforeOrAfter(event, target, listener, 'after')\n  }\n\n  private beforeOrAfter<E extends keyof T>(\n    event: E & string,\n    target: T[E],\n    listener: T[E],\n    beforeOrAfter?: string\n  ) {\n    let listeners = (this as any)._events[event] ?? []\n    let i\n    let index\n    const add = beforeOrAfter === 'after' ? 1 : 0\n\n    // Contract\n    if (typeof listener !== 'function') {\n      throw new TypeError('listener must be a function')\n    }\n    if (typeof target !== 'function') {\n      throw new TypeError('target must be a function')\n    }\n\n    // Listeners are not always an array\n    if (!Array.isArray(listeners)) {\n      ;(this as any)._events[event] = listeners = [listeners]\n    }\n\n    index = listeners.length\n\n    for (i = listeners.length; i--; ) {\n      if (listeners[i] === target) {\n        index = i + add\n        break\n      }\n    }\n\n    listeners.splice(index, 0, listener)\n\n    return this\n  }\n\n  on<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.on(event, listener)\n  }\n\n  addListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.addListener(event, listener)\n  }\n\n  prependListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.prependListener(event, listener)\n  }\n\n  prependOnceListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.prependOnceListener(event, listener)\n  }\n\n  removeAllListeners(event?: keyof T & string): this {\n    return super.removeAllListeners(event)\n  }\n\n  removeListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.removeListener(event, listener)\n  }\n\n  eventNames(): Array<keyof T & string> {\n    return super.eventNames() as keyof T & string[]\n  }\n\n  listeners<E extends keyof T>(event: E & string): Array<T[E]> {\n    return super.listeners(event) as T[E][]\n  }\n\n  listenerCount(event: keyof T & string): number {\n    return super.listenerCount(event)\n  }\n\n  getMaxListeners(): number {\n    return super.getMaxListeners()\n  }\n\n  setMaxListeners(maxListeners: number): this {\n    return super.setMaxListeners(maxListeners)\n  }\n}\n","import { assertIsArray, assertIsBuffer, assertIsHexString } from './helpers'\nimport { isHexPrefixed, isHexString, padToEven, stripHexPrefix } from './internal'\n\nimport type {\n  NestedBufferArray,\n  NestedUint8Array,\n  PrefixedHexString,\n  TransformableToArray,\n  TransformableToBuffer,\n} from './types'\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nexport const intToHex = function (i: number) {\n  if (!Number.isSafeInteger(i) || i < 0) {\n    throw new Error(`Received an invalid integer type: ${i}`)\n  }\n  return `0x${i.toString(16)}`\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nexport const intToBuffer = function (i: number) {\n  const hex = intToHex(i)\n  return Buffer.from(padToEven(hex.slice(2)), 'hex')\n}\n\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexport const zeros = function (bytes: number): Buffer {\n  return Buffer.allocUnsafe(bytes).fill(0)\n}\n\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nconst setLength = function (msg: Buffer, length: number, right: boolean) {\n  const buf = zeros(length)\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf)\n      return buf\n    }\n    return msg.slice(0, length)\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length)\n      return buf\n    }\n    return msg.slice(-length)\n  }\n}\n\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthLeft = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, false)\n}\n\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthRight = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, true)\n}\n\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nconst stripZeros = function (a: any): Buffer | number[] | string {\n  let first = a[0]\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1)\n    first = a[0]\n  }\n  return a\n}\n\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nexport const unpadBuffer = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return stripZeros(a) as Buffer\n}\n\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nexport const unpadArray = function (a: number[]): number[] {\n  assertIsArray(a)\n  return stripZeros(a) as number[]\n}\n\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nexport const unpadHexString = function (a: string): string {\n  assertIsHexString(a)\n  a = stripHexPrefix(a)\n  return ('0x' + stripZeros(a)) as string\n}\n\nexport type ToBufferInputTypes =\n  | PrefixedHexString\n  | number\n  | bigint\n  | Buffer\n  | Uint8Array\n  | number[]\n  | TransformableToArray\n  | TransformableToBuffer\n  | null\n  | undefined\n\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BigInt` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\nexport const toBuffer = function (v: ToBufferInputTypes): Buffer {\n  if (v === null || v === undefined) {\n    return Buffer.allocUnsafe(0)\n  }\n\n  if (Buffer.isBuffer(v)) {\n    return Buffer.from(v)\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Buffer.from(v as Uint8Array)\n  }\n\n  if (typeof v === 'string') {\n    if (!isHexString(v)) {\n      throw new Error(\n        `Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`\n      )\n    }\n    return Buffer.from(padToEven(stripHexPrefix(v)), 'hex')\n  }\n\n  if (typeof v === 'number') {\n    return intToBuffer(v)\n  }\n\n  if (typeof v === 'bigint') {\n    if (v < BigInt(0)) {\n      throw new Error(`Cannot convert negative bigint to buffer. Given: ${v}`)\n    }\n    let n = v.toString(16)\n    if (n.length % 2) n = '0' + n\n    return Buffer.from(n, 'hex')\n  }\n\n  if (v.toArray) {\n    // converts a BN to a Buffer\n    return Buffer.from(v.toArray())\n  }\n\n  if (v.toBuffer) {\n    return Buffer.from(v.toBuffer())\n  }\n\n  throw new Error('invalid type')\n}\n\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexport const bufferToHex = function (buf: Buffer): string {\n  buf = toBuffer(buf)\n  return '0x' + buf.toString('hex')\n}\n\n/**\n * Converts a {@link Buffer} to a {@link bigint}\n */\nexport function bufferToBigInt(buf: Buffer) {\n  const hex = bufferToHex(buf)\n  if (hex === '0x') {\n    return BigInt(0)\n  }\n  return BigInt(hex)\n}\n\n/**\n * Converts a {@link bigint} to a {@link Buffer}\n */\nexport function bigIntToBuffer(num: bigint) {\n  return toBuffer('0x' + num.toString(16))\n}\n\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexport const bufferToInt = function (buf: Buffer): number {\n  const res = Number(bufferToBigInt(buf))\n  if (!Number.isSafeInteger(res)) throw new Error('Number exceeds 53 bits')\n  return res\n}\n\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BigInt`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexport const fromSigned = function (num: Buffer): bigint {\n  return BigInt.asIntN(256, bufferToBigInt(num))\n}\n\n/**\n * Converts a `BigInt` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexport const toUnsigned = function (num: bigint): Buffer {\n  return bigIntToBuffer(BigInt.asUintN(256, num))\n}\n\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexport const addHexPrefix = function (str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n\n  return isHexPrefixed(str) ? str : '0x' + str\n}\n\n/**\n * Shortens a string  or buffer's hex string representation to maxLength (default 50).\n *\n * Examples:\n *\n * Input:  '657468657265756d000000000000000000000000000000000000000000000000'\n * Output: '657468657265756d0000000000000000000000000000000000…'\n */\nexport function short(buffer: Buffer | string, maxLength: number = 50): string {\n  const bufferStr = Buffer.isBuffer(buffer) ? buffer.toString('hex') : buffer\n  if (bufferStr.length <= maxLength) {\n    return bufferStr\n  }\n  return bufferStr.slice(0, maxLength) + '…'\n}\n\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\nexport const toUtf8 = function (hex: string): string {\n  const zerosRegexp = /^(00)+|(00)+$/g\n  hex = stripHexPrefix(hex)\n  if (hex.length % 2 !== 0) {\n    throw new Error('Invalid non-even hex string input for toUtf8() provided')\n  }\n  const bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex')\n\n  return bufferVal.toString('utf8')\n}\n\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexport const baToJSON = function (ba: any): any {\n  if (Buffer.isBuffer(ba)) {\n    return `0x${ba.toString('hex')}`\n  } else if (ba instanceof Array) {\n    const array = []\n    for (let i = 0; i < ba.length; i++) {\n      array.push(baToJSON(ba[i]))\n    }\n    return array\n  }\n}\n\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\nexport const validateNoLeadingZeroes = function (values: { [key: string]: Buffer | undefined }) {\n  for (const [k, v] of Object.entries(values)) {\n    if (v !== undefined && v.length > 0 && v[0] === 0) {\n      throw new Error(`${k} cannot have leading zeroes, received: ${v.toString('hex')}`)\n    }\n  }\n}\n\n/**\n * Converts a {@link Uint8Array} or {@link NestedUint8Array} to {@link Buffer} or {@link NestedBufferArray}\n */\nexport function arrToBufArr(arr: Uint8Array): Buffer\nexport function arrToBufArr(arr: NestedUint8Array): NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray {\n  if (!Array.isArray(arr)) {\n    return Buffer.from(arr)\n  }\n  return arr.map((a) => arrToBufArr(a))\n}\n\n/**\n * Converts a {@link Buffer} or {@link NestedBufferArray} to {@link Uint8Array} or {@link NestedUint8Array}\n */\nexport function bufArrToArr(arr: Buffer): Uint8Array\nexport function bufArrToArr(arr: NestedBufferArray): NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array {\n  if (!Array.isArray(arr)) {\n    return Uint8Array.from(arr ?? [])\n  }\n  return arr.map((a) => bufArrToArr(a))\n}\n\n/**\n * Converts a {@link bigint} to a `0x` prefixed hex string\n */\nexport const bigIntToHex = (num: bigint) => {\n  return '0x' + num.toString(16)\n}\n\n/**\n * Convert value from bigint to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nexport function bigIntToUnpaddedBuffer(value: bigint): Buffer {\n  return unpadBuffer(bigIntToBuffer(value))\n}\n\nexport function intToUnpaddedBuffer(value: number): Buffer {\n  return unpadBuffer(intToBuffer(value))\n}\n","import { Buffer } from 'buffer'\nimport { secp256k1 } from 'ethereum-cryptography/secp256k1'\n\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = BigInt('0xffffffffffffffff')\n\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = BigInt(\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\n)\n\n/**\n * The max integer that the evm can handle (2^256-1) as a bigint\n * 2^256-1 equals to 340282366920938463463374607431768211455\n * We use literal value instead of calculated value for compatibility issue.\n */\nexport const MAX_INTEGER_BIGINT = BigInt(\n  '115792089237316195423570985008687907853269984665640564039457584007913129639935'\n)\n\nexport const SECP256K1_ORDER = secp256k1.CURVE.n\nexport const SECP256K1_ORDER_DIV_2 = secp256k1.CURVE.n / BigInt(2)\n\n/**\n * 2^256\n */\nexport const TWO_POW256 = BigInt(\n  '0x10000000000000000000000000000000000000000000000000000000000000000'\n)\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL = Buffer.from(KECCAK256_NULL_S, 'hex')\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY_S =\n  '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY = Buffer.from(KECCAK256_RLP_ARRAY_S, 'hex')\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP = Buffer.from(KECCAK256_RLP_S, 'hex')\n\n/**\n *  RLP encoded empty string\n */\nexport const RLP_EMPTY_STRING = Buffer.from([0x80])\n\nexport const MAX_WITHDRAWALS_PER_PAYLOAD = 16\n","// Reference: https://ethereum.org/en/developers/docs/data-structures-and-encoding/patricia-merkle-trie/\n/**\n *\n * @param s byte sequence\n * @returns boolean indicating if input hex nibble sequence has terminator indicating leaf-node\n *          terminator is represented with 16 because a nibble ranges from 0 - 15(f)\n */\nexport const hasTerminator = (nibbles: Uint8Array) => {\n  return nibbles.length > 0 && nibbles[nibbles.length - 1] === 16\n}\n\nexport const nibblesToBytes = (nibbles: Uint8Array, bytes: Uint8Array) => {\n  for (let bi = 0, ni = 0; ni < nibbles.length; bi += 1, ni += 2) {\n    bytes[bi] = (nibbles[ni] << 4) | nibbles[ni + 1]\n  }\n}\n\nexport const nibblesToCompactBytes = (nibbles: Uint8Array) => {\n  let terminator = 0\n  if (hasTerminator(nibbles)) {\n    terminator = 1\n    // Remove the terminator from the sequence\n    nibbles = nibbles.subarray(0, nibbles.length - 1)\n  }\n  const buf = new Uint8Array(nibbles.length / 2 + 1)\n  // Shift the terminator info into the first nibble of buf[0]\n  buf[0] = terminator << 5\n  // If odd length, then add that flag into the first nibble and put the odd nibble to\n  // second part of buf[0] which otherwise will be left padded with a 0\n  if ((nibbles.length & 1) === 1) {\n    buf[0] |= 1 << 4\n    buf[0] |= nibbles[0]\n    nibbles = nibbles.subarray(1)\n  }\n  // create bytes out of the rest even nibbles\n  nibblesToBytes(nibbles, buf.subarray(1))\n  return buf\n}\n\nexport const bytesToNibbles = (str: Uint8Array) => {\n  const l = str.length * 2 + 1\n  const nibbles = new Uint8Array(l)\n  for (let i = 0; i < str.length; i++) {\n    const b = str[i]\n    nibbles[i * 2] = b / 16\n    nibbles[i * 2 + 1] = b % 16\n  }\n  // This will get removed from calling function if the first nibble\n  // indicates that terminator is not present\n  nibbles[l - 1] = 16\n  return nibbles\n}\n\nexport const compactBytesToNibbles = (compact: Uint8Array) => {\n  if (compact.length === 0) {\n    return compact\n  }\n  let base = bytesToNibbles(compact)\n  // delete terminator flag if terminator flag was not in first nibble\n  if (base[0] < 2) {\n    base = base.subarray(0, base.length - 1)\n  }\n  // chop the terminator nibble and the even padding (if there is one)\n  // i.e.  chop 2 left nibbles when even else 1 when odd\n  const chop = 2 - (base[0] & 1)\n  return base.subarray(chop)\n}\n\n/**\n * A test helper to generates compact path for a subset of key bytes\n *\n * TODO: Commenting the code for now as this seems to be helper function\n * (from geth codebase )\n *\n */\n//\n//\n// export const getPathTo = (tillBytes: number, key: Buffer) => {\n//   const hexNibbles = bytesToNibbles(key).subarray(0, tillBytes)\n//   // Remove the terminator if its there, although it would be there only if tillBytes >= key.length\n//   // This seems to be a test helper to generate paths so correctness of this isn't necessary\n//   hexNibbles[hexNibbles.length - 1] = 0\n//   const compactBytes = nibblesToCompactBytes(hexNibbles)\n//   return [Buffer.from(compactBytes)]\n// }\n","import { isHexString } from './internal'\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function (input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBuffer = function (input: Buffer): void {\n  if (!Buffer.isBuffer(input)) {\n    const msg = `This method only supports Buffer but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function (input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function (input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n","/**\n * Constants\n */\nexport * from './constants'\n\n/**\n * Units helpers\n */\nexport * from './units'\n\n/**\n * Account class and helper functions\n */\nexport * from './account'\n\n/**\n * Address type\n */\nexport * from './address'\n\n/**\n * Withdrawal type\n */\nexport * from './withdrawal'\n\n/**\n * ECDSA signature\n */\nexport * from './signature'\n\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\nexport * from './bytes'\n\n/**\n * Helpful TypeScript types\n */\nexport * from './types'\n\n/**\n * Helper function for working with compact encoding\n */\nexport * from './encoding'\n\n/**\n * Export ethjs-util methods\n */\nexport * from './asyncEventEmitter'\nexport {\n  arrayContainsArray,\n  fromAscii,\n  fromUtf8,\n  getBinarySize,\n  getKeys,\n  isHexPrefixed,\n  isHexString,\n  padToEven,\n  stripHexPrefix,\n  toAscii,\n} from './internal'\nexport * from './lock'\nexport * from './provider'\n","/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nexport function isHexPrefixed(str: string): boolean {\n  if (typeof str !== 'string') {\n    throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`)\n  }\n\n  return str[0] === '0' && str[1] === 'x'\n}\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str: string): string => {\n  if (typeof str !== 'string')\n    throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`)\n\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value: string): string {\n  let a = value\n\n  if (typeof a !== 'string') {\n    throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`)\n  }\n\n  if (a.length % 2) a = `0${a}`\n\n  return a\n}\n\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nexport function getBinarySize(str: string) {\n  if (typeof str !== 'string') {\n    throw new Error(`[getBinarySize] method requires input type 'string', received ${typeof str}`)\n  }\n\n  return Buffer.byteLength(str, 'utf8')\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nexport function arrayContainsArray(\n  superset: unknown[],\n  subset: unknown[],\n  some?: boolean\n): boolean {\n  if (Array.isArray(superset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof superset}'`\n    )\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof subset}'`\n    )\n  }\n\n  return subset[some === true ? 'some' : 'every']((value) => superset.indexOf(value) >= 0)\n}\n\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nexport function toAscii(hex: string): string {\n  let str = ''\n  let i = 0\n  const l = hex.length\n\n  if (hex.substring(0, 2) === '0x') i = 2\n\n  for (; i < l; i += 2) {\n    const code = parseInt(hex.substr(i, 2), 16)\n    str += String.fromCharCode(code)\n  }\n\n  return str\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nexport function fromUtf8(stringValue: string) {\n  const str = Buffer.from(stringValue, 'utf8')\n\n  return `0x${padToEven(str.toString('hex')).replace(/^0+|0+$/g, '')}`\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nexport function fromAscii(stringValue: string) {\n  let hex = ''\n  for (let i = 0; i < stringValue.length; i++) {\n    const code = stringValue.charCodeAt(i)\n    const n = code.toString(16)\n    hex += n.length < 2 ? `0${n}` : n\n  }\n\n  return `0x${hex}`\n}\n\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nexport function getKeys(params: Record<string, string>[], key: string, allowEmpty?: boolean) {\n  if (!Array.isArray(params)) {\n    throw new Error(`[getKeys] method expects input 'params' to be an array, got ${typeof params}`)\n  }\n  if (typeof key !== 'string') {\n    throw new Error(\n      `[getKeys] method expects input 'key' to be type 'string', got ${typeof params}`\n    )\n  }\n\n  const result = []\n\n  for (let i = 0; i < params.length; i++) {\n    let value = params[i][key]\n    if (allowEmpty === true && !value) {\n      value = ''\n    } else if (typeof value !== 'string') {\n      throw new Error(`invalid abi - expected type 'string', received ${typeof value}`)\n    }\n    result.push(value)\n  }\n\n  return result\n}\n\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nexport function isHexString(value: string, length?: number): boolean {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) return false\n\n  if (typeof length !== 'undefined' && length > 0 && value.length !== 2 + 2 * length) return false\n\n  return true\n}\n","// Based on https://github.com/jsoendermann/semaphore-async-await/blob/master/src/Semaphore.ts\nexport class Lock {\n  private permits: number = 1\n  private promiseResolverQueue: Array<(v: boolean) => void> = []\n\n  /**\n   * Returns a promise used to wait for a permit to become available. This method should be awaited on.\n   * @returns  A promise that gets resolved when execution is allowed to proceed.\n   */\n  public async acquire(): Promise<boolean> {\n    if (this.permits > 0) {\n      this.permits -= 1\n      return Promise.resolve(true)\n    }\n\n    // If there is no permit available, we return a promise that resolves once the semaphore gets\n    // signaled enough times that permits is equal to one.\n    return new Promise<boolean>((resolver) => this.promiseResolverQueue.push(resolver))\n  }\n\n  /**\n   * Increases the number of permits by one. If there are other functions waiting, one of them will\n   * continue to execute in a future iteration of the event loop.\n   */\n  public release(): void {\n    this.permits += 1\n\n    if (this.permits > 1 && this.promiseResolverQueue.length > 0) {\n      // eslint-disable-next-line no-console\n      console.warn('Lock.permits should never be > 0 when there is someone waiting.')\n    } else if (this.permits === 1 && this.promiseResolverQueue.length > 0) {\n      // If there is someone else waiting, immediately consume the permit that was released\n      // at the beginning of this function and let the waiting function resume.\n      this.permits -= 1\n\n      const nextResolver = this.promiseResolverQueue.shift()\n      if (nextResolver) {\n        nextResolver(true)\n      }\n    }\n  }\n}\n","import fetch from 'micro-ftch'\n\ntype rpcParams = {\n  method: string\n  params: (string | boolean | number)[]\n}\nexport const fetchFromProvider = async (url: string, params: rpcParams) => {\n  const res = await fetch(url, {\n    headers: {\n      'content-type': 'application/json',\n    },\n    type: 'json',\n    data: {\n      method: params.method,\n      params: params.params,\n      jsonrpc: '2.0',\n      id: 1,\n    },\n  })\n\n  return res.result\n}\n\nexport const getProvider = (provider: string | any) => {\n  if (typeof provider === 'string') {\n    return provider\n  } else if (provider?.connection?.url !== undefined) {\n    return provider.connection.url\n  } else {\n    throw new Error('Must provide valid provider URL or Web3Provider')\n  }\n}\n","import { keccak256 } from 'ethereum-cryptography/keccak'\nimport { secp256k1 } from 'ethereum-cryptography/secp256k1'\n\nimport { bufferToBigInt, bufferToHex, bufferToInt, setLengthLeft, toBuffer } from './bytes'\nimport { SECP256K1_ORDER, SECP256K1_ORDER_DIV_2 } from './constants'\nimport { assertIsBuffer } from './helpers'\n\nexport interface ECDSASignature {\n  v: bigint\n  r: Buffer\n  s: Buffer\n}\n\n/**\n * Returns the ECDSA signature of a message hash.\n *\n * If `chainId` is provided assume an EIP-155-style signature and calculate the `v` value\n * accordingly, otherwise return a \"static\" `v` just derived from the `recovery` bit\n */\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId?: bigint): ECDSASignature {\n  const sig = secp256k1.sign(msgHash, privateKey)\n  const buf = sig.toCompactRawBytes()\n  const r = Buffer.from(buf.slice(0, 32))\n  const s = Buffer.from(buf.slice(32, 64))\n\n  const v =\n    chainId === undefined\n      ? BigInt(sig.recovery! + 27)\n      : BigInt(sig.recovery! + 35) + BigInt(chainId) * BigInt(2)\n\n  return { r, s, v }\n}\n\nfunction calculateSigRecovery(v: bigint, chainId?: bigint): bigint {\n  if (v === BigInt(0) || v === BigInt(1)) return v\n\n  if (chainId === undefined) {\n    return v - BigInt(27)\n  }\n  return v - (chainId * BigInt(2) + BigInt(35))\n}\n\nfunction isValidSigRecovery(recovery: bigint): boolean {\n  return recovery === BigInt(0) || recovery === BigInt(1)\n}\n\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nexport const ecrecover = function (\n  msgHash: Buffer,\n  v: bigint,\n  r: Buffer,\n  s: Buffer,\n  chainId?: bigint\n): Buffer {\n  const signature = Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32)], 64)\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  const sig = secp256k1.Signature.fromCompact(signature).addRecoveryBit(Number(recovery))\n  const senderPubKey = sig.recoverPublicKey(msgHash)\n  return Buffer.from(senderPubKey.toRawBytes(false).slice(1))\n}\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toRpcSig = function (v: bigint, r: Buffer, s: Buffer, chainId?: bigint): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32), toBuffer(v)]))\n}\n\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toCompactSig = function (v: bigint, r: Buffer, s: Buffer, chainId?: bigint): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  let ss = s\n  if ((v > BigInt(28) && v % BigInt(2) === BigInt(1)) || v === BigInt(1) || v === BigInt(28)) {\n    ss = Buffer.from(s)\n    ss[0] |= 0x80\n  }\n\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(ss, 32)]))\n}\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n *\n * NOTE: For an extracted `v` value < 27 (see Geth bug https://github.com/ethereum/go-ethereum/issues/2053)\n * `v + 27` is returned for the `v` value\n * NOTE: After EIP1559, `v` could be `0` or `1` but this function assumes\n * it's a signed message (EIP-191 or EIP-712) adding `27` at the end. Remove if needed.\n */\nexport const fromRpcSig = function (sig: string): ECDSASignature {\n  const buf: Buffer = toBuffer(sig)\n\n  let r: Buffer\n  let s: Buffer\n  let v: bigint\n  if (buf.length >= 65) {\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToBigInt(buf.slice(64))\n  } else if (buf.length === 64) {\n    // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = BigInt(bufferToInt(buf.slice(32, 33)) >> 7)\n    s[0] &= 0x7f\n  } else {\n    throw new Error('Invalid signature length')\n  }\n\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v = v + BigInt(27)\n  }\n\n  return {\n    v,\n    r,\n    s,\n  }\n}\n\n/**\n * Validate a ECDSA signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexport const isValidSignature = function (\n  v: bigint,\n  r: Buffer,\n  s: Buffer,\n  homesteadOrLater: boolean = true,\n  chainId?: bigint\n): boolean {\n  if (r.length !== 32 || s.length !== 32) {\n    return false\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false\n  }\n\n  const rBigInt = bufferToBigInt(r)\n  const sBigInt = bufferToBigInt(s)\n\n  if (\n    rBigInt === BigInt(0) ||\n    rBigInt >= SECP256K1_ORDER ||\n    sBigInt === BigInt(0) ||\n    sBigInt >= SECP256K1_ORDER\n  ) {\n    return false\n  }\n\n  if (homesteadOrLater && sBigInt >= SECP256K1_ORDER_DIV_2) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexport const hashPersonalMessage = function (message: Buffer): Buffer {\n  assertIsBuffer(message)\n  const prefix = Buffer.from(`\\u0019Ethereum Signed Message:\\n${message.length}`, 'utf-8')\n  return Buffer.from(keccak256(Buffer.concat([prefix, message])))\n}\n","import { bufferToBigInt, bufferToHex, toBuffer } from './bytes'\nimport { isHexString } from './internal'\n\nimport type { Address } from './address'\nimport type { ToBufferInputTypes } from './bytes'\n\n/*\n * A type that represents an input that can be converted to a BigInt.\n */\nexport type BigIntLike = bigint | PrefixedHexString | number | Buffer\n\n/*\n * A type that represents an input that can be converted to a Buffer.\n */\nexport type BufferLike =\n  | Buffer\n  | Uint8Array\n  | number[]\n  | number\n  | bigint\n  | TransformableToBuffer\n  | PrefixedHexString\n\n/*\n * A type that represents a `0x`-prefixed hex string.\n */\nexport type PrefixedHexString = string\n\n/**\n * A type that represents an input that can be converted to an Address.\n */\nexport type AddressLike = Address | Buffer | PrefixedHexString\n\n/*\n * A type that represents an object that has a `toArray()` method.\n */\nexport interface TransformableToArray {\n  toArray(): Uint8Array\n  toBuffer?(): Buffer\n}\n\n/*\n * A type that represents an object that has a `toBuffer()` method.\n */\nexport interface TransformableToBuffer {\n  toBuffer(): Buffer\n  toArray?(): Uint8Array\n}\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\nexport type NestedBufferArray = Array<Buffer | NestedBufferArray>\n\n/**\n * Type output options\n */\nexport enum TypeOutput {\n  Number,\n  BigInt,\n  Buffer,\n  PrefixedHexString,\n}\n\nexport type TypeOutputReturnType = {\n  [TypeOutput.Number]: number\n  [TypeOutput.BigInt]: bigint\n  [TypeOutput.Buffer]: Buffer\n  [TypeOutput.PrefixedHexString]: PrefixedHexString\n}\n\n/**\n * Convert an input to a specified type.\n * Input of null/undefined returns null/undefined regardless of the output type.\n * @param input value to convert\n * @param outputType type to output\n */\nexport function toType<T extends TypeOutput>(input: null, outputType: T): null\nexport function toType<T extends TypeOutput>(input: undefined, outputType: T): undefined\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T]\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T] | undefined | null {\n  if (input === null) {\n    return null\n  }\n  if (input === undefined) {\n    return undefined\n  }\n\n  if (typeof input === 'string' && !isHexString(input)) {\n    throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`)\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error(\n      'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n    )\n  }\n\n  const output = toBuffer(input)\n\n  switch (outputType) {\n    case TypeOutput.Buffer:\n      return output as TypeOutputReturnType[T]\n    case TypeOutput.BigInt:\n      return bufferToBigInt(output) as TypeOutputReturnType[T]\n    case TypeOutput.Number: {\n      const bigInt = bufferToBigInt(output)\n      if (bigInt > BigInt(Number.MAX_SAFE_INTEGER)) {\n        throw new Error(\n          'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)'\n        )\n      }\n      return Number(bigInt) as TypeOutputReturnType[T]\n    }\n    case TypeOutput.PrefixedHexString:\n      return bufferToHex(output) as TypeOutputReturnType[T]\n    default:\n      throw new Error('unknown outputType')\n  }\n}\n","/** Easy conversion from Gwei to wei */\nexport const GWEI_TO_WEI = BigInt(1000000000)\n","import { Address } from './address'\nimport { bigIntToHex } from './bytes'\nimport { TypeOutput, toType } from './types'\n\nimport type { AddressLike, BigIntLike } from './types'\n\n/**\n * Flexible input data type for EIP-4895 withdrawal data with amount in Gwei to\n * match CL representation and for eventual ssz withdrawalsRoot\n */\nexport type WithdrawalData = {\n  index: BigIntLike\n  validatorIndex: BigIntLike\n  address: AddressLike\n  amount: BigIntLike\n}\n\n/**\n * JSON RPC interface for EIP-4895 withdrawal data with amount in Gwei to\n * match CL representation and for eventual ssz withdrawalsRoot\n */\nexport interface JsonRpcWithdrawal {\n  index: string // QUANTITY - bigint 8 bytes\n  validatorIndex: string // QUANTITY - bigint 8 bytes\n  address: string // DATA, 20 Bytes  address to withdraw to\n  amount: string // QUANTITY - bigint amount in Gwei 8 bytes\n}\n\nexport type WithdrawalBuffer = [Buffer, Buffer, Buffer, Buffer]\n\n/**\n * Representation of EIP-4895 withdrawal data\n */\nexport class Withdrawal {\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating a Withdrawal object from varying data types.\n   * Its amount is in Gwei to match CL representation and for eventual ssz withdrawalsRoot\n   */\n  constructor(\n    public readonly index: bigint,\n    public readonly validatorIndex: bigint,\n    public readonly address: Address,\n    /**\n     * withdrawal amount in Gwei to match the CL repesentation and eventually ssz withdrawalsRoot\n     */\n    public readonly amount: bigint\n  ) {}\n\n  public static fromWithdrawalData(withdrawalData: WithdrawalData) {\n    const {\n      index: indexData,\n      validatorIndex: validatorIndexData,\n      address: addressData,\n      amount: amountData,\n    } = withdrawalData\n    const index = toType(indexData, TypeOutput.BigInt)\n    const validatorIndex = toType(validatorIndexData, TypeOutput.BigInt)\n    const address = new Address(toType(addressData, TypeOutput.Buffer))\n    const amount = toType(amountData, TypeOutput.BigInt)\n\n    return new Withdrawal(index, validatorIndex, address, amount)\n  }\n\n  public static fromValuesArray(withdrawalArray: WithdrawalBuffer) {\n    if (withdrawalArray.length !== 4) {\n      throw Error(`Invalid withdrawalArray length expected=4 actual=${withdrawalArray.length}`)\n    }\n    const [index, validatorIndex, address, amount] = withdrawalArray\n    return Withdrawal.fromWithdrawalData({ index, validatorIndex, address, amount })\n  }\n\n  /**\n   * Convert a withdrawal to a buffer array\n   * @param withdrawal the withdrawal to convert\n   * @returns buffer array of the withdrawal\n   */\n  public static toBufferArray(withdrawal: Withdrawal | WithdrawalData): WithdrawalBuffer {\n    const { index, validatorIndex, address, amount } = withdrawal\n    const indexBuffer =\n      toType(index, TypeOutput.BigInt) === BigInt(0)\n        ? Buffer.alloc(0)\n        : toType(index, TypeOutput.Buffer)\n    const validatorIndexBuffer =\n      toType(validatorIndex, TypeOutput.BigInt) === BigInt(0)\n        ? Buffer.alloc(0)\n        : toType(validatorIndex, TypeOutput.Buffer)\n    let addressBuffer\n    if (address instanceof Address) {\n      addressBuffer = (<Address>address).buf\n    } else {\n      addressBuffer = toType(address, TypeOutput.Buffer)\n    }\n    const amountBuffer =\n      toType(amount, TypeOutput.BigInt) === BigInt(0)\n        ? Buffer.alloc(0)\n        : toType(amount, TypeOutput.Buffer)\n\n    return [indexBuffer, validatorIndexBuffer, addressBuffer, amountBuffer]\n  }\n\n  raw() {\n    return Withdrawal.toBufferArray(this)\n  }\n\n  toValue() {\n    return {\n      index: this.index,\n      validatorIndex: this.validatorIndex,\n      address: this.address.buf,\n      amount: this.amount,\n    }\n  }\n\n  toJSON() {\n    return {\n      index: bigIntToHex(this.index),\n      validatorIndex: bigIntToHex(this.validatorIndex),\n      address: '0x' + this.address.buf.toString('hex'),\n      amount: bigIntToHex(this.amount),\n    }\n  }\n}\n","// ESLint gets confused by the nested list and tables in the docs, so we disable\n// the rule for this file.\n/* eslint-disable jsdoc/check-indentation, jsdoc/match-description */\n\nimport { assert, BytesLike, createBytes } from '@metamask/utils';\n\nimport { getErrorMessage, ParserError } from './errors';\nimport { pack, unpack } from './packer';\nimport { TypeMap } from './types';\n\n/**\n * Encode the data with the provided types. The types must be valid Solidity\n * ABI types.\n *\n * This will attempt to parse the values into the correct types. For example,\n * if you pass in a hex string for a `uint256`, it will be parsed into a\n * `bigint`. Regular strings are interpreted as UTF-8 strings. If you want to\n * pass in a hex string, you must pass it in as a `Uint8Array`, or use the\n * \"0x\"-prefix.\n *\n * It will also attempt to infer the types of the values. For example, if you\n * pass in a string for a `uint256`, it will result in a TypeScript compile-time\n * error. This does not work for all types, however. For example, if you use\n * nested arrays or tuples, the type will be inferred as `unknown`.\n *\n * The following types are supported:\n *\n * - `address`: A 20-byte Ethereum address.\n *   - As a 40-character-long hexadecimal string, starting with \"0x\".\n *   - As a 20-byte-long byte array, i.e., `Uint8Array`.\n * - `bool`: A boolean value.\n *   - As a boolean literal, i.e., `true` or `false`.\n *   - As the strings \"true\" or \"false\".\n * - `bytes(n)`: A dynamic byte array.\n *   - As a hexadecimal string, starting with \"0x\".\n *   - As a byte array, i.e., `Uint8Array`.\n *   - As a regular string, which will be interpreted as UTF-8.\n * - `function`: A Solidity function.\n *   - As a 48-character-long hexadecimal string, starting with \"0x\".\n *   - As a 24-byte-long byte array, i.e., `Uint8Array`.\n *   - As a {@link SolidityFunction} object.\n * - `int(n)`: A signed integer.\n *   - As a number.\n *   - As a `bigint`.\n *   - As a hexadecimal string, starting with \"0x\".\n * - `string`: A dynamic UTF-8 string.\n *   - As a regular string.\n *   - As a hexadecimal string, starting with \"0x\".\n *   - As a byte array, i.e., `Uint8Array`.\n * - `tuple`: A tuple of values.\n *   - As an array of values.\n * - `uint(n)`: An unsigned integer.\n *   - As a number.\n *   - As a `bigint`.\n *   - As a hexadecimal string, starting with \"0x\".\n *\n * @example\n * ```typescript\n * import { encode, decode } from '@metamask/abi-utils';\n *\n * const types = ['uint256', 'string'];\n * const encoded = encode(types, [42, 'Hello, world!']);\n * const decoded = decode(types, encoded);\n *\n * console.log(decoded); // [42n, 'Hello, world!']\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html\n * @param types - The types to encode.\n * @param values - The values to encode. This array must have the same length as\n * the types array.\n * @param packed - Whether to use the non-standard packed mode. Defaults to\n * `false`.\n * @param tight - Whether to pack the values tightly. When enabled, the values\n * will be packed without any padding. This matches the behaviour of\n * `ethereumjs-abi`. Defaults to `false`.\n * @returns The ABI encoded bytes.\n */\nexport const encode = <Type extends readonly string[]>(\n  types: Type,\n  values: TypeMap<Type, 'input'>,\n  packed?: boolean,\n  tight?: boolean,\n): Uint8Array => {\n  try {\n    return pack({ types, values, packed, tight });\n  } catch (error) {\n    if (error instanceof ParserError) {\n      throw new ParserError(`Unable to encode value: ${error.message}`, error);\n    }\n\n    throw new ParserError(\n      `An unexpected error occurred: ${getErrorMessage(error)}`,\n      error,\n    );\n  }\n};\n\n/**\n * Encode the data with the provided type. The type must be a valid Solidity\n * ABI type.\n *\n * See {@link encode} for more information on how values are parsed.\n *\n * @example\n * ```typescript\n * import { encodeSingle, decodeSingle } from '@metamask/abi-utils';\n *\n * const encoded = encodeSingle('uint256', 42);\n * const decoded = decodeSingle('uint256', encoded);\n *\n * console.log(decoded); // 42n\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @param type - The type to encode.\n * @param value - The value to encode.\n * @returns The ABI encoded bytes.\n */\nexport const encodeSingle = <Type extends string>(\n  type: Type,\n  value: TypeMap<[Type], 'input'>[0],\n): Uint8Array => {\n  return encode([type], [value]);\n};\n\n/**\n * Encode the data with the provided types. The types must be valid Solidity\n * ABI types. This is similar to {@link encode}, but the values are encoded in\n * the non-standard packed mode. This differs from the standard encoding in the\n * following ways:\n *\n * - Most values are packed tightly, without alignment padding.\n *   - The exception is array values, which are padded to 32 bytes.\n * - Values are still padded to their full size, i.e., `uint16` values are still\n *  padded to 2 bytes, regardless of the length of the value.\n * - The encoding of dynamic types (`bytes`, `string`) is different. The length\n * of the dynamic type is not included in the encoding, and the dynamic type is\n * not padded to a multiple of 32 bytes.\n * - All values are encoded in-place, without any offsets.\n *\n * The encoding of this is ambiguous as soon as there is more than one dynamic\n * type. That means that these values cannot be decoded with {@link decode} or\n * Solidity's `abi.decode` function.\n *\n * See {@link encode} for more information on how values are parsed.\n *\n * @example\n * ```typescript\n * import { encodePacked } from '@metamask/abi-utils';\n *\n * const encoded = encodePacked(['uint8'], [42]);\n *\n * console.log(encoded); // `Uint8Array [ 42 ]`\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#non-standard-packed-mode\n * @param types - The types to encode.\n * @param values - The values to encode.\n * @param tight - Whether to pack the values tightly. When enabled, `bytesN`\n * values in arrays will be packed without any padding. This matches the\n * behaviour of `ethereumjs-abi`. Defaults to `false`.\n * @returns The ABI encoded bytes.\n */\nexport const encodePacked = <Type extends readonly string[]>(\n  types: Type,\n  values: TypeMap<Type, 'input'>,\n  tight?: boolean,\n): Uint8Array => {\n  return encode(types, values, true, tight);\n};\n\n/**\n * Decode an ABI encoded buffer with the specified types. The types must be\n * valid Solidity ABI types.\n *\n * This will attempt to infer the output types from the input types. For\n * example, if you use `uint256` as an input type, the output type will be\n * `bigint`. This does not work for all types, however. For example, if you use\n * nested array types or tuple types, the output type will be `unknown`.\n *\n * The resulting types of the values will be as follows:\n *\n * | Contract ABI Type | Resulting JavaScript Type |\n * | ----------------- | ------------------------- |\n * | `address`         | `string`                  |\n * | `bool`            | `boolean`                 |\n * | `bytes(n)`        | `Uint8Array`              |\n * | `function`        | {@link SolidityFunction}  |\n * | `int(n)`          | `bigint`                  |\n * | `string`          | `string`                  |\n * | `tuple`           | `Array`                   |\n * | `array`           | `Array`                   |\n * | `uint(n)`         | `bigint`                  |\n *\n * @example\n * ```typescript\n * import { encode, decode } from '@metamask/abi-utils';\n *\n * const types = ['uint256', 'string'];\n * const encoded = encode(types, [42, 'Hello, world!']);\n * const decoded = decode(types, encoded);\n *\n * console.log(decoded); // [42n, 'Hello, world!']\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @param types - The types to decode the bytes with.\n * @param value - The bytes-like value to decode.\n * @returns The decoded values as array.\n */\nexport const decode = <\n  Type extends readonly string[],\n  Output = TypeMap<Type, 'output'>,\n>(\n  types: Type,\n  value: BytesLike,\n): Output => {\n  const bytes = createBytes(value);\n\n  try {\n    return unpack(types, bytes);\n  } catch (error) {\n    if (error instanceof ParserError) {\n      throw new ParserError(`Unable to decode value: ${error.message}`, error);\n    }\n\n    throw new ParserError(\n      `An unexpected error occurred: ${getErrorMessage(error)}`,\n      error,\n    );\n  }\n};\n\n/**\n * Decode the data with the provided type. The type must be a valid Solidity\n * ABI type.\n *\n * See {@link decode} for more information on how values are parsed.\n *\n * @example\n * ```typescript\n * import { encodeSingle, decodeSingle } from '@metamask/abi-utils';\n *\n * const encoded = encodeSingle('uint256', 42);\n * const decoded = decodeSingle('uint256', encoded);\n *\n * console.log(decoded); // 42n\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @param type - The type to decode.\n * @param value - The bytes-like value to decode.\n * @returns The decoded value.\n */\nexport const decodeSingle = <Type extends string>(\n  type: Type,\n  value: BytesLike,\n): TypeMap<[Type], 'output'>[0] => {\n  const result = decode([type] as const, value);\n  assert(\n    result.length === 1,\n    new ParserError('Decoded value array has unexpected length.'),\n  );\n\n  return result[0];\n};\n","import { hasProperty, isObject } from '@metamask/utils';\n\n/**\n * Attempt to get an error message from a value.\n *\n * - If the value is an error, the error's message is returned.\n * - If the value is an object with a `message` property, the value of that\n * property is returned.\n * - If the value is a string, the value is returned.\n * - Otherwise, \"Unknown error.\" is returned.\n *\n * @param error - The value to get an error message from.\n * @returns The error message.\n * @internal\n */\nexport const getErrorMessage = (error?: unknown): string => {\n  if (typeof error === 'string') {\n    return error;\n  }\n\n  if (error instanceof Error) {\n    return error.message;\n  }\n\n  if (\n    isObject(error) &&\n    hasProperty(error, 'message') &&\n    typeof error.message === 'string'\n  ) {\n    return error.message;\n  }\n\n  return 'Unknown error.';\n};\n\n/**\n * Get the error stack from a value. If the value is an error, the error's stack\n * is returned. Otherwise, it returns `undefined`.\n *\n * @param error - The value to get an error stack from.\n * @returns The error stack, or `undefined` if the value is not an error.\n * @internal\n */\nexport const getErrorStack = (error?: unknown): string | undefined => {\n  if (error instanceof Error) {\n    return error.stack;\n  }\n\n  return undefined;\n};\n\n/**\n * An error that is thrown when the ABI encoder or decoder encounters an\n * issue.\n */\nexport class ParserError extends Error {\n  readonly name = 'ParserError';\n\n  constructor(message: string, originalError?: unknown) {\n    super(message);\n\n    const originalStack = getErrorStack(originalError);\n    if (originalStack) {\n      this.stack = originalStack;\n    }\n  }\n}\n","export * from './abi';\nexport * from './errors';\nexport * from './types';\n\nexport type { BytesLike, NumberLike } from '@metamask/utils';\nexport type { BooleanLike, FunctionLike, SolidityFunction } from './parsers';\n","import { assert } from '@metamask/utils';\n\ntype IteratorValue = {\n  skip(length: number): void;\n  value: Uint8Array;\n};\n\n/**\n * Iterate over a buffer with the specified size. This will yield a part of the\n * buffer starting at an increment of the specified size, until the end of the\n * buffer is reached.\n *\n * Calling the `skip` function will make it skip the specified number of bytes.\n *\n * @param buffer - The buffer to iterate over.\n * @param size - The number of bytes to iterate with.\n * @returns An iterator that yields the parts of the byte array.\n * @yields The parts of the byte array.\n */\nexport const iterate = function* (\n  buffer: Uint8Array,\n  size = 32,\n): Generator<IteratorValue, IteratorValue, IteratorValue> {\n  for (let pointer = 0; pointer < buffer.length; pointer += size) {\n    const skip = (length: number) => {\n      assert(length >= 0, 'Cannot skip a negative number of bytes.');\n      assert(length % size === 0, 'Length must be a multiple of the size.');\n\n      pointer += length;\n    };\n\n    const value = buffer.subarray(pointer);\n\n    yield { skip, value };\n  }\n\n  return {\n    skip: () => undefined,\n    value: new Uint8Array(),\n  };\n};\n","import {\n  assert,\n  bytesToNumber,\n  concatBytes,\n  numberToBytes,\n} from '@metamask/utils';\n\nimport { ParserError } from './errors';\nimport { iterate } from './iterator';\nimport {\n  address,\n  array,\n  bool,\n  bytes,\n  fixedBytes,\n  fn,\n  number,\n  Parser,\n  string,\n  tuple,\n} from './parsers';\nimport { TypeMap } from './types';\nimport { padStart, set } from './utils';\n\n/**\n * Get the parser for the specified type.\n *\n * @param type - The type to get a parser for.\n * @returns The parser.\n * @throws If there is no parser for the specified type.\n */\nexport const getParser = (type: string): Parser => {\n  const parsers: { [key: string]: Parser } = {\n    address,\n    array,\n    bool,\n    bytes,\n    fixedBytes,\n    function: fn,\n    number,\n    string,\n    tuple,\n  };\n\n  const staticParser = parsers[type];\n  if (staticParser) {\n    return staticParser;\n  }\n\n  const parser = Object.values(parsers).find((value) => value.isType(type));\n  if (parser) {\n    return parser;\n  }\n\n  throw new ParserError(`The type \"${type}\" is not supported.`);\n};\n\n/**\n * Check if the specified parser is dynamic, for the provided types. This is\n * primarily used for parsing tuples, where a tuple can be dynamic based on the\n * types. For other parsers, it will simply use the set `isDynamic` value.\n *\n * @param parser - The parser to check.\n * @param type - The type to check the parser with.\n * @returns Whether the parser is dynamic.\n */\nexport const isDynamicParser = (parser: Parser, type: string): boolean => {\n  const { isDynamic } = parser;\n  if (typeof isDynamic === 'function') {\n    return isDynamic(type);\n  }\n\n  return isDynamic;\n};\n\ntype Pointer = {\n  position: number;\n  pointer: number;\n};\n\ntype PackState = {\n  staticBuffer: Uint8Array;\n  dynamicBuffer: Uint8Array;\n  pointers: Pointer[];\n};\n\nexport type PackArgs<Type extends readonly string[]> = {\n  /**\n   * The types of the values to pack.\n   */\n  types: Type;\n\n  /**\n   * The values to pack.\n   */\n  values: TypeMap<Type, 'input'>;\n\n  /**\n   * Whether to use the non-standard packed mode.\n   */\n  packed?: boolean | undefined;\n\n  /**\n   * Whether to use tight packing mode. Only applicable when `packed` is true.\n   * When true, the packed mode will not add any padding bytes. This matches\n   * the packing behaviour of `ethereumjs-abi`, but is not standard.\n   */\n  tight?: boolean | undefined;\n\n  /**\n   * Whether to use the non-standard packed mode in \"array\" mode. This is\n   * normally only used by the {@link array} parser.\n   */\n  arrayPacked?: boolean | undefined;\n\n  /**\n   * The byte array to encode the values into.\n   */\n  byteArray?: Uint8Array;\n};\n\n/**\n * Pack the provided values in a buffer, encoded with the specified types. If a\n * buffer is specified, the resulting value will be concatenated with the\n * buffer.\n *\n * @param args - The arguments object.\n * @param args.types - The types of the values to pack.\n * @param args.values - The values to pack.\n * @param args.packed - Whether to use the non-standard packed mode. Defaults to\n * `false`.\n * @param args.arrayPacked - Whether to use the non-standard packed mode for\n * arrays. Defaults to `false`.\n * @param args.byteArray - The byte array to encode the values into. Defaults to\n * an empty array.\n * @param args.tight - Whether to use tight packing mode. Only applicable when\n * `packed` is true. When true, the packed mode will not add any padding bytes.\n * This matches the packing behaviour of `ethereumjs-abi`, but is not standard.\n * @returns The resulting encoded buffer.\n */\nexport const pack = <Type extends readonly string[]>({\n  types,\n  values,\n  packed = false,\n  tight = false,\n  arrayPacked = false,\n  byteArray = new Uint8Array(),\n}: PackArgs<Type>): Uint8Array => {\n  assert(\n    types.length === values.length,\n    new ParserError(\n      `The number of types (${types.length}) does not match the number of values (${values.length}).`,\n    ),\n  );\n\n  const { staticBuffer, dynamicBuffer, pointers } = types.reduce<PackState>(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    ({ staticBuffer, dynamicBuffer, pointers }, type, index) => {\n      const parser = getParser(type);\n      const value = values[index];\n\n      // If packed mode is enabled, we can skip the dynamic check, as all\n      // values are encoded in the static buffer.\n      if (packed || arrayPacked || !isDynamicParser(parser, type)) {\n        return {\n          staticBuffer: parser.encode({\n            buffer: staticBuffer,\n            value,\n            type,\n            packed,\n            tight,\n          }),\n          dynamicBuffer,\n          pointers,\n        };\n      }\n\n      const newStaticBuffer = concatBytes([staticBuffer, new Uint8Array(32)]);\n      const newDynamicBuffer = parser.encode({\n        buffer: dynamicBuffer,\n        value,\n        type,\n        packed,\n        tight,\n      });\n\n      return {\n        staticBuffer: newStaticBuffer,\n        dynamicBuffer: newDynamicBuffer,\n        pointers: [\n          ...pointers,\n          { position: staticBuffer.length, pointer: dynamicBuffer.length },\n        ],\n      };\n    },\n    {\n      staticBuffer: new Uint8Array(),\n      dynamicBuffer: new Uint8Array(),\n      pointers: [],\n    },\n  );\n\n  // If packed mode is enabled, there shouldn't be any dynamic values.\n  assert(\n    (!packed && !arrayPacked) || dynamicBuffer.length === 0,\n    new ParserError('Invalid pack state.'),\n  );\n\n  const dynamicStart = staticBuffer.length;\n  const updatedBuffer = pointers.reduce((target, { pointer, position }) => {\n    const offset = padStart(numberToBytes(dynamicStart + pointer));\n    return set(target, offset, position);\n  }, staticBuffer);\n\n  return concatBytes([byteArray, updatedBuffer, dynamicBuffer]);\n};\n\nexport const unpack = <\n  Type extends readonly string[],\n  Output = TypeMap<Type, 'output'>,\n>(\n  types: Type,\n  buffer: Uint8Array,\n): Output => {\n  const iterator = iterate(buffer);\n\n  return types.map((type) => {\n    const {\n      value: { value, skip },\n      done,\n    } = iterator.next();\n    assert(\n      !done,\n      new ParserError(\n        `The encoded value is invalid for the provided types. Reached end of buffer while attempting to parse \"${type}\".`,\n      ),\n    );\n\n    const parser = getParser(type);\n    const isDynamic = isDynamicParser(parser, type);\n\n    if (isDynamic) {\n      const pointer = bytesToNumber(value.subarray(0, 32));\n      const target = buffer.subarray(pointer);\n\n      return parser.decode({ type, value: target, skip });\n    }\n\n    return parser.decode({ type, value, skip });\n  }) as unknown as Output;\n};\n","import {\n  add0x,\n  assert,\n  BytesLike,\n  bytesToHex,\n  concatBytes,\n  createBytes,\n} from '@metamask/utils';\n\nimport { ParserError } from '../errors';\nimport { padStart } from '../utils';\nimport { Parser } from './parser';\n\n/**\n * Normalize an address value. This accepts the address as:\n *\n * - A hex string starting with the `0x` prefix.\n * - A byte array (`Uint8Array` or `Buffer`).\n *\n * It checks that the address is 20 bytes long.\n *\n * @param value - The value to normalize.\n * @returns The normalized address as `Uint8Array`.\n */\nexport const getAddress = (value: BytesLike): Uint8Array => {\n  const bytesValue = createBytes(value);\n  assert(\n    bytesValue.length <= 20,\n    new ParserError(\n      `Invalid address value. Expected address to be 20 bytes long, but received ${bytesValue.length} bytes.`,\n    ),\n  );\n\n  return padStart(bytesValue, 20);\n};\n\nexport const address: Parser<BytesLike, string> = {\n  isDynamic: false,\n\n  /**\n   * Get if the given value is a valid address type. Since `address` is a simple\n   * type, this is just a check that the value is \"address\".\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a valid address type.\n   */\n  isType: (type) => type === 'address',\n\n  /**\n   * Get the byte length of an encoded address. Since `address` is a simple\n   * type, this always returns 32.\n   *\n   * Note that actual addresses are only 20 bytes long, but the encoding of\n   * the `address` type is always 32 bytes long.\n   *\n   * @returns The byte length of an encoded address.\n   */\n  getByteLength(): number {\n    return 32;\n  },\n\n  /**\n   * Encode the given address to a 32-byte-long byte array.\n   *\n   * @param args - The encoding arguments.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The address to encode.\n   * @param args.packed - Whether to use packed encoding.\n   * @returns The bytes with the encoded address added to it.\n   */\n  encode({ buffer, value, packed }): Uint8Array {\n    const addressValue = getAddress(value);\n\n    // If we're using packed encoding, we can just add the address bytes to the\n    // byte array, without adding any padding.\n    if (packed) {\n      return concatBytes([buffer, addressValue]);\n    }\n\n    const addressBuffer = padStart(addressValue);\n    return concatBytes([buffer, addressBuffer]);\n  },\n\n  /**\n   * Decode the given byte array to an address.\n   *\n   * @param args - The decoding arguments.\n   * @param args.value - The byte array to decode.\n   * @returns The decoded address as a hexadecimal string, starting with the\n   * \"0x\"-prefix.\n   */\n  decode({ value }): string {\n    return add0x(bytesToHex(value.slice(12, 32)));\n  },\n};\n","import {\n  assert,\n  bytesToNumber,\n  concatBytes,\n  numberToBytes,\n} from '@metamask/utils';\n\nimport { ParserError } from '../errors';\nimport { getParser, isDynamicParser, pack, unpack } from '../packer';\nimport { padStart } from '../utils';\nimport { fixedBytes } from './fixed-bytes';\nimport { Parser } from './parser';\nimport { tuple } from './tuple';\n\nconst ARRAY_REGEX = /^(?<type>.*)\\[(?<length>\\d*?)\\]$/u;\n\nexport const isArrayType = (type: string): boolean => ARRAY_REGEX.test(type);\n\n/**\n * Get the type of the array.\n *\n * @param type - The type to get the array type for.\n * @returns The array type.\n */\nexport const getArrayType = (\n  type: string,\n): [type: string, length: number | undefined] => {\n  const match = type.match(ARRAY_REGEX);\n  assert(\n    match?.groups?.type,\n    new ParserError(\n      `Invalid array type. Expected an array type, but received \"${type}\".`,\n    ),\n  );\n\n  return [\n    match.groups.type,\n    match.groups.length ? parseInt(match.groups.length, 10) : undefined,\n  ];\n};\n\n/**\n * Get the type of the array as a tuple type. This is used for encoding fixed\n * length arrays, which are encoded as tuples.\n *\n * @param innerType - The type of the array.\n * @param length - The length of the array.\n * @returns The tuple type.\n */\nexport const getTupleType = (innerType: string, length: number): string => {\n  return `(${new Array(length).fill(innerType).join(',')})`;\n};\n\nexport const array: Parser<unknown[]> = {\n  /**\n   * Check if the array is dynamic. Arrays are dynamic if the array does not\n   * have a fixed length, or if the array type is dynamic.\n   *\n   * @param type - The type to check.\n   * @returns Whether the array is dynamic.\n   */\n  isDynamic(type: string): boolean {\n    const [innerType, length] = getArrayType(type);\n    return (\n      // `T[]` is dynamic for any `T`. `T[k]` is dynamic for any dynamic `T` and\n      // any `k >= 0`.\n      length === undefined || isDynamicParser(getParser(innerType), innerType)\n    );\n  },\n\n  /**\n   * Check if a type is an array type.\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is an array type.\n   */\n  isType(type: string): boolean {\n    return isArrayType(type);\n  },\n\n  /**\n   * Get the byte length of an encoded array. If the array is dynamic, this\n   * returns 32, i.e., the length of the pointer to the array. If the array is\n   * static, this returns the byte length of the resulting tuple type.\n   *\n   * @param type - The type to get the byte length for.\n   * @returns The byte length of an encoded array.\n   */\n  getByteLength(type: string): number {\n    assert(\n      isArrayType(type),\n      new ParserError(`Expected an array type, but received \"${type}\".`),\n    );\n\n    const [innerType, length] = getArrayType(type);\n    if (!isDynamicParser(this, type) && length !== undefined) {\n      return tuple.getByteLength(getTupleType(innerType, length));\n    }\n\n    return 32;\n  },\n\n  /**\n   * Encode the given array to a byte array. If the array is static, this uses\n   * the tuple encoder.\n   *\n   * @param args - The encoding arguments.\n   * @param args.type - The type of the array.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The array to encode.\n   * @param args.packed - Whether to use non-standard packed encoding.\n   * @param args.tight - Whether to use non-standard tight encoding.\n   * @returns The bytes with the encoded array added to it.\n   */\n  encode({ type, buffer, value, packed, tight }): Uint8Array {\n    const [arrayType, fixedLength] = getArrayType(type);\n\n    // Packed encoding does not support nested arrays.\n    assert(\n      !packed || !isArrayType(arrayType),\n      new ParserError(`Cannot pack nested arrays.`),\n    );\n\n    // Tightly pack `T[]` where `T` is a dynamic type. This is not supported in\n    // Solidity, but is commonly used in the Ethereum ecosystem.\n    if (packed && isDynamicParser(getParser(arrayType), arrayType)) {\n      return pack({\n        types: new Array(value.length).fill(arrayType),\n        values: value,\n        byteArray: buffer,\n        packed,\n        arrayPacked: true,\n        tight,\n      });\n    }\n\n    if (fixedLength) {\n      assert(\n        fixedLength === value.length,\n        new ParserError(\n          `Array length does not match type length. Expected a length of ${fixedLength}, but received ${value.length}.`,\n        ),\n      );\n\n      // `T[k]` for any `T` and `k` is encoded as `(T[0], ..., T[k - 1])`.\n      return tuple.encode({\n        type: getTupleType(arrayType, fixedLength),\n        buffer,\n        value,\n        // In \"tight\" mode, we don't pad the values to 32 bytes if the value is\n        // of type `bytesN`. This is an edge case in `ethereumjs-abi` that we\n        // support to provide compatibility with it.\n        packed: fixedBytes.isType(arrayType) && tight,\n        tight,\n      });\n    }\n\n    // For packed encoding, we don't need to encode the length of the array,\n    // so we can just encode the values.\n    if (packed) {\n      return pack({\n        types: new Array(value.length).fill(arrayType),\n        values: value,\n        byteArray: buffer,\n        // In \"tight\" mode, we don't pad the values to 32 bytes if the value is\n        // of type `bytesN`. This is an edge case in `ethereumjs-abi` that we\n        // support to provide compatibility with it.\n        packed: fixedBytes.isType(arrayType) && tight,\n        arrayPacked: true,\n        tight,\n      });\n    }\n\n    // `T[]` with `k` elements is encoded as `k (T[0], ..., T[k - 1])`. That\n    // means that we just need to encode the length of the array, and then the\n    // array itself. The pointer is encoded by the {@link pack} function.\n    const arrayLength = padStart(numberToBytes(value.length));\n    return pack({\n      types: new Array(value.length).fill(arrayType),\n      values: value,\n      byteArray: concatBytes([buffer, arrayLength]),\n      packed,\n      tight,\n    });\n  },\n\n  /**\n   * Decode an array from the given byte array.\n   *\n   * @param args - The decoding arguments.\n   * @param args.type - The type of the array.\n   * @param args.value - The byte array to decode.\n   * @returns The decoded array.\n   */\n  decode({ type, value, ...rest }): unknown[] {\n    const [arrayType, fixedLength] = getArrayType(type);\n\n    if (fixedLength) {\n      const result = tuple.decode({\n        type: getTupleType(arrayType, fixedLength),\n        value,\n        ...rest,\n      });\n\n      assert(\n        result.length === fixedLength,\n        new ParserError(\n          `Array length does not match type length. Expected a length of ${fixedLength}, but received ${result.length}.`,\n        ),\n      );\n\n      return result;\n    }\n\n    const arrayLength = bytesToNumber(value.subarray(0, 32));\n    return unpack(new Array(arrayLength).fill(arrayType), value.subarray(32));\n  },\n};\n","import { bigIntToBytes, concatBytes } from '@metamask/utils';\nimport { coerce, create, literal, union, boolean } from 'superstruct';\n\nimport { ParserError } from '../errors';\nimport { number } from './number';\nimport { Parser } from './parser';\n\n/**\n * A boolean-like value. This can be a boolean literal, or \"true\" or \"false\".\n */\nexport type BooleanLike = 'true' | 'false' | boolean;\n\nconst BooleanCoercer = coerce(\n  boolean(),\n  union([literal('true'), literal('false')]),\n  (value) => value === 'true',\n);\n\n/**\n * Normalize a boolean value. This accepts the boolean as:\n *\n * - A boolean literal.\n * - The string \"true\" or \"false\".\n *\n * @param value - The value to get a boolean for.\n * @returns The parsed boolean value. This is `BigInt(1)` for truthy values, or\n * `BigInt(0)` for falsy values.\n */\nexport const getBooleanValue = (value: BooleanLike): bigint => {\n  try {\n    const booleanValue = create(value, BooleanCoercer);\n    if (booleanValue) {\n      return BigInt(1);\n    }\n\n    return BigInt(0);\n  } catch {\n    throw new ParserError(\n      `Invalid boolean value. Expected a boolean literal, or the string \"true\" or \"false\", but received \"${value}\".`,\n    );\n  }\n};\n\nexport const bool: Parser<BooleanLike, boolean> = {\n  isDynamic: false,\n\n  /**\n   * Get if the given value is a valid boolean type. Since `bool` is a simple\n   * type, this is just a check that the value is \"bool\".\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a valid boolean type.\n   */\n  isType: (type) => type === 'bool',\n\n  /**\n   * Get the byte length of an encoded boolean. Since `bool` is a simple\n   * type, this always returns 32.\n   *\n   * Note that actual booleans are only 1 byte long, but the encoding of\n   * the `bool` type is always 32 bytes long.\n   *\n   * @returns The byte length of an encoded boolean.\n   */\n  getByteLength(): number {\n    return 32;\n  },\n\n  /**\n   * Encode the given boolean to a byte array.\n   *\n   * @param args - The encoding arguments.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The boolean to encode.\n   * @param args.packed - Whether the value is packed.\n   * @param args.tight - Whether to use non-standard tight encoding.\n   * @returns The bytes with the encoded boolean added to it.\n   */\n  encode({ buffer, value, packed, tight }): Uint8Array {\n    const booleanValue = getBooleanValue(value);\n\n    // For packed encoding, we add a single byte (`0x00` or `0x01`) to the byte\n    // array.\n    if (packed) {\n      return concatBytes([buffer, bigIntToBytes(booleanValue)]);\n    }\n\n    // Booleans are encoded as 32-byte integers, so we use the number parser\n    // to encode the boolean value.\n    return number.encode({\n      type: 'uint256',\n      buffer,\n      value: booleanValue,\n      packed,\n      tight,\n    });\n  },\n\n  /**\n   * Decode the given byte array to a boolean.\n   *\n   * @param args - The decoding arguments.\n   * @returns The decoded boolean.\n   */\n  decode(args): boolean {\n    // Booleans are encoded as 32-byte integers, so we use the number parser\n    // to decode the boolean value.\n    return number.decode({ ...args, type: 'uint256' }) === BigInt(1);\n  },\n};\n","import {\n  BytesLike,\n  bytesToNumber,\n  concatBytes,\n  createBytes,\n  numberToBytes,\n} from '@metamask/utils';\n\nimport { padEnd, padStart } from '../utils';\nimport { Parser } from './parser';\n\nexport const bytes: Parser<BytesLike, Uint8Array> = {\n  isDynamic: true,\n\n  /**\n   * Check if a type is a bytes type. Since `bytes` is a simple type, this is\n   * just a check that the type is \"bytes\".\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a bytes type.\n   */\n  isType: (type) => type === 'bytes',\n\n  /**\n   * Get the byte length of an encoded bytes value. Since `bytes` is a simple\n   * type, this always returns 32.\n   *\n   * Note that actual length of a bytes value is variable, but the encoded\n   * static value (pointer) is always 32 bytes long.\n   *\n   * @returns The byte length of an encoded bytes value.\n   */\n  getByteLength(): number {\n    return 32;\n  },\n\n  /**\n   * Encode the given bytes value to a byte array.\n   *\n   * @param args - The encoding arguments.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The bytes value to encode.\n   * @param args.packed - Whether to use packed encoding.\n   * @returns The bytes with the encoded bytes value added to it.\n   */\n  encode({ buffer, value, packed }): Uint8Array {\n    const bufferValue = createBytes(value);\n\n    // For packed encoding, we can just add the bytes value to the byte array,\n    // without adding any padding or alignment. There is also no need to\n    // encode the length of the bytes.\n    if (packed) {\n      return concatBytes([buffer, bufferValue]);\n    }\n\n    const paddedSize = Math.ceil(bufferValue.byteLength / 32) * 32;\n\n    // Bytes of length `k` are encoded as `k pad_right(bytes)`.\n    return concatBytes([\n      buffer,\n      padStart(numberToBytes(bufferValue.byteLength)),\n      padEnd(bufferValue, paddedSize),\n    ]);\n  },\n\n  /**\n   * Decode the given byte array to a bytes value.\n   *\n   * @param args - The decoding arguments.\n   * @param args.value - The byte array to decode.\n   * @returns The decoded bytes value as a `Uint8Array`.\n   */\n  decode({ value }): Uint8Array {\n    const bytesValue = value.subarray(0, 32);\n    const length = bytesToNumber(bytesValue);\n\n    // Since we're returning a `Uint8Array`, we use `slice` to copy the bytes\n    // into a new array.\n    return value.slice(32, 32 + length);\n  },\n};\n","import { assert, BytesLike, concatBytes, createBytes } from '@metamask/utils';\n\nimport { ParserError } from '../errors';\nimport { padEnd } from '../utils';\nimport { Parser } from './parser';\n\nconst BYTES_REGEX = /^bytes([0-9]{1,2})$/u;\n\n/**\n * Get the length of the specified type. If a length is not specified, or if the\n * length is out of range (0 < n <= 32), this will throw an error.\n *\n * @param type - The type to get the length for.\n * @returns The byte length of the type.\n */\nexport const getByteLength = (type: string): number => {\n  const bytes = type.match(BYTES_REGEX)?.[1];\n  assert(\n    bytes,\n    `Invalid byte length. Expected a number between 1 and 32, but received \"${type}\".`,\n  );\n\n  const length = Number(bytes);\n  assert(\n    length > 0 && length <= 32,\n    new ParserError(\n      `Invalid byte length. Expected a number between 1 and 32, but received \"${type}\".`,\n    ),\n  );\n\n  return length;\n};\n\nexport const fixedBytes: Parser<BytesLike, Uint8Array> = {\n  isDynamic: false,\n\n  /**\n   * Check if a type is a fixed bytes type.\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a fixed bytes type.\n   */\n  isType(type: string): boolean {\n    return BYTES_REGEX.test(type);\n  },\n\n  /**\n   * Get the byte length of an encoded fixed bytes type.\n   *\n   * @returns The byte length of the type.\n   */\n  getByteLength(): number {\n    return 32;\n  },\n\n  /**\n   * Encode a fixed bytes value.\n   *\n   * @param args - The arguments to encode.\n   * @param args.type - The type of the value.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The value to encode.\n   * @param args.packed - Whether to use packed encoding.\n   * @returns The bytes with the encoded value added to it.\n   */\n  encode({ type, buffer, value, packed }): Uint8Array {\n    const length = getByteLength(type);\n    const bufferValue = createBytes(value);\n\n    assert(\n      bufferValue.length <= length,\n      new ParserError(\n        `Expected a value of length ${length}, but received a value of length ${bufferValue.length}.`,\n      ),\n    );\n\n    // For packed encoding, the value is padded to the length of the type, and\n    // then added to the byte array.\n    if (packed) {\n      return concatBytes([buffer, padEnd(bufferValue, length)]);\n    }\n\n    return concatBytes([buffer, padEnd(bufferValue)]);\n  },\n\n  /**\n   * Decode a fixed bytes value.\n   *\n   * @param args - The arguments to decode.\n   * @param args.type - The type of the value.\n   * @param args.value - The value to decode.\n   * @returns The decoded value as a `Uint8Array`.\n   */\n  decode({ type, value }): Uint8Array {\n    const length = getByteLength(type);\n\n    // Since we're returning a `Uint8Array`, we use `slice` to copy the bytes\n    // into a new array.\n    return value.slice(0, length);\n  },\n};\n","import {\n  assert,\n  bytesToHex,\n  concatBytes,\n  createBytes,\n  hexToBytes,\n  StrictHexStruct,\n} from '@metamask/utils';\nimport { coerce, create, instance, object, union } from 'superstruct';\n\nimport { ParserError } from '../errors';\nimport { fixedBytes } from './fixed-bytes';\nimport { Parser } from './parser';\n\n/**\n * A Solidity function-like value. This can be a hex string, a byte array, or a\n * {@link SolidityFunction} object.\n */\nexport type FunctionLike = string | Uint8Array | SolidityFunction;\n\n/**\n * A Solidity function, i.e., the address of a contract and the selector of a\n * function within that contract.\n */\nexport type SolidityFunction = {\n  /**\n   * The address of the contract. Must be a 40-character long hex string\n   * (excluding the \"0x\"-prefix).\n   */\n  address: string;\n\n  /**\n   * The selector of the function. Must be an 8-character long hex string\n   * (excluding the \"0x\"-prefix).\n   */\n  selector: string;\n};\n\n/**\n * A struct that represents a Solidity function. The value must be a hex string\n * or a byte array. The created value will always be an object with an `address`\n * and `selector` property.\n */\nconst FunctionStruct = coerce(\n  object({\n    address: StrictHexStruct,\n    selector: StrictHexStruct,\n  }),\n  union([StrictHexStruct, instance(Uint8Array)]),\n  (value) => {\n    const bytes = createBytes(value);\n    assert(\n      bytes.length === 24,\n      new ParserError(\n        `Invalid Solidity function. Expected function to be 24 bytes long, but received ${bytes.length} bytes.`,\n      ),\n    );\n\n    return {\n      address: bytesToHex(bytes.subarray(0, 20)),\n      selector: bytesToHex(bytes.subarray(20, 24)),\n    };\n  },\n);\n\n/**\n * Normalize a function. This accepts the function as:\n *\n * - A {@link SolidityFunction} object.\n * - A hexadecimal string.\n * - A byte array.\n *\n * @param input - The function-like input.\n * @returns The function as buffer.\n */\nexport const getFunction = (input: FunctionLike): Uint8Array => {\n  const value = create(input, FunctionStruct);\n  return concatBytes([hexToBytes(value.address), hexToBytes(value.selector)]);\n};\n\nexport const fn: Parser<FunctionLike, SolidityFunction> = {\n  isDynamic: false,\n\n  /**\n   * Check if a type is a function type. Since `function` is a simple type, this\n   * is just a check that the type is \"function\".\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a function type.\n   */\n  isType: (type) => type === 'function',\n\n  /**\n   * Get the byte length of an encoded function. Since `function` is a simple\n   * type, this always returns 32.\n   *\n   * Note that actual functions are only 24 bytes long, but the encoding of\n   * the `function` type is always 32 bytes long.\n   *\n   * @returns The byte length of an encoded function.\n   */\n  getByteLength(): number {\n    return 32;\n  },\n\n  /**\n   * Encode the given function to a byte array.\n   *\n   * @param args - The encoding arguments.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The function to encode.\n   * @param args.packed - Whether to use packed encoding.\n   * @param args.tight - Whether to use non-standard tight encoding.\n   * @returns The bytes with the encoded function added to it.\n   */\n  encode({ buffer, value, packed, tight }): Uint8Array {\n    const fnValue = getFunction(value);\n\n    // Functions are encoded as `bytes24`, so we use the fixedBytes parser to\n    // encode the function.\n    return fixedBytes.encode({\n      type: 'bytes24',\n      buffer,\n      value: fnValue,\n      packed,\n      tight,\n    });\n  },\n\n  /**\n   * Decode the given byte array to a function.\n   *\n   * @param args - The decoding arguments.\n   * @param args.value - The byte array to decode.\n   * @returns The decoded function as a {@link SolidityFunction} object.\n   */\n  decode({ value }): SolidityFunction {\n    return {\n      address: bytesToHex(value.slice(0, 20)),\n      selector: bytesToHex(value.slice(20, 24)),\n    };\n  },\n};\n","export * from './address';\nexport * from './array';\nexport * from './bool';\nexport * from './bytes';\nexport * from './fixed-bytes';\nexport * from './function';\nexport * from './number';\nexport * from './parser';\nexport * from './string';\nexport * from './tuple';\n","import {\n  assert,\n  bigIntToBytes,\n  bytesToBigInt,\n  bytesToSignedBigInt,\n  concatBytes,\n  createBigInt,\n  NumberLike,\n  signedBigIntToBytes,\n} from '@metamask/utils';\n\nimport { ParserError } from '../errors';\nimport { padStart } from '../utils';\nimport { DecodeArgs, Parser } from './parser';\n\nconst NUMBER_REGEX = /^u?int(?<length>[0-9]*)?$/u;\n\n/**\n * Check if a number type is signed.\n *\n * @param type - The type to check.\n * @returns Whether the type is signed.\n */\nexport const isSigned = (type: string): boolean => {\n  return !type.startsWith('u');\n};\n\n/**\n * Get the length of the specified type. If a length is not specified, if the\n * length is out of range (8 <= n <= 256), or if the length is not a multiple of\n * 8, this will throw an error.\n *\n * @param type - The type to get the length for.\n * @returns The bit length of the type.\n */\nexport const getLength = (type: string): number => {\n  if (type === 'int' || type === 'uint') {\n    return 256;\n  }\n\n  const match = type.match(NUMBER_REGEX);\n  assert(\n    match?.groups?.length,\n    new ParserError(\n      `Invalid number type. Expected a number type, but received \"${type}\".`,\n    ),\n  );\n\n  const length = parseInt(match.groups.length, 10);\n  assert(\n    length >= 8 && length <= 256,\n    new ParserError(\n      `Invalid number length. Expected a number between 8 and 256, but received \"${type}\".`,\n    ),\n  );\n\n  assert(\n    length % 8 === 0,\n    new ParserError(\n      `Invalid number length. Expected a multiple of 8, but received \"${type}\".`,\n    ),\n  );\n\n  return length;\n};\n\n/**\n * Assert that the byte length of the given value is in range for the given\n * number type.\n *\n * @param value - The value to check.\n * @param type - The type of the value.\n * @throws If the value is out of range for the type.\n */\nexport const assertNumberLength = (value: bigint, type: string) => {\n  const length = getLength(type);\n  const maxValue =\n    BigInt(2) ** BigInt(length - (isSigned(type) ? 1 : 0)) - BigInt(1);\n\n  if (isSigned(type)) {\n    // Signed types must be in the range of `-(2^(length - 1))` to\n    // `2^(length - 1) - 1`.\n    assert(\n      value >= -(maxValue + BigInt(1)) && value <= maxValue,\n      new ParserError(`Number \"${value}\" is out of range for type \"${type}\".`),\n    );\n\n    return;\n  }\n\n  // Unsigned types must be in the range of `0` to `2^length - 1`.\n  assert(\n    value <= maxValue,\n    new ParserError(`Number \"${value}\" is out of range for type \"${type}\".`),\n  );\n};\n\n/**\n * Normalize a `bigint` value. This accepts the value as:\n *\n * - A `bigint`.\n * - A `number`.\n * - A decimal string, i.e., a string that does not start with \"0x\".\n * - A hexadecimal string, i.e., a string that starts with \"0x\".\n *\n * @param value - The number-like value to parse.\n * @returns The value parsed as bigint.\n */\nexport const getBigInt = (value: NumberLike): bigint => {\n  try {\n    return createBigInt(value);\n  } catch {\n    throw new ParserError(\n      `Invalid number. Expected a valid number value, but received \"${value}\".`,\n    );\n  }\n};\n\nexport const number: Parser<NumberLike, bigint> = {\n  isDynamic: false,\n\n  /**\n   * Check if a type is a number type.\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a number type.\n   */\n  isType(type: string): boolean {\n    return NUMBER_REGEX.test(type);\n  },\n\n  /**\n   * Get the byte length of an encoded number type. Since `int` and `uint` are\n   * simple types, this will always return 32.\n   *\n   * @returns The byte length of the type.\n   */\n  getByteLength(): number {\n    return 32;\n  },\n\n  /**\n   * Encode a number value.\n   *\n   * @param args - The arguments to encode.\n   * @param args.type - The type of the value.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The value to encode.\n   * @param args.packed - Whether to use packed encoding.\n   * @returns The bytes with the encoded value added to it.\n   */\n  encode({ type, buffer, value, packed }): Uint8Array {\n    const bigIntValue = getBigInt(value);\n\n    assertNumberLength(bigIntValue, type);\n\n    if (isSigned(type)) {\n      // For packed encoding, the value is padded to the length of the type, and\n      // then added to the byte array.\n      if (packed) {\n        const length = getLength(type) / 8;\n        return concatBytes([buffer, signedBigIntToBytes(bigIntValue, length)]);\n      }\n\n      return concatBytes([\n        buffer,\n        padStart(signedBigIntToBytes(bigIntValue, 32)),\n      ]);\n    }\n\n    // For packed encoding, the value is padded to the length of the type, and\n    // then added to the byte array.\n    if (packed) {\n      const length = getLength(type) / 8;\n      return concatBytes([\n        buffer,\n        padStart(bigIntToBytes(bigIntValue), length),\n      ]);\n    }\n\n    return concatBytes([buffer, padStart(bigIntToBytes(bigIntValue))]);\n  },\n\n  /**\n   * Decode a number value.\n   *\n   * @param args - The decoding arguments.\n   * @param args.type - The type of the value.\n   * @param args.value - The value to decode.\n   * @returns The decoded value.\n   */\n  decode({ type, value }: DecodeArgs): bigint {\n    const buffer = value.subarray(0, 32);\n    if (isSigned(type)) {\n      const numberValue = bytesToSignedBigInt(buffer);\n      assertNumberLength(numberValue, type);\n      return numberValue;\n    }\n\n    const numberValue = bytesToBigInt(buffer);\n    assertNumberLength(numberValue, type);\n    return numberValue;\n  },\n};\n","import { bytesToString, stringToBytes } from '@metamask/utils';\n\nimport { bytes } from './bytes';\nimport { Parser } from './parser';\n\nexport const string: Parser<string> = {\n  isDynamic: true,\n\n  /**\n   * Check if a type is a string type. Since `string` is a simple type, this\n   * is just a check if the type is \"string\".\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a string type.\n   */\n  isType: (type) => type === 'string',\n\n  /**\n   * Get the byte length of an encoded string type. Since `string` is a simple\n   * type, this will always return 32.\n   *\n   * Note that actual strings are variable in length, but the encoded static\n   * value (pointer) is always 32 bytes long.\n   *\n   * @returns The byte length of an encoded string.\n   */\n  getByteLength(): number {\n    return 32;\n  },\n\n  /**\n   * Encode the given string value to a byte array.\n   *\n   * @param args - The encoding arguments.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The string value to encode.\n   * @param args.packed - Whether to use packed encoding.\n   * @param args.tight - Whether to use non-standard tight encoding.\n   * @returns The bytes with the encoded string value added to it.\n   */\n  encode({ buffer, value, packed, tight }): Uint8Array {\n    // Strings are encoded as UTF-8 bytes, so we use the bytes parser to encode\n    // the string as bytes.\n    return bytes.encode({\n      type: 'bytes',\n      buffer,\n      value: stringToBytes(value),\n      packed,\n      tight,\n    });\n  },\n\n  /**\n   * Decode the given byte array to a string value.\n   *\n   * @param args - The decoding arguments.\n   * @returns The decoded string value.\n   */\n  decode(args): string {\n    // Strings are encoded as UTF-8 bytes, so we use the bytes parser to decode\n    // the bytes, and convert them to a string.\n    return bytesToString(bytes.decode(args));\n  },\n};\n","import { assert } from '@metamask/utils';\n\nimport { ParserError } from '../errors';\nimport { getParser, isDynamicParser, pack, unpack } from '../packer';\nimport { Parser } from './parser';\n\nconst TUPLE_REGEX = /^\\((.+)\\)$/u;\n\nconst isTupleType = (type: string): boolean => TUPLE_REGEX.test(type);\n\n/**\n * Get elements from a tuple type.\n *\n * @param type - The tuple type to get the types for.\n * @returns The elements of the tuple as string array.\n */\nexport const getTupleElements = (type: string): string[] => {\n  assert(\n    type.startsWith('(') && type.endsWith(')'),\n    new ParserError(\n      `Invalid tuple type. Expected tuple type, but received \"${type}\".`,\n    ),\n  );\n\n  const elements: string[] = [];\n  let current = '';\n  let depth = 0;\n\n  for (let i = 1; i < type.length - 1; i++) {\n    const char = type[i];\n\n    if (char === ',' && depth === 0) {\n      elements.push(current.trim());\n      current = '';\n    } else {\n      current += char;\n\n      if (char === '(') {\n        depth += 1;\n      } else if (char === ')') {\n        depth -= 1;\n      }\n    }\n  }\n\n  if (current.trim()) {\n    elements.push(current.trim());\n  }\n\n  return elements;\n};\n\nexport const tuple: Parser<unknown[]> = {\n  /**\n   * Check if the tuple is dynamic. Tuples are dynamic if one or more elements\n   * of the tuple are dynamic.\n   *\n   * @param type - The type to check.\n   * @returns Whether the tuple is dynamic.\n   */\n  isDynamic(type: string): boolean {\n    const elements = getTupleElements(type);\n    return elements.some((element) => {\n      const parser = getParser(element);\n      return isDynamicParser(parser, element);\n    });\n  },\n\n  /**\n   * Check if a type is a tuple type.\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a tuple type.\n   */\n  isType(type: string): boolean {\n    return isTupleType(type);\n  },\n\n  /**\n   * Get the byte length of a tuple type. If the tuple is dynamic, this will\n   * always return 32. If the tuple is static, this will return the sum of the\n   * byte lengths of the tuple elements.\n   *\n   * @param type - The type to get the byte length for.\n   * @returns The byte length of the tuple type.\n   */\n  getByteLength(type: string): number {\n    if (isDynamicParser(this, type)) {\n      return 32;\n    }\n\n    const elements = getTupleElements(type);\n\n    return elements.reduce((total, element) => {\n      return total + getParser(element).getByteLength(element);\n    }, 0);\n  },\n\n  /**\n   * Encode a tuple value.\n   *\n   * @param args - The encoding arguments.\n   * @param args.type - The type of the value.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The value to encode.\n   * @param args.packed - Whether to use non-standard packed encoding.\n   * @param args.tight - Whether to use non-standard tight encoding.\n   * @returns The bytes with the encoded value added to it.\n   */\n  encode({ type, buffer, value, packed, tight }): Uint8Array {\n    const elements = getTupleElements(type);\n    return pack({\n      types: elements,\n      values: value,\n      byteArray: buffer,\n      packed,\n      tight,\n    });\n  },\n\n  /**\n   * Decode a tuple value.\n   *\n   * @param args - The decoding arguments.\n   * @param args.type - The type of the value.\n   * @param args.value - The value to decode.\n   * @param args.skip - A function to skip a number of bytes.\n   * @returns The decoded value.\n   */\n  decode({ type, value, skip }): unknown[] {\n    const elements = getTupleElements(type);\n\n    const length = this.getByteLength(type) - 32;\n    skip(length);\n\n    return unpack(elements, value);\n  },\n};\n","export * from './abi';\n","import { concatBytes } from '@metamask/utils';\n\nconst BUFFER_WIDTH = 32;\n\n/**\n * Set `buffer` in `target` at the specified position.\n *\n * @param target - The buffer to set to.\n * @param buffer - The buffer to set in the target.\n * @param position - The position at which to set the target.\n * @returns The combined buffer.\n */\nexport const set = (\n  target: Uint8Array,\n  buffer: Uint8Array,\n  position: number,\n): Uint8Array => {\n  return concatBytes([\n    target.subarray(0, position),\n    buffer,\n    target.subarray(position + buffer.length),\n  ]);\n};\n\n/**\n * Add padding to a buffer. If the buffer is larger than `length`, this function won't do anything. If it's smaller, the\n * buffer will be padded to the specified length, with extra zeroes at the start.\n *\n * @param buffer - The buffer to add padding to.\n * @param length - The number of bytes to pad the buffer to.\n * @returns The padded buffer.\n */\nexport const padStart = (\n  buffer: Uint8Array,\n  length = BUFFER_WIDTH,\n): Uint8Array => {\n  const padding = new Uint8Array(Math.max(length - buffer.length, 0)).fill(\n    0x00,\n  );\n\n  return concatBytes([padding, buffer]);\n};\n\n/**\n * Add padding to a buffer. If the buffer is larger than `length`, this function won't do anything. If it's smaller, the\n * buffer will be padded to the specified length, with extra zeroes at the end.\n *\n * @param buffer - The buffer to add padding to.\n * @param length - The number of bytes to pad the buffer to.\n * @returns The padded buffer.\n */\nexport const padEnd = (\n  buffer: Uint8Array,\n  length = BUFFER_WIDTH,\n): Uint8Array => {\n  const padding = new Uint8Array(Math.max(length - buffer.length, 0)).fill(\n    0x00,\n  );\n\n  return concatBytes([buffer, padding]);\n};\n","export * from './buffer';\n","import * as nacl from 'tweetnacl';\nimport * as naclUtil from 'tweetnacl-util';\n\nimport { isNullish } from './utils';\n\nexport type EthEncryptedData = {\n  version: string;\n  nonce: string;\n  ephemPublicKey: string;\n  ciphertext: string;\n};\n\n/**\n * Encrypt a message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encrypt({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  switch (version) {\n    case 'x25519-xsalsa20-poly1305': {\n      if (typeof data !== 'string') {\n        throw new Error('Message data must be given as a string');\n      }\n      // generate ephemeral keypair\n      const ephemeralKeyPair = nacl.box.keyPair();\n\n      // assemble encryption parameters - from string to UInt8\n      let pubKeyUInt8Array: Uint8Array;\n      try {\n        pubKeyUInt8Array = naclUtil.decodeBase64(publicKey);\n      } catch (err) {\n        throw new Error('Bad public key');\n      }\n\n      const msgParamsUInt8Array = naclUtil.decodeUTF8(data);\n      const nonce = nacl.randomBytes(nacl.box.nonceLength);\n\n      // encrypt\n      const encryptedMessage = nacl.box(\n        msgParamsUInt8Array,\n        nonce,\n        pubKeyUInt8Array,\n        ephemeralKeyPair.secretKey,\n      );\n\n      // handle encrypted data\n      const output = {\n        version: 'x25519-xsalsa20-poly1305',\n        nonce: naclUtil.encodeBase64(nonce),\n        ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n        ciphertext: naclUtil.encodeBase64(encryptedMessage),\n      };\n      // return encrypted msg data\n      return output;\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported');\n  }\n}\n\n/**\n * Encrypt a message in a way that obscures the message length.\n *\n * The message is padded to a multiple of 2048 before being encrypted so that the length of the\n * resulting encrypted message can't be used to guess the exact length of the original message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encryptSafely({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  const DEFAULT_PADDING_LENGTH = 2 ** 11;\n  const NACL_EXTRA_BYTES = 16;\n\n  if (typeof data === 'object' && data && 'toJSON' in data) {\n    // remove toJSON attack vector\n    // TODO, check all possible children\n    throw new Error(\n      'Cannot encrypt with toJSON property.  Please remove toJSON property',\n    );\n  }\n\n  // add padding\n  const dataWithPadding = {\n    data,\n    padding: '',\n  };\n\n  // calculate padding\n  const dataLength = Buffer.byteLength(\n    JSON.stringify(dataWithPadding),\n    'utf-8',\n  );\n  const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n  let padLength = 0;\n  // Only pad if necessary\n  if (modVal > 0) {\n    padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n  }\n  dataWithPadding.padding = '0'.repeat(padLength);\n\n  const paddedMessage = JSON.stringify(dataWithPadding);\n  return encrypt({ publicKey, data: paddedMessage, version });\n}\n\n/**\n * Decrypt a message.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decrypt({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  switch (encryptedData.version) {\n    case 'x25519-xsalsa20-poly1305': {\n      // string to buffer to UInt8Array\n      const receiverPrivateKeyUint8Array = naclDecodeHex(privateKey);\n      const receiverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(\n        receiverPrivateKeyUint8Array,\n      ).secretKey;\n\n      // assemble decryption parameters\n      const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n      const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n      const ephemPublicKey = naclUtil.decodeBase64(\n        encryptedData.ephemPublicKey,\n      );\n\n      // decrypt\n      const decryptedMessage = nacl.box.open(\n        ciphertext,\n        nonce,\n        ephemPublicKey,\n        receiverEncryptionPrivateKey,\n      );\n\n      // return decrypted msg data\n      try {\n        if (!decryptedMessage) {\n          throw new Error();\n        }\n        const output = naclUtil.encodeUTF8(decryptedMessage);\n        // TODO: This is probably extraneous but was kept to minimize changes during refactor\n        if (!output) {\n          throw new Error();\n        }\n        return output;\n      } catch (err) {\n        if (err && typeof err.message === 'string' && err.message.length) {\n          throw new Error(`Decryption failed: ${err.message as string}`);\n        }\n        throw new Error(`Decryption failed.`);\n      }\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported.');\n  }\n}\n\n/**\n * Decrypt a message that has been encrypted using `encryptSafely`.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decryptSafely({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const dataWithPadding = JSON.parse(decrypt({ encryptedData, privateKey }));\n  return dataWithPadding.data;\n}\n\n/**\n * Get the encryption public key for the given key.\n *\n * @param privateKey - The private key to generate the encryption public key with.\n * @returns The encryption public key.\n */\nexport function getEncryptionPublicKey(privateKey: string): string {\n  const privateKeyUint8Array = naclDecodeHex(privateKey);\n  const encryptionPublicKey =\n    nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n  return naclUtil.encodeBase64(encryptionPublicKey);\n}\n\n/**\n * Convert a hex string to the UInt8Array format used by nacl.\n *\n * @param msgHex - The string to convert.\n * @returns The converted string.\n */\nfunction naclDecodeHex(msgHex: string): Uint8Array {\n  const msgBase64 = Buffer.from(msgHex, 'hex').toString('base64');\n  return naclUtil.decodeBase64(msgBase64);\n}\n","export * from './personal-sign';\nexport * from './sign-typed-data';\nexport * from './encryption';\nexport { concatSig, normalize } from './utils';\n","import {\n  bufferToHex,\n  ecsign,\n  hashPersonalMessage,\n  publicToAddress,\n  toBuffer,\n  ToBufferInputTypes,\n} from '@ethereumjs/util';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * Create an Ethereum-specific signature for a message.\n *\n * This function is equivalent to the `eth_sign` Ethereum JSON-RPC method as specified in EIP-1417,\n * as well as the MetaMask's `personal_sign` method.\n *\n * @param options - The personal sign options.\n * @param options.privateKey - The key to sign with.\n * @param options.data - The hex data to sign.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function personalSign({\n  privateKey,\n  data,\n}: {\n  privateKey: Buffer;\n  data: ToBufferInputTypes;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const message = legacyToBuffer(data);\n  const msgHash = hashPersonalMessage(message);\n  const sig = ecsign(msgHash, privateKey);\n  const serialized = concatSig(toBuffer(sig.v), sig.r, sig.s);\n  return serialized;\n}\n\n/**\n * Recover the address of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The signature recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded address of the message signer.\n */\nexport function recoverPersonalSignature({\n  data,\n  signature,\n}: {\n  data: ToBufferInputTypes;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  const sender = publicToAddress(publicKey);\n  const senderHex = bufferToHex(sender);\n  return senderHex;\n}\n\n/**\n * Recover the public key of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The public key recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded public key of the message signer.\n */\nexport function extractPublicKey({\n  data,\n  signature,\n}: {\n  data: ToBufferInputTypes;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  return `0x${publicKey.toString('hex')}`;\n}\n\n/**\n * Get the public key for the given signature and message.\n *\n * @param message - The message that was signed.\n * @param signature - The '0x'-prefixed hex encoded message signature.\n * @returns The public key of the signer.\n */\nfunction getPublicKeyFor(\n  message: ToBufferInputTypes,\n  signature: string,\n): Buffer {\n  const messageHash = hashPersonalMessage(legacyToBuffer(message));\n  return recoverPublicKey(messageHash, signature);\n}\n","import { arrToBufArr, ecsign, publicToAddress } from '@ethereumjs/util';\nimport { encode, encodePacked } from '@metamask/abi-utils';\nimport {\n  getArrayType,\n  getByteLength,\n  getLength,\n  isArrayType,\n} from '@metamask/abi-utils/dist/parsers';\nimport { padStart } from '@metamask/abi-utils/dist/utils';\nimport {\n  add0x,\n  assert,\n  bigIntToBytes,\n  bytesToHex,\n  concatBytes,\n  hexToBytes,\n  isStrictHexString,\n  numberToBytes,\n  signedBigIntToBytes,\n  stringToBytes,\n} from '@metamask/utils';\nimport { keccak256 } from 'ethereum-cryptography/keccak';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * This is the message format used for `V1` of `signTypedData`.\n */\nexport type TypedDataV1 = TypedDataV1Field[];\n\n/**\n * This represents a single field in a `V1` `signTypedData` message.\n *\n * @property name - The name of the field.\n * @property type - The type of a field (must be a supported Solidity type).\n * @property value - The value of the field.\n */\nexport type TypedDataV1Field = {\n  name: string;\n  type: string;\n  value: any;\n};\n\n/**\n * Represents the version of `signTypedData` being used.\n *\n * V1 is based upon [an early version of\n * EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on EIP-712, except that arrays and recursive data structures are not supported.\n *\n * V4 is based on EIP-712, and includes full support of arrays and recursive data structures.\n */\nexport enum SignTypedDataVersion {\n  V1 = 'V1',\n  V3 = 'V3',\n  V4 = 'V4',\n}\n\nexport type MessageTypeProperty = {\n  name: string;\n  type: string;\n};\n\nexport type MessageTypes = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  EIP712Domain: MessageTypeProperty[];\n  [additionalProperties: string]: MessageTypeProperty[];\n};\n\n/**\n * This is the message format used for `signTypeData`, for all versions\n * except `V1`.\n *\n * @template T - The custom types used by this message.\n * @property types - The custom types used by this message.\n * @property primaryType - The type of the message.\n * @property domain - Signing domain metadata. The signing domain is the intended context for the\n * signature (e.g. the dapp, protocol, etc. that it's intended for). This data is used to\n * construct the domain seperator of the message.\n * @property domain.name - The name of the signing domain.\n * @property domain.version - The current major version of the signing domain.\n * @property domain.chainId - The chain ID of the signing domain.\n * @property domain.verifyingContract - The address of the contract that can verify the signature.\n * @property domain.salt - A disambiguating salt for the protocol.\n * @property message - The message to be signed.\n */\nexport type TypedMessage<T extends MessageTypes> = {\n  types: T;\n  primaryType: keyof T;\n  domain: {\n    name?: string;\n    version?: string;\n    chainId?: number;\n    verifyingContract?: string;\n    salt?: ArrayBuffer;\n  };\n  message: Record<string, unknown>;\n};\n\nexport const TYPED_MESSAGE_SCHEMA = {\n  type: 'object',\n  properties: {\n    types: {\n      type: 'object',\n      additionalProperties: {\n        type: 'array',\n        items: {\n          type: 'object',\n          properties: {\n            name: { type: 'string' },\n            type: { type: 'string' },\n          },\n          required: ['name', 'type'],\n        },\n      },\n    },\n    primaryType: { type: 'string' },\n    domain: { type: 'object' },\n    message: { type: 'object' },\n  },\n  required: ['types', 'primaryType', 'domain', 'message'],\n};\n\n/**\n * Validate that the given value is a valid version string.\n *\n * @param version - The version value to validate.\n * @param allowedVersions - A list of allowed versions. If omitted, all versions are assumed to be\n * allowed.\n */\nfunction validateVersion(\n  version: SignTypedDataVersion,\n  allowedVersions?: SignTypedDataVersion[],\n) {\n  if (!Object.keys(SignTypedDataVersion).includes(version)) {\n    throw new Error(`Invalid version: '${version}'`);\n  } else if (allowedVersions && !allowedVersions.includes(version)) {\n    throw new Error(\n      `SignTypedDataVersion not allowed: '${version}'. Allowed versions are: ${allowedVersions.join(\n        ', ',\n      )}`,\n    );\n  }\n}\n\n/**\n * Parse a string, number, or bigint value into a `Uint8Array`.\n *\n * @param type - The type of the value.\n * @param value - The value to parse.\n * @returns The parsed value.\n */\nfunction parseNumber(type: string, value: string | number | bigint) {\n  assert(\n    value !== null,\n    `Unable to encode value: Invalid number. Expected a valid number value, but received \"${value}\".`,\n  );\n\n  const bigIntValue = BigInt(value);\n\n  const length = getLength(type);\n  const maxValue = BigInt(2) ** BigInt(length) - BigInt(1);\n\n  // Note that this is not accurate, since the actual maximum value for unsigned\n  // integers is `2 ^ (length - 1) - 1`, but this is required for backwards\n  // compatibility with the old implementation.\n  assert(\n    bigIntValue >= -maxValue && bigIntValue <= maxValue,\n    `Unable to encode value: Number \"${value}\" is out of range for type \"${type}\".`,\n  );\n\n  return bigIntValue;\n}\n\n/**\n * Parse an address string to a `Uint8Array`. The behaviour of this is quite\n * strange, in that it does not parse the address as hexadecimal string, nor as\n * UTF-8. It does some weird stuff with the string and char codes, and then\n * returns the result as a `Uint8Array`.\n *\n * This is based on the old `ethereumjs-abi` implementation, which essentially\n * calls `new BN(address, 10)` on the address string, the equivalent of calling\n * `parseInt(address, 10)` in JavaScript. This is not a valid way to parse an\n * address and would result in `NaN` in plain JavaScript, but it is the\n * behaviour of the old implementation, and so we must preserve it for backwards\n * compatibility.\n *\n * @param address - The address to parse.\n * @returns The parsed address.\n */\nfunction reallyStrangeAddressToBytes(address: string): Uint8Array {\n  let addressValue = BigInt(0);\n\n  for (let i = 0; i < address.length; i++) {\n    const character = BigInt(address.charCodeAt(i) - 48);\n    addressValue *= BigInt(10);\n\n    // 'a'\n    if (character >= 49) {\n      addressValue += character - BigInt(49) + BigInt(0xa);\n\n      // 'A'\n    } else if (character >= 17) {\n      addressValue += character - BigInt(17) + BigInt(0xa);\n\n      // '0' - '9'\n    } else {\n      addressValue += character;\n    }\n  }\n\n  return padStart(bigIntToBytes(addressValue), 20);\n}\n\n/**\n * Encode a single field.\n *\n * @param types - All type definitions.\n * @param name - The name of the field to encode.\n * @param type - The type of the field being encoded.\n * @param value - The value to encode.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns Encoded representation of the field.\n */\nfunction encodeField(\n  types: Record<string, MessageTypeProperty[]>,\n  name: string,\n  type: string,\n  // TODO: constrain type on `value`\n  value: any,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): [type: string, value: bigint | Buffer | boolean | string | Uint8Array] {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  if (types[type] !== undefined) {\n    return [\n      'bytes32',\n      // TODO: return Buffer, remove string from return type\n      version === SignTypedDataVersion.V4 && value == null // eslint-disable-line no-eq-null\n        ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n        : arrToBufArr(keccak256(encodeData(type, value, types, version))),\n    ];\n  }\n\n  // `function` is supported in `@metamask/abi-utils`, but not allowed by\n  // EIP-712, so we throw an error here.\n  if (type === 'function') {\n    throw new Error('Unsupported or invalid type: \"function\"');\n  }\n\n  if (value === undefined) {\n    throw new Error(`missing value for field ${name} of type ${type}`);\n  }\n\n  if (type === 'address') {\n    if (typeof value === 'number') {\n      return ['address', padStart(numberToBytes(value), 20)];\n    } else if (isStrictHexString(value)) {\n      return ['address', add0x(value)];\n    } else if (typeof value === 'string') {\n      return ['address', reallyStrangeAddressToBytes(value).subarray(0, 20)];\n    }\n  }\n\n  if (type === 'bool') {\n    return ['bool', Boolean(value)];\n  }\n\n  if (type === 'bytes') {\n    if (typeof value === 'number') {\n      value = numberToBytes(value);\n    } else if (isStrictHexString(value) || value === '0x') {\n      value = hexToBytes(value);\n    } else if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n    return ['bytes32', arrToBufArr(keccak256(value))];\n  }\n\n  if (type.startsWith('bytes') && type !== 'bytes' && !type.includes('[')) {\n    if (typeof value === 'number') {\n      if (value < 0) {\n        return ['bytes32', new Uint8Array(32)];\n      }\n\n      return ['bytes32', bigIntToBytes(BigInt(value))];\n    } else if (isStrictHexString(value)) {\n      return ['bytes32', hexToBytes(value)];\n    }\n\n    return ['bytes32', value];\n  }\n\n  if (type.startsWith('int') && !type.includes('[')) {\n    const bigIntValue = parseNumber(type, value);\n    if (bigIntValue >= BigInt(0)) {\n      return ['uint256', bigIntValue];\n    }\n\n    return ['int256', bigIntValue];\n  }\n\n  if (type === 'string') {\n    if (typeof value === 'number') {\n      value = numberToBytes(value);\n    } else {\n      value = stringToBytes(value ?? '');\n    }\n    return ['bytes32', arrToBufArr(keccak256(value))];\n  }\n\n  if (type.endsWith(']')) {\n    if (version === SignTypedDataVersion.V3) {\n      throw new Error(\n        'Arrays are unimplemented in encodeData; use V4 extension',\n      );\n    }\n    const parsedType = type.slice(0, type.lastIndexOf('['));\n    const typeValuePairs = value.map((item: any) =>\n      encodeField(types, name, parsedType, item, version),\n    );\n    return [\n      'bytes32',\n      arrToBufArr(\n        keccak256(\n          encode(\n            typeValuePairs.map(([t]) => t),\n            typeValuePairs.map(([, v]) => v),\n          ),\n        ),\n      ),\n    ];\n  }\n\n  return [type, value];\n}\n\n/**\n * Encodes an object by encoding and concatenating each of its members.\n *\n * @param primaryType - The root type.\n * @param data - The object to encode.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns An encoded representation of an object.\n */\nfunction encodeData(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const encodedTypes = ['bytes32'];\n  const encodedValues: (string | bigint | boolean | Uint8Array | Buffer)[] = [\n    hashType(primaryType, types),\n  ];\n\n  for (const field of types[primaryType]) {\n    if (version === SignTypedDataVersion.V3 && data[field.name] === undefined) {\n      continue;\n    }\n    const [type, value] = encodeField(\n      types,\n      field.name,\n      field.type,\n      data[field.name],\n      version,\n    );\n    encodedTypes.push(type);\n    encodedValues.push(value);\n  }\n\n  return arrToBufArr(encode(encodedTypes, encodedValues));\n}\n\n/**\n * Encodes the type of an object by encoding a comma delimited list of its members.\n *\n * @param primaryType - The root type to encode.\n * @param types - Type definitions for all types included in the message.\n * @returns An encoded representation of the primary type.\n */\nfunction encodeType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): string {\n  let result = '';\n  const unsortedDeps = findTypeDependencies(primaryType, types);\n  unsortedDeps.delete(primaryType);\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n  for (const type of deps) {\n    const children = types[type];\n    if (!children) {\n      throw new Error(`No type definition specified: ${type}`);\n    }\n\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`;\n  }\n\n  return result;\n}\n\n/**\n * Finds all types within a type definition object.\n *\n * @param primaryType - The root type.\n * @param types - Type definitions for all types included in the message.\n * @param results - The current set of accumulated types.\n * @returns The set of all types found in the type definition.\n */\nfunction findTypeDependencies(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n  results: Set<string> = new Set(),\n): Set<string> {\n  if (typeof primaryType !== 'string') {\n    throw new Error(\n      `Invalid findTypeDependencies input ${JSON.stringify(primaryType)}`,\n    );\n  }\n  const match = primaryType.match(/^\\w*/u) as RegExpMatchArray;\n  [primaryType] = match;\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results;\n  }\n\n  results.add(primaryType);\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies(field.type, types, results);\n  }\n  return results;\n}\n\n/**\n * Hashes an object.\n *\n * @param primaryType - The root type.\n * @param data - The object to hash.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the object.\n */\nfunction hashStruct(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const encoded = encodeData(primaryType, data, types, version);\n  const hashed = keccak256(encoded);\n  const buf = arrToBufArr(hashed);\n  return buf;\n}\n\n/**\n * Hashes the type of an object.\n *\n * @param primaryType - The root type to hash.\n * @param types - Type definitions for all types included in the message.\n * @returns The hash of the object type.\n */\nfunction hashType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): Buffer {\n  const encodedHashType = stringToBytes(encodeType(primaryType, types));\n  return arrToBufArr(keccak256(encodedHashType));\n}\n\n/**\n * Removes properties from a message object that are not defined per EIP-712.\n *\n * @param data - The typed message object.\n * @returns The typed message object with only allowed fields.\n */\nfunction sanitizeData<T extends MessageTypes>(\n  data: TypedMessage<T>,\n): TypedMessage<T> {\n  const sanitizedData: Partial<TypedMessage<T>> = {};\n  for (const key in TYPED_MESSAGE_SCHEMA.properties) {\n    if (data[key]) {\n      sanitizedData[key] = data[key];\n    }\n  }\n\n  if ('types' in sanitizedData) {\n    // TODO: Fix types\n    sanitizedData.types = { EIP712Domain: [], ...sanitizedData.types } as any;\n  }\n  return sanitizedData as Required<TypedMessage<T>>;\n}\n\n/**\n * Create a EIP-712 Domain Hash.\n * This hash is used at the top of the EIP-712 encoding.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the domain object.\n */\nfunction eip712DomainHash<T extends MessageTypes>(\n  typedData: TypedMessage<T>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const sanitizedData = sanitizeData(typedData);\n  const { domain } = sanitizedData;\n  const domainType = { EIP712Domain: sanitizedData.types.EIP712Domain };\n  return hashStruct('EIP712Domain', domain, domainType, version);\n}\n\n/**\n * Hash a typed message according to EIP-712. The returned message starts with the EIP-712 prefix,\n * which is \"1901\", followed by the hash of the domain separator, then the data (if any).\n * The result is hashed again and returned.\n *\n * This function does not sign the message. The resulting hash must still be signed to create an\n * EIP-712 signature.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the typed message.\n */\nfunction eip712Hash<T extends MessageTypes>(\n  typedData: TypedMessage<T>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const sanitizedData = sanitizeData(typedData);\n  const parts = [hexToBytes('1901')];\n  parts.push(eip712DomainHash(typedData, version));\n\n  if (sanitizedData.primaryType !== 'EIP712Domain') {\n    parts.push(\n      hashStruct(\n        // TODO: Validate that this is a string, so this type cast can be removed.\n        sanitizedData.primaryType as string,\n        sanitizedData.message,\n        sanitizedData.types,\n        version,\n      ),\n    );\n  }\n  return arrToBufArr(keccak256(concatBytes(parts)));\n}\n\n/**\n * A collection of utility functions used for signing typed data.\n */\nexport const TypedDataUtils = {\n  encodeData,\n  encodeType,\n  findTypeDependencies,\n  hashStruct,\n  hashType,\n  sanitizeData,\n  eip712Hash,\n  eip712DomainHash,\n};\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The '0x'-prefixed hex encoded hash representing the type of the provided message.\n */\nexport function typedSignatureHash(typedData: TypedDataV1Field[]): string {\n  const hashBuffer = _typedSignatureHash(typedData);\n  return bytesToHex(hashBuffer);\n}\n\n/**\n * Normalize a value, so that `@metamask/abi-utils` can handle it. This\n * matches the behaviour of the `ethereumjs-abi` library.\n *\n * @param type - The type of the value to normalize.\n * @param value - The value to normalize.\n * @returns The normalized value.\n */\nfunction normalizeValue(type: string, value: unknown): any {\n  if (isArrayType(type) && Array.isArray(value)) {\n    const [innerType] = getArrayType(type);\n    return value.map((item) => normalizeValue(innerType, item));\n  }\n\n  if (type === 'address') {\n    if (typeof value === 'number') {\n      return padStart(numberToBytes(value), 20);\n    }\n\n    if (isStrictHexString(value)) {\n      return padStart(hexToBytes(value).subarray(0, 20), 20);\n    }\n\n    if (value instanceof Uint8Array) {\n      return padStart(value.subarray(0, 20), 20);\n    }\n  }\n\n  if (type === 'bool') {\n    return Boolean(value);\n  }\n\n  if (type.startsWith('bytes') && type !== 'bytes') {\n    const length = getByteLength(type);\n    if (typeof value === 'number') {\n      if (value < 0) {\n        // `solidityPack(['bytesN'], [-1])` returns `0x00..00`.\n        return new Uint8Array();\n      }\n\n      return numberToBytes(value).subarray(0, length);\n    }\n\n    if (isStrictHexString(value)) {\n      return hexToBytes(value).subarray(0, length);\n    }\n\n    if (value instanceof Uint8Array) {\n      return value.subarray(0, length);\n    }\n  }\n\n  if (type.startsWith('uint')) {\n    if (typeof value === 'number') {\n      return Math.abs(value);\n    }\n  }\n\n  if (type.startsWith('int')) {\n    if (typeof value === 'number') {\n      const length = getLength(type);\n      return BigInt.asIntN(length, BigInt(value));\n    }\n  }\n\n  return value;\n}\n\n/**\n * For some reason `ethereumjs-abi` treats `address` and `address[]` differently\n * so we need to normalize `address[]` differently.\n *\n * @param values - The values to normalize.\n * @returns The normalized values.\n */\nfunction normalizeAddresses(values: unknown[]) {\n  return values.map((value) => {\n    if (typeof value === 'number') {\n      return padStart(numberToBytes(value), 32);\n    }\n\n    if (isStrictHexString(value)) {\n      return padStart(hexToBytes(value).subarray(0, 32), 32);\n    }\n\n    if (value instanceof Uint8Array) {\n      return padStart(value.subarray(0, 32), 32);\n    }\n\n    return value;\n  });\n}\n\n/**\n * For some reason `ethereumjs-abi` treats `intN` and `intN[]` differently\n * so we need to normalize `intN[]` differently.\n *\n * @param type - The type of the value to normalize.\n * @param values - The values to normalize.\n * @returns The normalized values.\n */\nfunction normalizeIntegers(type: string, values: unknown[]) {\n  return values.map((value) => {\n    if (\n      typeof value === 'string' ||\n      typeof value === 'number' ||\n      typeof value === 'bigint'\n    ) {\n      const bigIntValue = parseNumber(type, value);\n      if (bigIntValue >= BigInt(0)) {\n        return padStart(bigIntToBytes(bigIntValue), 32);\n      }\n\n      const length = getLength(type);\n      const asIntN = BigInt.asIntN(length, bigIntValue);\n      return signedBigIntToBytes(asIntN, 32);\n    }\n\n    return value;\n  });\n}\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The hash representing the type of the provided message.\n */\nfunction _typedSignatureHash(typedData: TypedDataV1): Buffer {\n  const error = new Error('Expect argument to be non-empty array');\n  if (\n    typeof typedData !== 'object' ||\n    !('length' in typedData) ||\n    !typedData.length\n  ) {\n    throw error;\n  }\n\n  const normalizedData = typedData.map(({ name, type, value }) => {\n    // Handle an edge case with `address[]` types.\n    if (type === 'address[]') {\n      return {\n        name,\n        type: 'bytes32[]',\n        value: normalizeAddresses(value),\n      };\n    }\n\n    // Handle an edge case with `intN[]` types.\n    if (type.startsWith('int') && isArrayType(type)) {\n      const [innerType, length] = getArrayType(type);\n      return {\n        name,\n        type: `bytes32[${length ?? ''}]`,\n        value: normalizeIntegers(innerType, value),\n      };\n    }\n\n    return {\n      name,\n      type,\n      value: normalizeValue(type, value),\n    };\n  });\n\n  const data = normalizedData.map((e) => {\n    if (e.type !== 'bytes') {\n      return e.value;\n    }\n\n    return legacyToBuffer(e.value);\n  });\n  const types = normalizedData.map((e) => {\n    if (e.type === 'function') {\n      throw new Error('Unsupported or invalid type: \"function\"');\n    }\n\n    return e.type;\n  });\n  const schema = typedData.map((e) => {\n    if (!e.name) {\n      throw error;\n    }\n    return `${e.type} ${e.name}`;\n  });\n\n  return arrToBufArr(\n    keccak256(\n      encodePacked(\n        ['bytes32', 'bytes32'],\n        [\n          keccak256(encodePacked(['string[]'], [schema], true)),\n          keccak256(encodePacked(types, data, true)),\n        ],\n      ),\n    ),\n  );\n}\n\n/**\n * Sign typed data according to EIP-712. The signing differs based upon the `version`.\n *\n * V1 is based upon [an early version of\n * EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), except that arrays and\n * recursive data structures are not supported.\n *\n * V4 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), and includes full support of\n * arrays and recursive data structures.\n *\n * @param options - The signing options.\n * @param options.privateKey - The private key to sign with.\n * @param options.data - The typed data to sign.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function signTypedData<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  privateKey,\n  data,\n  version,\n}: {\n  privateKey: Buffer;\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing private key parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(data as TypedMessage<T>, version);\n  const sig = ecsign(messageHash, privateKey);\n  return concatSig(arrToBufArr(bigIntToBytes(sig.v)), sig.r, sig.s);\n}\n\n/**\n * Recover the address of the account that created the given EIP-712\n * signature. The version provided must match the version used to\n * create the signature.\n *\n * @param options - The signature recovery options.\n * @param options.data - The typed data that was signed.\n * @param options.signature - The '0x-prefixed hex encoded message signature.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex address of the signer.\n */\nexport function recoverTypedSignature<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  data,\n  signature,\n  version,\n}: {\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  signature: string;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(data as TypedMessage<T>, version);\n  const publicKey = recoverPublicKey(messageHash, signature);\n  const sender = publicToAddress(publicKey);\n  return bytesToHex(sender);\n}\n","import {\n  bufferToInt,\n  ecrecover,\n  fromRpcSig,\n  fromSigned,\n  isHexString,\n  toBuffer,\n  ToBufferInputTypes,\n  toUnsigned,\n} from '@ethereumjs/util';\nimport {\n  numberToHex,\n  remove0x,\n  add0x,\n  bytesToHex,\n  numberToBytes,\n} from '@metamask/utils';\n\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nexport function padWithZeroes(hexString: string, targetLength: number): string {\n  if (hexString !== '' && !/^[a-f0-9]+$/iu.test(hexString)) {\n    throw new Error(\n      `Expected an unprefixed hex string. Received: ${hexString}`,\n    );\n  }\n\n  if (targetLength < 0) {\n    throw new Error(\n      `Expected a non-negative integer target length. Received: ${targetLength}`,\n    );\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, '0');\n}\n\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nexport function isNullish(value) {\n  return value === null || value === undefined;\n}\n\n/**\n * Convert a value to a Buffer. This function should be equivalent to the `toBuffer` function in\n * `ethereumjs-util@5.2.1`.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nexport function legacyToBuffer(value: ToBufferInputTypes) {\n  return typeof value === 'string' && !isHexString(value)\n    ? Buffer.from(value)\n    : toBuffer(value);\n}\n\n/**\n * Concatenate an extended ECDSA signature into a single '0x'-prefixed hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature as a '0x'-prefixed string.\n */\nexport function concatSig(v: Buffer, r: Buffer, s: Buffer): string {\n  const rSig = fromSigned(r);\n  const sSig = fromSigned(s);\n  const vSig = bufferToInt(v);\n  const rStr = padWithZeroes(toUnsigned(rSig).toString('hex'), 64);\n  const sStr = padWithZeroes(toUnsigned(sSig).toString('hex'), 64);\n  const vStr = remove0x(numberToHex(vSig));\n  return add0x(rStr.concat(sStr, vStr));\n}\n\n/**\n * Recover the public key from the given signature and message hash.\n *\n * @param messageHash - The hash of the signed message.\n * @param signature - The signature.\n * @returns The public key of the signer.\n */\nexport function recoverPublicKey(\n  messageHash: Buffer,\n  signature: string,\n): Buffer {\n  const sigParams = fromRpcSig(signature);\n  return ecrecover(messageHash, sigParams.v, sigParams.r, sigParams.s);\n}\n\n/**\n * Normalize the input to a lower-cased '0x'-prefixed hex string.\n *\n * @param input - The value to normalize.\n * @returns The normalized value.\n */\nexport function normalize(input: number | string): string | undefined {\n  if (isNullish(input)) {\n    return undefined;\n  }\n\n  if (typeof input === 'number') {\n    if (input < 0) {\n      return '0x';\n    }\n    const buffer = numberToBytes(input);\n    input = bytesToHex(buffer);\n  }\n\n  if (typeof input !== 'string') {\n    let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n    msg += ` received ${typeof input}: ${input as any as string}`;\n    throw new Error(msg);\n  }\n\n  return add0x(input.toLowerCase());\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass, CurveType } from './abstract/weierstrass.js';\nimport { CHash } from './abstract/utils.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport type { Group, GroupConstructor, AffinePoint } from './curve.js';\nimport { mod, IField } from './modular.js';\nimport { bytesToNumberBE, CHash, concatBytes, utf8ToBytes, validateObject } from './utils.js';\n\n/**\n * * `DST` is a domain separation tag, defined in section 2.2.5\n * * `p` characteristic of F, where F is a finite field of characteristic p and order q = p^m\n * * `m` is extension degree (1 for prime fields)\n * * `k` is the target security target in bits (e.g. 128), from section 5.1\n * * `expand` is `xmd` (SHA2, SHA3, BLAKE) or `xof` (SHAKE, BLAKE-XOF)\n * * `hash` conforming to `utils.CHash` interface, with `outputLen` / `blockLen` props\n */\ntype UnicodeOrBytes = string | Uint8Array;\nexport type Opts = {\n  DST: UnicodeOrBytes;\n  p: bigint;\n  m: number;\n  k: number;\n  expand: 'xmd' | 'xof';\n  hash: CHash;\n};\n\nfunction validateDST(dst: UnicodeOrBytes): Uint8Array {\n  if (dst instanceof Uint8Array) return dst;\n  if (typeof dst === 'string') return utf8ToBytes(dst);\n  throw new Error('DST must be Uint8Array or string');\n}\n\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value: number, length: number): Uint8Array {\n  if (value < 0 || value >= 1 << (8 * length)) {\n    throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n  }\n  const res = Array.from({ length }).fill(0) as number[];\n  for (let i = length - 1; i >= 0; i--) {\n    res[i] = value & 0xff;\n    value >>>= 8;\n  }\n  return new Uint8Array(res);\n}\n\nfunction strxor(a: Uint8Array, b: Uint8Array): Uint8Array {\n  const arr = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    arr[i] = a[i] ^ b[i];\n  }\n  return arr;\n}\n\nfunction isBytes(item: unknown): void {\n  if (!(item instanceof Uint8Array)) throw new Error('Uint8Array expected');\n}\nfunction isNum(item: unknown): void {\n  if (!Number.isSafeInteger(item)) throw new Error('number expected');\n}\n\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.4.1\nexport function expand_message_xmd(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n  if (DST.length > 255) DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n  const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n  const ell = Math.ceil(lenInBytes / b_in_bytes);\n  if (ell > 255) throw new Error('Invalid xmd length');\n  const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n  const Z_pad = i2osp(0, r_in_bytes);\n  const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n  const b = new Array<Uint8Array>(ell);\n  const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n  b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n  for (let i = 1; i <= ell; i++) {\n    const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n    b[i] = H(concatBytes(...args));\n  }\n  const pseudo_random_bytes = concatBytes(...b);\n  return pseudo_random_bytes.slice(0, lenInBytes);\n}\n\nexport function expand_message_xof(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  k: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n  // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n  if (DST.length > 255) {\n    const dkLen = Math.ceil((2 * k) / 8);\n    DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n  }\n  if (lenInBytes > 65535 || DST.length > 255)\n    throw new Error('expand_message_xof: invalid lenInBytes');\n  return (\n    H.create({ dkLen: lenInBytes })\n      .update(msg)\n      .update(i2osp(lenInBytes, 2))\n      // 2. DST_prime = DST || I2OSP(len(DST), 1)\n      .update(DST)\n      .update(i2osp(DST.length, 1))\n      .digest()\n  );\n}\n\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.3\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg: Uint8Array, count: number, options: Opts): bigint[][] {\n  validateObject(options, {\n    DST: 'string',\n    p: 'bigint',\n    m: 'isSafeInteger',\n    k: 'isSafeInteger',\n    hash: 'hash',\n  });\n  const { p, k, m, hash, expand, DST: _DST } = options;\n  isBytes(msg);\n  isNum(count);\n  const DST = validateDST(_DST);\n  const log2p = p.toString(2).length;\n  const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n  const len_in_bytes = count * m * L;\n  let prb; // pseudo_random_bytes\n  if (expand === 'xmd') {\n    prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n  } else if (expand === 'xof') {\n    prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n  } else if (expand === '_internal_pass') {\n    // for internal tests only\n    prb = msg;\n  } else {\n    throw new Error('expand must be \"xmd\" or \"xof\"');\n  }\n  const u = new Array(count);\n  for (let i = 0; i < count; i++) {\n    const e = new Array(m);\n    for (let j = 0; j < m; j++) {\n      const elm_offset = L * (j + i * m);\n      const tv = prb.subarray(elm_offset, elm_offset + L);\n      e[j] = mod(os2ip(tv), p);\n    }\n    u[i] = e;\n  }\n  return u;\n}\n\nexport function isogenyMap<T, F extends IField<T>>(field: F, map: [T[], T[], T[], T[]]) {\n  // Make same order as in spec\n  const COEFF = map.map((i) => Array.from(i).reverse());\n  return (x: T, y: T) => {\n    const [xNum, xDen, yNum, yDen] = COEFF.map((val) =>\n      val.reduce((acc, i) => field.add(field.mul(acc, x), i))\n    );\n    x = field.div(xNum, xDen); // xNum / xDen\n    y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n    return { x, y };\n  };\n}\n\nexport interface H2CPoint<T> extends Group<H2CPoint<T>> {\n  add(rhs: H2CPoint<T>): H2CPoint<T>;\n  toAffine(iz?: bigint): AffinePoint<T>;\n  clearCofactor(): H2CPoint<T>;\n  assertValidity(): void;\n}\n\nexport interface H2CPointConstructor<T> extends GroupConstructor<H2CPoint<T>> {\n  fromAffine(ap: AffinePoint<T>): H2CPoint<T>;\n}\n\nexport type MapToCurve<T> = (scalar: bigint[]) => AffinePoint<T>;\n\n// Separated from initialization opts, so users won't accidentally change per-curve parameters\n// (changing DST is ok!)\nexport type htfBasicOpts = { DST: UnicodeOrBytes };\n\nexport function createHasher<T>(\n  Point: H2CPointConstructor<T>,\n  mapToCurve: MapToCurve<T>,\n  def: Opts & { encodeDST?: UnicodeOrBytes }\n) {\n  if (typeof mapToCurve !== 'function') throw new Error('mapToCurve() must be defined');\n  return {\n    // Encodes byte string to elliptic curve\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n    hashToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options } as Opts);\n      const u0 = Point.fromAffine(mapToCurve(u[0]));\n      const u1 = Point.fromAffine(mapToCurve(u[1]));\n      const P = u0.add(u1).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n    encodeToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options } as Opts);\n      const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n  };\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n// Tonelli-Shanks algorithm\n// Paper 1: https://eprint.iacr.org/2012/685.pdf (page 12)\n// Paper 2: Square Roots from 1; 24, 51, 10 to Dan Shanks\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) ≡ 1    if a is a square (mod p)\n  // (a | p) ≡ -1   if a is not a square (mod p)\n  // (a | p) ≡ 0    if a ≡ 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P ≡ 3 (mod 4)\n  // √n = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P ≡ 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Field is not always over prime, Fp2 for example has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in https://datatracker.ietf.org/doc/draft-irtf-cfrg-hash-to-curve/\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n// 0 is non-invertible: non-batched version will throw on 0\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a galois field over prime. Non-primes are not supported for now.\n * Do not init in loop: slow. Very fragile: always run a benchmark on change.\n * Major performance gains:\n * a) non-normalized operations like mulN instead of mul\n * b) `Object.freeze`\n * c) Same object shape: never add or remove keys\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Fp ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * FIPS 186 B.4.1-compliant \"constant-time\" private key generation utility.\n * Can take (n+8) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 40 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. curveFn.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (u8a(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\nexport function equalBytes(b1: Uint8Array, b2: Uint8Array) {\n  // We don't care about timing attacks here\n  if (b1.length !== b2.length) return false;\n  for (let i = 0; i < b1.length; i++) if (b1[i] !== b2[i]) return false;\n  return true;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number) {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n: bigint, pos: number, value: boolean) => {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | true;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    if (!(data instanceof Uint8Array)) throw new Error('ui8a expected');\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>) {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y² = x³ + ax + b: Short weierstrass curve formula\n   * @returns y²\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (key instanceof Uint8Array) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(readonly px: T, readonly py: T, readonly pz: T) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      // Zero is valid point too!\n      if (this.is0()) {\n        if (CURVE.allowInfinityPoint) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y²\n      const right = weierstrassEquation(x); // x³ + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): RecoveredSignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\nexport type RecoveredSignatureType = SignatureType & {\n  readonly recovery: number;\n};\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => RecoveredSignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n        let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(readonly r: bigint, readonly s: bigint, readonly recovery?: number) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size (nBitLength+64)\n     * as per FIPS 186 B.4.1 with modulo bias being neglible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const rand = CURVE.randomBytes(Fp.BYTES + 8);\n      const num = mod.hashToPrivateScalar(rand, CURVE_ORDER);\n      return ut.numberToBytesBE(num, CURVE.nByteLength);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e, Fp.BYTES)); // check for being of size BYTES\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash with a private key.\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G × k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n   * @param privKey private key\n   * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n   * @returns signature with recovery param\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): RecoveredSignature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const C = CURVE;\n    const drbg = ut.createHmacDrbg<RecoveredSignature>(C.hash.outputLen, C.nByteLength, C.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1⋅G - U2⋅P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || sg instanceof Uint8Array) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * From draft-irtf-cfrg-hash-to-curve-16\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = /* @__PURE__ */ (() => ({\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n}))();\n\nconst isoMap = /* @__PURE__ */ (() =>\n  isogenyMap(\n    Fp,\n    [\n      // xNum\n      [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n      ],\n      // xDen\n      [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n      // yNum\n      [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n      ],\n      // yDen\n      [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n    ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n  ))();\nconst mapSWU = /* @__PURE__ */ (() =>\n  mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n  }))();\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    secp256k1.ProjectivePoint,\n    (scalars: bigint[]) => {\n      const { x, y } = mapSWU(Fp.create(scalars[0]));\n      return isoMap(x, y);\n    },\n    {\n      DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    }\n  ))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n","import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","import assert from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assert.hash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assert.exists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.bytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package binary provides functions for encoding and decoding numbers in byte arrays.\n */\n\nimport { isSafeInteger } from \"@stablelib/int\";\n\n// TODO(dchest): add asserts for correct value ranges and array offsets.\n\n/**\n * Reads 2 bytes from array starting at offset as big-endian\n * signed 16-bit integer and returns it.\n */\nexport function readInt16BE(array: Uint8Array, offset = 0): number {\n    return (((array[offset + 0] << 8) | array[offset + 1]) << 16) >> 16;\n}\n\n/**\n * Reads 2 bytes from array starting at offset as big-endian\n * unsigned 16-bit integer and returns it.\n */\nexport function readUint16BE(array: Uint8Array, offset = 0): number {\n    return ((array[offset + 0] << 8) | array[offset + 1]) >>> 0;\n}\n\n/**\n * Reads 2 bytes from array starting at offset as little-endian\n * signed 16-bit integer and returns it.\n */\nexport function readInt16LE(array: Uint8Array, offset = 0): number {\n    return (((array[offset + 1] << 8) | array[offset]) << 16) >> 16;\n}\n\n/**\n * Reads 2 bytes from array starting at offset as little-endian\n * unsigned 16-bit integer and returns it.\n */\nexport function readUint16LE(array: Uint8Array, offset = 0): number {\n    return ((array[offset + 1] << 8) | array[offset]) >>> 0;\n}\n\n/**\n * Writes 2-byte big-endian representation of 16-bit unsigned\n * value to byte array starting at offset.\n *\n * If byte array is not given, creates a new 2-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint16BE(value: number, out = new Uint8Array(2), offset = 0): Uint8Array {\n    out[offset + 0] = value >>> 8;\n    out[offset + 1] = value >>> 0;\n    return out;\n}\n\nexport const writeInt16BE = writeUint16BE;\n\n/**\n * Writes 2-byte little-endian representation of 16-bit unsigned\n * value to array starting at offset.\n *\n * If byte array is not given, creates a new 2-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint16LE(value: number, out = new Uint8Array(2), offset = 0): Uint8Array {\n    out[offset + 0] = value >>> 0;\n    out[offset + 1] = value >>> 8;\n    return out;\n}\n\nexport const writeInt16LE = writeUint16LE;\n\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * signed 32-bit integer and returns it.\n */\nexport function readInt32BE(array: Uint8Array, offset = 0): number {\n    return (array[offset] << 24) |\n        (array[offset + 1] << 16) |\n        (array[offset + 2] << 8) |\n        array[offset + 3];\n}\n\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * unsigned 32-bit integer and returns it.\n */\nexport function readUint32BE(array: Uint8Array, offset = 0): number {\n    return ((array[offset] << 24) |\n        (array[offset + 1] << 16) |\n        (array[offset + 2] << 8) |\n        array[offset + 3]) >>> 0;\n}\n\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * signed 32-bit integer and returns it.\n */\nexport function readInt32LE(array: Uint8Array, offset = 0): number {\n    return (array[offset + 3] << 24) |\n        (array[offset + 2] << 16) |\n        (array[offset + 1] << 8) |\n        array[offset];\n}\n\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * unsigned 32-bit integer and returns it.\n */\nexport function readUint32LE(array: Uint8Array, offset = 0): number {\n    return ((array[offset + 3] << 24) |\n        (array[offset + 2] << 16) |\n        (array[offset + 1] << 8) |\n        array[offset]) >>> 0;\n}\n\n/**\n * Writes 4-byte big-endian representation of 32-bit unsigned\n * value to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint32BE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\n    out[offset + 0] = value >>> 24;\n    out[offset + 1] = value >>> 16;\n    out[offset + 2] = value >>> 8;\n    out[offset + 3] = value >>> 0;\n    return out;\n}\n\nexport const writeInt32BE = writeUint32BE;\n\n/**\n * Writes 4-byte little-endian representation of 32-bit unsigned\n * value to array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint32LE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\n    out[offset + 0] = value >>> 0;\n    out[offset + 1] = value >>> 8;\n    out[offset + 2] = value >>> 16;\n    out[offset + 3] = value >>> 24;\n    return out;\n}\n\n\nexport const writeInt32LE = writeUint32LE;\n\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * signed 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports exact\n * numbers in range -9007199254740991 to 9007199254740991.\n * If the number stored in the byte array is outside this range,\n * the result is not exact.\n */\nexport function readInt64BE(array: Uint8Array, offset = 0): number {\n    const hi = readInt32BE(array, offset);\n    const lo = readInt32BE(array, offset + 4);\n    return hi * 0x100000000 + lo - ((lo>>31) * 0x100000000);\n}\n\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * unsigned 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.\n */\nexport function readUint64BE(array: Uint8Array, offset = 0): number {\n    const hi = readUint32BE(array, offset);\n    const lo = readUint32BE(array, offset + 4);\n    return hi * 0x100000000 + lo;\n}\n\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * signed 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports exact\n * numbers in range -9007199254740991 to 9007199254740991.\n * If the number stored in the byte array is outside this range,\n * the result is not exact.\n */\nexport function readInt64LE(array: Uint8Array, offset = 0): number {\n    const lo = readInt32LE(array, offset);\n    const hi = readInt32LE(array, offset + 4);\n    return hi * 0x100000000 + lo - ((lo>>31) * 0x100000000);\n}\n\n\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * unsigned 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.\n */\nexport function readUint64LE(array: Uint8Array, offset = 0): number {\n    const lo = readUint32LE(array, offset);\n    const hi = readUint32LE(array, offset + 4);\n    return hi * 0x100000000 + lo;\n}\n\n/**\n * Writes 8-byte big-endian representation of 64-bit unsigned\n * value to byte array starting at offset.\n *\n * Due to JavaScript limitation, supports values up to 2^53-1.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint64BE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\n    writeUint32BE(value / 0x100000000 >>> 0, out, offset);\n    writeUint32BE(value >>> 0, out, offset + 4);\n    return out;\n}\n\nexport const writeInt64BE = writeUint64BE;\n\n/**\n * Writes 8-byte little-endian representation of 64-bit unsigned\n * value to byte array starting at offset.\n *\n * Due to JavaScript limitation, supports values up to 2^53-1.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint64LE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\n    writeUint32LE(value >>> 0, out, offset);\n    writeUint32LE(value / 0x100000000 >>> 0, out, offset + 4);\n    return out;\n}\n\nexport const writeInt64LE = writeUint64LE;\n\n/**\n * Reads bytes from array starting at offset as big-endian\n * unsigned bitLen-bit integer and returns it.\n *\n * Supports bit lengths divisible by 8, up to 48.\n */\nexport function readUintBE(bitLength: number, array: Uint8Array, offset = 0): number {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"readUintBE supports only bitLengths divisible by 8\");\n    }\n    if (bitLength / 8 > array.length - offset) {\n        throw new Error(\"readUintBE: array is too short for the given bitLength\");\n    }\n    let result = 0;\n    let mul = 1;\n    for (let i = bitLength / 8 + offset - 1; i >= offset; i--) {\n        result += array[i] * mul;\n        mul *= 256;\n    }\n    return result;\n}\n\n/**\n * Reads bytes from array starting at offset as little-endian\n * unsigned bitLen-bit integer and returns it.\n *\n * Supports bit lengths divisible by 8, up to 48.\n */\nexport function readUintLE(bitLength: number, array: Uint8Array, offset = 0): number {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"readUintLE supports only bitLengths divisible by 8\");\n    }\n    if (bitLength / 8 > array.length - offset) {\n        throw new Error(\"readUintLE: array is too short for the given bitLength\");\n    }\n    let result = 0;\n    let mul = 1;\n    for (let i = offset; i < offset + bitLength / 8; i++) {\n        result += array[i] * mul;\n        mul *= 256;\n    }\n    return result;\n}\n\n/**\n * Writes a big-endian representation of bitLen-bit unsigned\n * value to array starting at offset.\n *\n * Supports bit lengths divisible by 8, up to 48.\n *\n * If byte array is not given, creates a new one.\n *\n * Returns the output byte array.\n */\nexport function writeUintBE(bitLength: number, value: number,\n    out = new Uint8Array(bitLength / 8), offset = 0): Uint8Array {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"writeUintBE supports only bitLengths divisible by 8\");\n    }\n    if (!isSafeInteger(value)) {\n        throw new Error(\"writeUintBE value must be an integer\");\n    }\n    let div = 1;\n    for (let i = bitLength / 8 + offset - 1; i >= offset; i--) {\n        out[i] = (value / div) & 0xff;\n        div *= 256;\n    }\n    return out;\n}\n\n/**\n * Writes a little-endian representation of bitLen-bit unsigned\n * value to array starting at offset.\n *\n * Supports bit lengths divisible by 8, up to 48.\n *\n * If byte array is not given, creates a new one.\n *\n * Returns the output byte array.\n */\nexport function writeUintLE(bitLength: number, value: number,\n    out = new Uint8Array(bitLength / 8), offset = 0): Uint8Array {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"writeUintLE supports only bitLengths divisible by 8\");\n    }\n    if (!isSafeInteger(value)) {\n        throw new Error(\"writeUintLE value must be an integer\");\n    }\n    let div = 1;\n    for (let i = offset; i < offset + bitLength / 8; i++) {\n        out[i] = (value / div) & 0xff;\n        div *= 256;\n    }\n    return out;\n}\n\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * 32-bit floating-point number and returns it.\n */\nexport function readFloat32BE(array: Uint8Array, offset = 0): number {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset);\n}\n\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * 32-bit floating-point number and returns it.\n */\nexport function readFloat32LE(array: Uint8Array, offset = 0): number {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset, true);\n}\n\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * 64-bit floating-point number (\"double\") and returns it.\n */\nexport function readFloat64BE(array: Uint8Array, offset = 0): number {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset);\n}\n\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * 64-bit floating-point number (\"double\") and returns it.\n */\nexport function readFloat64LE(array: Uint8Array, offset = 0): number {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset, true);\n}\n\n/**\n * Writes 4-byte big-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat32BE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat32(offset, value);\n    return out;\n}\n\n/**\n * Writes 4-byte little-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat32LE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat32(offset, value, true);\n    return out;\n}\n\n/**\n * Writes 8-byte big-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat64BE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat64(offset, value);\n    return out;\n}\n\n/**\n * Writes 8-byte little-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat64LE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat64(offset, value, true);\n    return out;\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package chacha20poly1305 implements ChaCha20-Poly1305 AEAD.\n */\n\nimport { AEAD } from \"@stablelib/aead\";\nimport { streamXOR, stream } from \"@stablelib/chacha\";\nimport { Poly1305 } from \"@stablelib/poly1305\";\nimport { wipe } from \"@stablelib/wipe\";\nimport { writeUint64LE } from \"@stablelib/binary\";\nimport { equal } from \"@stablelib/constant-time\";\n\nexport const KEY_LENGTH = 32;\nexport const NONCE_LENGTH = 12;\nexport const TAG_LENGTH = 16;\n\nconst ZEROS = new Uint8Array(16);\n\n/**\n * ChaCha20-Poly1305 Authenticated Encryption with Associated Data.\n *\n * Defined in RFC7539.\n */\nexport class ChaCha20Poly1305 implements AEAD {\n    readonly nonceLength = NONCE_LENGTH;\n    readonly tagLength = TAG_LENGTH;\n\n    private _key: Uint8Array;\n\n    /**\n     * Creates a new instance with the given 32-byte key.\n     */\n    constructor(key: Uint8Array) {\n        if (key.length !== KEY_LENGTH) {\n            throw new Error(\"ChaCha20Poly1305 needs 32-byte key\");\n        }\n        // Copy key.\n        this._key = new Uint8Array(key);\n    }\n\n    /**\n     * Encrypts and authenticates plaintext, authenticates associated data,\n     * and returns sealed ciphertext, which includes authentication tag.\n     *\n     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce\n     * (\"IV\"), or full 16-byte counter (called \"32-bit fixed-common part\")\n     * and nonce.\n     *\n     * If dst is given (it must be the size of plaintext + the size of tag\n     * length) the result will be put into it. Dst and plaintext must not\n     * overlap.\n     */\n    seal(nonce: Uint8Array, plaintext: Uint8Array, associatedData?: Uint8Array,\n        dst?: Uint8Array): Uint8Array {\n        if (nonce.length > 16) {\n            throw new Error(\"ChaCha20Poly1305: incorrect nonce length\");\n        }\n\n        // Allocate space for counter, and set nonce as last bytes of it.\n        const counter = new Uint8Array(16);\n        counter.set(nonce, counter.length - nonce.length);\n\n        // Generate authentication key by taking first 32-bytes of stream.\n        // We pass full counter, which has 12-byte nonce and 4-byte block counter,\n        // and it will get incremented after generating the block, which is\n        // exactly what we need: we only use the first 32 bytes of 64-byte\n        // ChaCha block and discard the next 32 bytes.\n        const authKey = new Uint8Array(32);\n        stream(this._key, counter, authKey, 4);\n\n        // Allocate space for sealed ciphertext.\n        const resultLength = plaintext.length + this.tagLength;\n        let result;\n        if (dst) {\n            if (dst.length !== resultLength) {\n                throw new Error(\"ChaCha20Poly1305: incorrect destination length\");\n            }\n            result = dst;\n        } else {\n            result = new Uint8Array(resultLength);\n        }\n\n        // Encrypt plaintext.\n        streamXOR(this._key, counter, plaintext, result, 4);\n\n        // Authenticate.\n        // XXX: can \"simplify\" here: pass full result (which is already padded\n        // due to zeroes prepared for tag), and ciphertext length instead of\n        // subarray of result.\n        this._authenticate(result.subarray(result.length - this.tagLength, result.length),\n            authKey, result.subarray(0, result.length - this.tagLength), associatedData);\n\n        // Cleanup.\n        wipe(counter);\n\n        return result;\n    }\n\n    /**\n     * Authenticates sealed ciphertext (which includes authentication tag) and\n     * associated data, decrypts ciphertext and returns decrypted plaintext.\n     *\n     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce\n     * (\"IV\"), or full 16-byte counter (called \"32-bit fixed-common part\")\n     * and nonce.\n     *\n     * If authentication fails, it returns null.\n     *\n     * If dst is given (it must be of ciphertext length minus tag length),\n     * the result will be put into it. Dst and plaintext must not overlap.\n     */\n    open(nonce: Uint8Array, sealed: Uint8Array, associatedData?: Uint8Array,\n        dst?: Uint8Array): Uint8Array | null {\n        if (nonce.length > 16) {\n            throw new Error(\"ChaCha20Poly1305: incorrect nonce length\");\n        }\n\n        // Sealed ciphertext should at least contain tag.\n        if (sealed.length < this.tagLength) {\n            // TODO(dchest): should we throw here instead?\n            return null;\n        }\n\n        // Allocate space for counter, and set nonce as last bytes of it.\n        const counter = new Uint8Array(16);\n        counter.set(nonce, counter.length - nonce.length);\n\n        // Generate authentication key by taking first 32-bytes of stream.\n        const authKey = new Uint8Array(32);\n        stream(this._key, counter, authKey, 4);\n\n        // Authenticate.\n        // XXX: can simplify and avoid allocation: since authenticate()\n        // already allocates tag (from Poly1305.digest(), it can return)\n        // it instead of copying to calculatedTag. But then in seal()\n        // we'll need to copy it.\n        const calculatedTag = new Uint8Array(this.tagLength);\n        this._authenticate(calculatedTag, authKey,\n            sealed.subarray(0, sealed.length - this.tagLength), associatedData);\n\n        // Constant-time compare tags and return null if they differ.\n        if (!equal(calculatedTag,\n            sealed.subarray(sealed.length - this.tagLength, sealed.length))) {\n            return null;\n        }\n\n        // Allocate space for decrypted plaintext.\n        const resultLength = sealed.length - this.tagLength;\n        let result;\n        if (dst) {\n            if (dst.length !== resultLength) {\n                throw new Error(\"ChaCha20Poly1305: incorrect destination length\");\n            }\n            result = dst;\n        } else {\n            result = new Uint8Array(resultLength);\n        }\n\n        // Decrypt.\n        streamXOR(this._key, counter,\n            sealed.subarray(0, sealed.length - this.tagLength), result, 4);\n\n        // Cleanup.\n        wipe(counter);\n\n        return result;\n    }\n\n    clean(): this {\n        wipe(this._key);\n        return this;\n    }\n\n    private _authenticate(tagOut: Uint8Array, authKey: Uint8Array,\n        ciphertext: Uint8Array, associatedData?: Uint8Array) {\n\n        // Initialize Poly1305 with authKey.\n        const h = new Poly1305(authKey);\n\n        // Authenticate padded associated data.\n        if (associatedData) {\n            h.update(associatedData);\n            if (associatedData.length % 16 > 0) {\n                h.update(ZEROS.subarray(associatedData.length % 16));\n            }\n        }\n\n        // Authenticate padded ciphertext.\n        h.update(ciphertext);\n        if (ciphertext.length % 16 > 0) {\n            h.update(ZEROS.subarray(ciphertext.length % 16));\n        }\n\n        // Authenticate length of associated data.\n        // XXX: can avoid allocation here?\n        const length = new Uint8Array(8);\n        if (associatedData) {\n            writeUint64LE(associatedData.length, length);\n        }\n        h.update(length);\n\n        // Authenticate length of ciphertext.\n        writeUint64LE(ciphertext.length, length);\n        h.update(length);\n\n        // Get tag and copy it into tagOut.\n        const tag = h.digest();\n        for (let i = 0; i < tag.length; i++) {\n            tagOut[i] = tag[i];\n        }\n\n        // Cleanup.\n        h.clean();\n        wipe(tag);\n        wipe(length);\n    }\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package chacha implements ChaCha stream cipher.\n */\n\nimport { writeUint32LE } from \"@stablelib/binary\";\nimport { wipe } from \"@stablelib/wipe\";\n\n// Number of ChaCha rounds (ChaCha20).\nconst ROUNDS = 20;\n\n// Applies the ChaCha core function to 16-byte input,\n// 32-byte key key, and puts the result into 64-byte array out.\nfunction core(out: Uint8Array, input: Uint8Array, key: Uint8Array): void {\n    let j0 = 0x61707865; // \"expa\"  -- ChaCha's \"sigma\" constant\n    let j1 = 0x3320646E; // \"nd 3\"     for 32-byte keys\n    let j2 = 0x79622D32; // \"2-by\"\n    let j3 = 0x6B206574; // \"te k\"\n    let j4 = (key[3] << 24) | (key[2] << 16) | (key[1] << 8) | key[0];\n    let j5 = (key[7] << 24) | (key[6] << 16) | (key[5] << 8) | key[4];\n    let j6 = (key[11] << 24) | (key[10] << 16) | (key[9] << 8) | key[8];\n    let j7 = (key[15] << 24) | (key[14] << 16) | (key[13] << 8) | key[12];\n    let j8 = (key[19] << 24) | (key[18] << 16) | (key[17] << 8) | key[16];\n    let j9 = (key[23] << 24) | (key[22] << 16) | (key[21] << 8) | key[20];\n    let j10 = (key[27] << 24) | (key[26] << 16) | (key[25] << 8) | key[24];\n    let j11 = (key[31] << 24) | (key[30] << 16) | (key[29] << 8) | key[28];\n    let j12 = (input[3] << 24) | (input[2] << 16) | (input[1] << 8) | input[0];\n    let j13 = (input[7] << 24) | (input[6] << 16) | (input[5] << 8) | input[4];\n    let j14 = (input[11] << 24) | (input[10] << 16) | (input[9] << 8) | input[8];\n    let j15 = (input[15] << 24) | (input[14] << 16) | (input[13] << 8) | input[12];\n\n    let x0 = j0;\n    let x1 = j1;\n    let x2 = j2;\n    let x3 = j3;\n    let x4 = j4;\n    let x5 = j5;\n    let x6 = j6;\n    let x7 = j7;\n    let x8 = j8;\n    let x9 = j9;\n    let x10 = j10;\n    let x11 = j11;\n    let x12 = j12;\n    let x13 = j13;\n    let x14 = j14;\n    let x15 = j15;\n\n    for (let i = 0; i < ROUNDS; i += 2) {\n        x0 = x0 + x4 | 0; x12 ^= x0; x12 = x12 >>> (32 - 16) | x12 << 16;\n        x8 = x8 + x12 | 0; x4 ^= x8; x4 = x4 >>> (32 - 12) | x4 << 12;\n        x1 = x1 + x5 | 0; x13 ^= x1; x13 = x13 >>> (32 - 16) | x13 << 16;\n        x9 = x9 + x13 | 0; x5 ^= x9; x5 = x5 >>> (32 - 12) | x5 << 12;\n\n        x2 = x2 + x6 | 0; x14 ^= x2; x14 = x14 >>> (32 - 16) | x14 << 16;\n        x10 = x10 + x14 | 0; x6 ^= x10; x6 = x6 >>> (32 - 12) | x6 << 12;\n        x3 = x3 + x7 | 0; x15 ^= x3; x15 = x15 >>> (32 - 16) | x15 << 16;\n        x11 = x11 + x15 | 0; x7 ^= x11; x7 = x7 >>> (32 - 12) | x7 << 12;\n\n        x2 = x2 + x6 | 0; x14 ^= x2; x14 = x14 >>> (32 - 8) | x14 << 8;\n        x10 = x10 + x14 | 0; x6 ^= x10; x6 = x6 >>> (32 - 7) | x6 << 7;\n        x3 = x3 + x7 | 0; x15 ^= x3; x15 = x15 >>> (32 - 8) | x15 << 8;\n        x11 = x11 + x15 | 0; x7 ^= x11; x7 = x7 >>> (32 - 7) | x7 << 7;\n\n        x1 = x1 + x5 | 0; x13 ^= x1; x13 = x13 >>> (32 - 8) | x13 << 8;\n        x9 = x9 + x13 | 0; x5 ^= x9; x5 = x5 >>> (32 - 7) | x5 << 7;\n        x0 = x0 + x4 | 0; x12 ^= x0; x12 = x12 >>> (32 - 8) | x12 << 8;\n        x8 = x8 + x12 | 0; x4 ^= x8; x4 = x4 >>> (32 - 7) | x4 << 7;\n\n        x0 = x0 + x5 | 0; x15 ^= x0; x15 = x15 >>> (32 - 16) | x15 << 16;\n        x10 = x10 + x15 | 0; x5 ^= x10; x5 = x5 >>> (32 - 12) | x5 << 12;\n        x1 = x1 + x6 | 0; x12 ^= x1; x12 = x12 >>> (32 - 16) | x12 << 16;\n        x11 = x11 + x12 | 0; x6 ^= x11; x6 = x6 >>> (32 - 12) | x6 << 12;\n\n        x2 = x2 + x7 | 0; x13 ^= x2; x13 = x13 >>> (32 - 16) | x13 << 16;\n        x8 = x8 + x13 | 0; x7 ^= x8; x7 = x7 >>> (32 - 12) | x7 << 12;\n        x3 = x3 + x4 | 0; x14 ^= x3; x14 = x14 >>> (32 - 16) | x14 << 16;\n        x9 = x9 + x14 | 0; x4 ^= x9; x4 = x4 >>> (32 - 12) | x4 << 12;\n\n        x2 = x2 + x7 | 0; x13 ^= x2; x13 = x13 >>> (32 - 8) | x13 << 8;\n        x8 = x8 + x13 | 0; x7 ^= x8; x7 = x7 >>> (32 - 7) | x7 << 7;\n        x3 = x3 + x4 | 0; x14 ^= x3; x14 = x14 >>> (32 - 8) | x14 << 8;\n        x9 = x9 + x14 | 0; x4 ^= x9; x4 = x4 >>> (32 - 7) | x4 << 7;\n\n        x1 = x1 + x6 | 0; x12 ^= x1; x12 = x12 >>> (32 - 8) | x12 << 8;\n        x11 = x11 + x12 | 0; x6 ^= x11; x6 = x6 >>> (32 - 7) | x6 << 7;\n        x0 = x0 + x5 | 0; x15 ^= x0; x15 = x15 >>> (32 - 8) | x15 << 8;\n        x10 = x10 + x15 | 0; x5 ^= x10; x5 = x5 >>> (32 - 7) | x5 << 7;\n    }\n    writeUint32LE(x0 + j0 | 0, out, 0);\n    writeUint32LE(x1 + j1 | 0, out, 4);\n    writeUint32LE(x2 + j2 | 0, out, 8);\n    writeUint32LE(x3 + j3 | 0, out, 12);\n    writeUint32LE(x4 + j4 | 0, out, 16);\n    writeUint32LE(x5 + j5 | 0, out, 20);\n    writeUint32LE(x6 + j6 | 0, out, 24);\n    writeUint32LE(x7 + j7 | 0, out, 28);\n    writeUint32LE(x8 + j8 | 0, out, 32);\n    writeUint32LE(x9 + j9 | 0, out, 36);\n    writeUint32LE(x10 + j10 | 0, out, 40);\n    writeUint32LE(x11 + j11 | 0, out, 44);\n    writeUint32LE(x12 + j12 | 0, out, 48);\n    writeUint32LE(x13 + j13 | 0, out, 52);\n    writeUint32LE(x14 + j14 | 0, out, 56);\n    writeUint32LE(x15 + j15 | 0, out, 60);\n}\n\n/**\n * Encrypt src with ChaCha20 stream generated for the given 32-byte key and\n * 8-byte (as in original implementation) or 12-byte (as in RFC7539) nonce and\n * write the result into dst and return it.\n *\n * dst and src may be the same, but otherwise must not overlap.\n *\n * If nonce is 12 bytes, users should not encrypt more than 256 GiB with the\n * same key and nonce, otherwise the stream will repeat. The function will\n * throw error if counter overflows to prevent this.\n *\n * If nonce is 8 bytes, the output is practically unlimited (2^70 bytes, which\n * is more than a million petabytes). However, it is not recommended to\n * generate 8-byte nonces randomly, as the chance of collision is high.\n *\n * Never use the same key and nonce to encrypt more than one message.\n *\n * If nonceInplaceCounterLength is not 0, the nonce is assumed to be a 16-byte\n * array with stream counter in first nonceInplaceCounterLength bytes and nonce\n * in the last remaining bytes. The counter will be incremented inplace for\n * each ChaCha block. This is useful if you need to encrypt one stream of data\n * in chunks.\n */\nexport function streamXOR(key: Uint8Array, nonce: Uint8Array,\n    src: Uint8Array, dst: Uint8Array, nonceInplaceCounterLength = 0): Uint8Array {\n    // We only support 256-bit keys.\n    if (key.length !== 32) {\n        throw new Error(\"ChaCha: key size must be 32 bytes\");\n    }\n\n    if (dst.length < src.length) {\n        throw new Error(\"ChaCha: destination is shorter than source\");\n    }\n\n    let nc: Uint8Array;\n    let counterLength: number;\n\n    if (nonceInplaceCounterLength === 0) {\n        if (nonce.length !== 8 && nonce.length !== 12) {\n            throw new Error(\"ChaCha nonce must be 8 or 12 bytes\");\n        }\n        nc = new Uint8Array(16);\n        // First counterLength bytes of nc are counter, starting with zero.\n        counterLength = nc.length - nonce.length;\n        // Last bytes of nc after counterLength are nonce, set them.\n        nc.set(nonce, counterLength);\n    } else {\n        if (nonce.length !== 16) {\n            throw new Error(\"ChaCha nonce with counter must be 16 bytes\");\n        }\n        // This will update passed nonce with counter inplace.\n        nc = nonce;\n        counterLength = nonceInplaceCounterLength;\n    }\n\n    // Allocate temporary space for ChaCha block.\n    const block = new Uint8Array(64);\n\n    for (let i = 0; i < src.length; i += 64) {\n        // Generate a block.\n        core(block, nc, key);\n\n        // XOR block bytes with src into dst.\n        for (let j = i; j < i + 64 && j < src.length; j++) {\n            dst[j] = src[j] ^ block[j - i];\n        }\n\n        // Increment counter.\n        incrementCounter(nc, 0, counterLength);\n    }\n\n    // Cleanup temporary space.\n    wipe(block);\n\n    if (nonceInplaceCounterLength === 0) {\n        // Cleanup counter.\n        wipe(nc);\n    }\n\n    return dst;\n}\n\n/**\n * Generate ChaCha20 stream for the given 32-byte key and 8-byte or 12-byte\n * nonce and write it into dst and return it.\n *\n * Never use the same key and nonce to generate more than one stream.\n *\n * If nonceInplaceCounterLength is not 0, it behaves the same with respect to\n * the nonce as described in the streamXOR documentation.\n *\n * stream is like streamXOR with all-zero src.\n */\nexport function stream(key: Uint8Array, nonce: Uint8Array,\n    dst: Uint8Array, nonceInplaceCounterLength = 0): Uint8Array {\n    wipe(dst);\n    return streamXOR(key, nonce, dst, dst, nonceInplaceCounterLength);\n}\n\nfunction incrementCounter(counter: Uint8Array, pos: number, len: number) {\n    let carry = 1;\n    while (len--) {\n        carry = carry + (counter[pos] & 0xff) | 0;\n        counter[pos] = carry & 0xff;\n        carry >>>= 8;\n        pos++;\n    }\n    if (carry > 0) {\n        throw new Error(\"ChaCha: counter overflow\");\n    }\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package constant-time provides functions for performing algorithmically constant-time operations.\n */\n\n/**\n * NOTE! Due to the inability to guarantee real constant time evaluation of\n * anything in JavaScript VM, this is module is the best effort.\n */\n\n/**\n * Returns resultIfOne if subject is 1, or resultIfZero if subject is 0.\n *\n * Supports only 32-bit integers, so resultIfOne or resultIfZero are not\n * integers, they'll be converted to them with bitwise operations.\n */\nexport function select(subject: number, resultIfOne: number, resultIfZero: number): number {\n    return (~(subject - 1) & resultIfOne) | ((subject - 1) & resultIfZero);\n}\n\n/**\n * Returns 1 if a <= b, or 0 if not.\n * Arguments must be positive 32-bit integers less than or equal to 2^31 - 1.\n */\nexport function lessOrEqual(a: number, b: number): number {\n    return (((a | 0) - (b | 0) - 1) >>> 31) & 1;\n}\n\n/**\n * Returns 1 if a and b are of equal length and their contents\n * are equal, or 0 otherwise.\n *\n * Note that unlike in equal(), zero-length inputs are considered\n * the same, so this function will return 1.\n */\nexport function compare(a: Uint8Array, b: Uint8Array): number {\n    if (a.length !== b.length) {\n        return 0;\n    }\n    let result = 0;\n    for (let i = 0; i < a.length; i++) {\n        result |= a[i] ^ b[i];\n    }\n    return (1 & ((result - 1) >>> 8));\n}\n\n/**\n * Returns true if a and b are of equal non-zero length,\n * and their contents are equal, or false otherwise.\n *\n * Note that unlike in compare() zero-length inputs are considered\n * _not_ equal, so this function will return false.\n */\nexport function equal(a: Uint8Array, b: Uint8Array): boolean {\n    if (a.length === 0 || b.length === 0) {\n        return false;\n    }\n    return compare(a, b) !== 0;\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package hash provides interface for hash functions.\n */\n\n/**\n * Hash interface describes properties of\n * cryptographic hash functions.\n */\nexport interface Hash {\n    readonly digestLength: number;\n    readonly blockSize: number;\n    update(data: Uint8Array): this;\n    reset(): this;\n    finish(out: Uint8Array): this;\n    digest(): Uint8Array;\n    clean(): void;\n}\n\nexport interface SerializableHash extends Hash {\n    saveState(): any;\n    restoreState(savedState: any): this;\n    cleanSavedState(savedState: any): void;\n}\n\nexport function isSerializableHash(h: Hash): h is SerializableHash {\n    return (\n        typeof (h as SerializableHash).saveState !== \"undefined\" &&\n        typeof (h as SerializableHash).restoreState !== \"undefined\" &&\n        typeof (h as SerializableHash).cleanSavedState !== \"undefined\"\n    );\n}\n\n// TODO(dchest): figure out the standardized interface for XOF such as\n// SHAKE and BLAKE2X.\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package hkdf implements HKDF key derivation function.\n */\n\nimport { Hash } from \"@stablelib/hash\";\nimport { HMAC, hmac } from \"@stablelib/hmac\";\nimport { wipe } from \"@stablelib/wipe\";\n\n/**\n * HMAC-based Extract-and-Expand Key Derivation Function.\n *\n * Implements HKDF from RFC5869.\n *\n * Expands the given master key with salt and info into\n * a limited stream of key material.\n */\nexport class HKDF {\n    private _hmac: HMAC;\n    private _buffer: Uint8Array;\n    private _bufpos: number;\n    private _counter = new Uint8Array(1); // starts with zero\n    private _hash: new () => Hash;\n    private _info?: Uint8Array;\n\n    /**\n     * Create a new HKDF instance for the given hash function\n     * with the master key, optional salt, and info.\n     *\n     * - Master key is a high-entropy secret key (not a password).\n     * - Salt is a non-secret random value.\n     * - Info is application- and/or context-specific information.\n     */\n    constructor(hash: new () => Hash,\n        key: Uint8Array,\n        salt = new Uint8Array(0),\n        info?: Uint8Array) {\n\n        this._hash = hash;\n        this._info = info;\n\n        // HKDF-Extract uses salt as HMAC key, and key as data.\n        const okm = hmac(this._hash, salt, key);\n\n        // Initialize HMAC for expanding with extracted key.\n        this._hmac = new HMAC(hash, okm);\n\n        // Allocate buffer.\n        this._buffer = new Uint8Array(this._hmac.digestLength);\n        this._bufpos = this._buffer.length;\n    }\n\n    // Fill buffer with new block of HKDF-Extract output.\n    private _fillBuffer(): void {\n        // Increment counter.\n        this._counter[0]++;\n\n        const ctr = this._counter[0];\n\n        // Check if counter overflowed.\n        if (ctr === 0) {\n            throw new Error(\"hkdf: cannot expand more\");\n        }\n\n        // Prepare HMAC instance for new data with old key.\n        this._hmac.reset();\n\n        // Hash in previous output if it was generated\n        // (i.e. counter is greater than 1).\n        if (ctr > 1) {\n            this._hmac.update(this._buffer);\n        }\n\n        // Hash in info if it exists.\n        if (this._info) {\n            this._hmac.update(this._info);\n        }\n\n        // Hash in the counter.\n        this._hmac.update(this._counter);\n\n        // Output result to buffer and clean HMAC instance.\n        this._hmac.finish(this._buffer);\n\n        // Reset buffer position.\n        this._bufpos = 0;\n    }\n\n    /**\n     * Expand returns next key material of the given length.\n     *\n     * It throws if expansion limit is reached (which is\n     * 254 digests of the underlying HMAC function).\n     */\n    expand(length: number): Uint8Array {\n        const out = new Uint8Array(length);\n        for (let i = 0; i < out.length; i++) {\n            if (this._bufpos === this._buffer.length) {\n                this._fillBuffer();\n            }\n            out[i] = this._buffer[this._bufpos++];\n        }\n        return out;\n    }\n\n    clean(): void {\n        this._hmac.clean();\n        wipe(this._buffer);\n        wipe(this._counter);\n        this._bufpos = 0;\n    }\n}\n\n// TODO(dchest): maybe implement deriveKey?\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package hmac implements HMAC algorithm.\n */\n\nimport { Hash, SerializableHash, isSerializableHash } from \"@stablelib/hash\";\nimport { equal as constantTimeEqual } from \"@stablelib/constant-time\";\nimport { wipe } from \"@stablelib/wipe\";\n\n/**\n *  HMAC implements hash-based message authentication algorithm.\n */\nexport class HMAC implements SerializableHash {\n    readonly blockSize: number;\n    readonly digestLength: number;\n\n    private _inner: Hash; // inner hash\n    private _outer: Hash; // outer hash\n\n    private _finished = false; // true if HMAC was finalized\n\n    // Copies of hash states after keying.\n    // Need for quick reset without hashing the key again.\n    private _innerKeyedState: any | undefined;\n    private _outerKeyedState: any | undefined;\n\n    /**\n     * Constructs a new HMAC with the given Hash and secret key.\n     */\n    constructor(hash: new () => Hash | SerializableHash, key: Uint8Array) {\n        // Initialize inner and outer hashes.\n        this._inner = new hash();\n        this._outer = new hash();\n\n        // Set block and digest sizes for this HMAC\n        // instance to values from the hash.\n        this.blockSize = this._outer.blockSize;\n        this.digestLength = this._outer.digestLength;\n\n        // Pad temporary stores a key (or its hash) padded with zeroes.\n        const pad = new Uint8Array(this.blockSize);\n\n        if (key.length > this.blockSize) {\n            // If key is bigger than hash block size, it must be\n            // hashed and this hash is used as a key instead.\n            this._inner.update(key).finish(pad).clean();\n        } else {\n            // Otherwise, copy the key into pad.\n            pad.set(key);\n        }\n\n        // Now two different keys are derived from padded key\n        // by xoring a different byte value to each.\n\n        // To make inner hash key, xor byte 0x36 into pad.\n        for (let i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36;\n        }\n        // Update inner hash with the result.\n        this._inner.update(pad);\n\n        // To make outer hash key, xor byte 0x5c into pad.\n        // But since we already xored 0x36 there, we must\n        // first undo this by xoring it again.\n        for (let i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36 ^ 0x5c;\n        }\n        // Update outer hash with the result.\n        this._outer.update(pad);\n\n        // Save states of both hashes, so that we can quickly restore\n        // them later in reset() without the need to remember the actual\n        // key and perform this initialization again.\n        if (isSerializableHash(this._inner) && isSerializableHash(this._outer)) {\n            this._innerKeyedState = this._inner.saveState();\n            this._outerKeyedState = this._outer.saveState();\n        }\n\n        // Clean pad.\n        wipe(pad);\n    }\n\n    /**\n     * Returns HMAC state to the state initialized with key\n     * to make it possible to run HMAC over the other data with the same\n     * key without creating a new instance.\n     */\n    reset(): this {\n        if (!isSerializableHash(this._inner) || !isSerializableHash(this._outer)) {\n            throw new Error(\"hmac: can't reset() because hash doesn't implement restoreState()\");\n        }\n        // Restore keyed states of inner and outer hashes.\n        this._inner.restoreState(this._innerKeyedState);\n        this._outer.restoreState(this._outerKeyedState);\n        this._finished = false;\n        return this;\n    }\n\n    /**\n     * Cleans HMAC state.\n     */\n    clean() {\n        if (isSerializableHash(this._inner)) {\n            this._inner.cleanSavedState(this._innerKeyedState);\n        }\n        if (isSerializableHash(this._outer)) {\n            this._outer.cleanSavedState(this._outerKeyedState);\n        }\n        this._inner.clean();\n        this._outer.clean();\n    }\n\n    /**\n     * Updates state with provided data.\n     */\n    update(data: Uint8Array): this {\n        this._inner.update(data);\n        return this;\n    }\n\n    /**\n     * Finalizes HMAC and puts the result in out.\n     */\n    finish(out: Uint8Array): this {\n        if (this._finished) {\n            // If HMAC was finalized, outer hash is also finalized,\n            // so it produces the same digest it produced when it\n            // was finalized.\n            this._outer.finish(out);\n            return this;\n        }\n\n        // Finalize inner hash and store the result temporarily.\n        this._inner.finish(out);\n\n        // Update outer hash with digest of inner hash and and finalize it.\n        this._outer.update(out.subarray(0, this.digestLength)).finish(out);\n        this._finished = true;\n\n        return this;\n    }\n\n    /**\n     * Returns the computed message authentication code.\n     */\n    digest(): Uint8Array {\n        const out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    }\n\n    /**\n     * Saves HMAC state.\n     * This function is needed for PBKDF2 optimization.\n     */\n    saveState(): any {\n        if (!isSerializableHash(this._inner)) {\n            throw new Error(\"hmac: can't saveState() because hash doesn't implement it\");\n        }\n        return this._inner.saveState();\n    }\n\n    restoreState(savedState: any): this {\n        if (!isSerializableHash(this._inner) || !isSerializableHash(this._outer)) {\n            throw new Error(\"hmac: can't restoreState() because hash doesn't implement it\");\n        }\n        this._inner.restoreState(savedState);\n        this._outer.restoreState(this._outerKeyedState);\n        this._finished = false;\n        return this;\n    }\n\n    cleanSavedState(savedState: any) {\n        if (!isSerializableHash(this._inner)) {\n            throw new Error(\"hmac: can't cleanSavedState() because hash doesn't implement it\");\n        }\n        this._inner.cleanSavedState(savedState);\n    }\n}\n\n/**\n * Returns HMAC using the given hash constructor for the key over data.\n */\nexport function hmac(hash: new () => Hash, key: Uint8Array, data: Uint8Array): Uint8Array {\n    const h = new HMAC(hash, key);\n    h.update(data);\n    const digest = h.digest();\n    h.clean();\n    return digest;\n}\n\n/**\n * Returns true if two HMAC digests are equal.\n * Uses constant-time comparison to avoid leaking timing information.\n *\n * Example:\n *\n *    const receivedDigest = ...\n *    const realDigest = hmac(SHA256, key, data);\n *    if (!equal(receivedDigest, realDigest)) {\n *        throw new Error(\"Authentication error\");\n *    }\n */\nexport const equal = constantTimeEqual;\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package int provides helper functions for integerss.\n */\n\n// Shim using 16-bit pieces.\nfunction imulShim(a: number, b: number): number {\n    const ah = (a >>> 16) & 0xffff, al = a & 0xffff;\n    const bh = (b >>> 16) & 0xffff, bl = b & 0xffff;\n    return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0);\n}\n\n/** 32-bit integer multiplication.  */\n// Use system Math.imul if available, otherwise use our shim.\nexport const mul = (Math as { imul?(a: number, b: number): number }).imul || imulShim;\n\n/** 32-bit integer addition.  */\nexport function add(a: number, b: number): number {\n    return (a + b) | 0;\n}\n\n/**  32-bit integer subtraction.  */\nexport function sub(a: number, b: number): number {\n    return (a - b) | 0;\n}\n\n/** 32-bit integer left rotation */\nexport function rotl(x: number, n: number): number {\n    return x << n | x >>> (32 - n);\n}\n\n/** 32-bit integer left rotation */\nexport function rotr(x: number, n: number): number {\n    return x << (32 - n) | x >>> n;\n}\n\nfunction isIntegerShim(n: number): boolean {\n    return typeof n === \"number\" && isFinite(n) && Math.floor(n) === n;\n}\n\n/**\n * Returns true if the argument is an integer number.\n *\n * In ES2015, Number.isInteger.\n */\nexport const isInteger = (Number as { isInteger?(n: number): boolean }).isInteger || isIntegerShim;\n\n/**\n *  Math.pow(2, 53) - 1\n *\n *  In ES2015 Number.MAX_SAFE_INTEGER.\n */\nexport const MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Returns true if the argument is a safe integer number\n * (-MIN_SAFE_INTEGER < number <= MAX_SAFE_INTEGER)\n *\n * In ES2015, Number.isSafeInteger.\n */\nexport const isSafeInteger = (n: number): boolean =>\n    isInteger(n) && (n >= -MAX_SAFE_INTEGER && n <= MAX_SAFE_INTEGER);\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package poly1305 implements Poly1305 one-time message authentication algorithm.\n */\n\nimport { equal as constantTimeEqual } from \"@stablelib/constant-time\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport const DIGEST_LENGTH = 16;\n\n// Port of Andrew Moon's Poly1305-donna-16. Public domain.\n// https://github.com/floodyberry/poly1305-donna\n\n/**\n * Poly1305 computes 16-byte authenticator of message using\n * a one-time 32-byte key.\n *\n * Important: key should be used for only one message,\n * it should never repeat.\n */\nexport class Poly1305 {\n    readonly digestLength = DIGEST_LENGTH;\n\n    private _buffer = new Uint8Array(16);\n    private _r = new Uint16Array(10);\n    private _h = new Uint16Array(10);\n    private _pad = new Uint16Array(8);\n    private _leftover = 0;\n    private _fin = 0;\n    private _finished = false;\n\n    constructor(key: Uint8Array) {\n        let t0 = key[0] | key[1] << 8; this._r[0] = (t0) & 0x1fff;\n        let t1 = key[2] | key[3] << 8; this._r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n        let t2 = key[4] | key[5] << 8; this._r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n        let t3 = key[6] | key[7] << 8; this._r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n        let t4 = key[8] | key[9] << 8; this._r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n        this._r[5] = ((t4 >>> 1)) & 0x1ffe;\n        let t5 = key[10] | key[11] << 8; this._r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n        let t6 = key[12] | key[13] << 8; this._r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n        let t7 = key[14] | key[15] << 8; this._r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n        this._r[9] = ((t7 >>> 5)) & 0x007f;\n\n        this._pad[0] = key[16] | key[17] << 8;\n        this._pad[1] = key[18] | key[19] << 8;\n        this._pad[2] = key[20] | key[21] << 8;\n        this._pad[3] = key[22] | key[23] << 8;\n        this._pad[4] = key[24] | key[25] << 8;\n        this._pad[5] = key[26] | key[27] << 8;\n        this._pad[6] = key[28] | key[29] << 8;\n        this._pad[7] = key[30] | key[31] << 8;\n    }\n\n    private _blocks(m: Uint8Array, mpos: number, bytes: number) {\n        let hibit = this._fin ? 0 : 1 << 11;\n\n        let h0 = this._h[0],\n            h1 = this._h[1],\n            h2 = this._h[2],\n            h3 = this._h[3],\n            h4 = this._h[4],\n            h5 = this._h[5],\n            h6 = this._h[6],\n            h7 = this._h[7],\n            h8 = this._h[8],\n            h9 = this._h[9];\n\n        let r0 = this._r[0],\n            r1 = this._r[1],\n            r2 = this._r[2],\n            r3 = this._r[3],\n            r4 = this._r[4],\n            r5 = this._r[5],\n            r6 = this._r[6],\n            r7 = this._r[7],\n            r8 = this._r[8],\n            r9 = this._r[9];\n\n        while (bytes >= 16) {\n            let t0 = m[mpos + 0] | m[mpos + 1] << 8; h0 += (t0) & 0x1fff;\n            let t1 = m[mpos + 2] | m[mpos + 3] << 8; h1 += ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n            let t2 = m[mpos + 4] | m[mpos + 5] << 8; h2 += ((t1 >>> 10) | (t2 << 6)) & 0x1fff;\n            let t3 = m[mpos + 6] | m[mpos + 7] << 8; h3 += ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n            let t4 = m[mpos + 8] | m[mpos + 9] << 8; h4 += ((t3 >>> 4) | (t4 << 12)) & 0x1fff;\n            h5 += ((t4 >>> 1)) & 0x1fff;\n            let t5 = m[mpos + 10] | m[mpos + 11] << 8; h6 += ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n            let t6 = m[mpos + 12] | m[mpos + 13] << 8; h7 += ((t5 >>> 11) | (t6 << 5)) & 0x1fff;\n            let t7 = m[mpos + 14] | m[mpos + 15] << 8; h8 += ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n            h9 += ((t7 >>> 5)) | hibit;\n\n            let c = 0;\n\n            let d0 = c;\n            d0 += h0 * r0;\n            d0 += h1 * (5 * r9);\n            d0 += h2 * (5 * r8);\n            d0 += h3 * (5 * r7);\n            d0 += h4 * (5 * r6);\n            c = (d0 >>> 13); d0 &= 0x1fff;\n            d0 += h5 * (5 * r5);\n            d0 += h6 * (5 * r4);\n            d0 += h7 * (5 * r3);\n            d0 += h8 * (5 * r2);\n            d0 += h9 * (5 * r1);\n            c += (d0 >>> 13); d0 &= 0x1fff;\n\n            let d1 = c;\n            d1 += h0 * r1;\n            d1 += h1 * r0;\n            d1 += h2 * (5 * r9);\n            d1 += h3 * (5 * r8);\n            d1 += h4 * (5 * r7);\n            c = (d1 >>> 13); d1 &= 0x1fff;\n            d1 += h5 * (5 * r6);\n            d1 += h6 * (5 * r5);\n            d1 += h7 * (5 * r4);\n            d1 += h8 * (5 * r3);\n            d1 += h9 * (5 * r2);\n            c += (d1 >>> 13); d1 &= 0x1fff;\n\n            let d2 = c;\n            d2 += h0 * r2;\n            d2 += h1 * r1;\n            d2 += h2 * r0;\n            d2 += h3 * (5 * r9);\n            d2 += h4 * (5 * r8);\n            c = (d2 >>> 13); d2 &= 0x1fff;\n            d2 += h5 * (5 * r7);\n            d2 += h6 * (5 * r6);\n            d2 += h7 * (5 * r5);\n            d2 += h8 * (5 * r4);\n            d2 += h9 * (5 * r3);\n            c += (d2 >>> 13); d2 &= 0x1fff;\n\n            let d3 = c;\n            d3 += h0 * r3;\n            d3 += h1 * r2;\n            d3 += h2 * r1;\n            d3 += h3 * r0;\n            d3 += h4 * (5 * r9);\n            c = (d3 >>> 13); d3 &= 0x1fff;\n            d3 += h5 * (5 * r8);\n            d3 += h6 * (5 * r7);\n            d3 += h7 * (5 * r6);\n            d3 += h8 * (5 * r5);\n            d3 += h9 * (5 * r4);\n            c += (d3 >>> 13); d3 &= 0x1fff;\n\n            let d4 = c;\n            d4 += h0 * r4;\n            d4 += h1 * r3;\n            d4 += h2 * r2;\n            d4 += h3 * r1;\n            d4 += h4 * r0;\n            c = (d4 >>> 13); d4 &= 0x1fff;\n            d4 += h5 * (5 * r9);\n            d4 += h6 * (5 * r8);\n            d4 += h7 * (5 * r7);\n            d4 += h8 * (5 * r6);\n            d4 += h9 * (5 * r5);\n            c += (d4 >>> 13); d4 &= 0x1fff;\n\n            let d5 = c;\n            d5 += h0 * r5;\n            d5 += h1 * r4;\n            d5 += h2 * r3;\n            d5 += h3 * r2;\n            d5 += h4 * r1;\n            c = (d5 >>> 13); d5 &= 0x1fff;\n            d5 += h5 * r0;\n            d5 += h6 * (5 * r9);\n            d5 += h7 * (5 * r8);\n            d5 += h8 * (5 * r7);\n            d5 += h9 * (5 * r6);\n            c += (d5 >>> 13); d5 &= 0x1fff;\n\n            let d6 = c;\n            d6 += h0 * r6;\n            d6 += h1 * r5;\n            d6 += h2 * r4;\n            d6 += h3 * r3;\n            d6 += h4 * r2;\n            c = (d6 >>> 13); d6 &= 0x1fff;\n            d6 += h5 * r1;\n            d6 += h6 * r0;\n            d6 += h7 * (5 * r9);\n            d6 += h8 * (5 * r8);\n            d6 += h9 * (5 * r7);\n            c += (d6 >>> 13); d6 &= 0x1fff;\n\n            let d7 = c;\n            d7 += h0 * r7;\n            d7 += h1 * r6;\n            d7 += h2 * r5;\n            d7 += h3 * r4;\n            d7 += h4 * r3;\n            c = (d7 >>> 13); d7 &= 0x1fff;\n            d7 += h5 * r2;\n            d7 += h6 * r1;\n            d7 += h7 * r0;\n            d7 += h8 * (5 * r9);\n            d7 += h9 * (5 * r8);\n            c += (d7 >>> 13); d7 &= 0x1fff;\n\n            let d8 = c;\n            d8 += h0 * r8;\n            d8 += h1 * r7;\n            d8 += h2 * r6;\n            d8 += h3 * r5;\n            d8 += h4 * r4;\n            c = (d8 >>> 13); d8 &= 0x1fff;\n            d8 += h5 * r3;\n            d8 += h6 * r2;\n            d8 += h7 * r1;\n            d8 += h8 * r0;\n            d8 += h9 * (5 * r9);\n            c += (d8 >>> 13); d8 &= 0x1fff;\n\n            let d9 = c;\n            d9 += h0 * r9;\n            d9 += h1 * r8;\n            d9 += h2 * r7;\n            d9 += h3 * r6;\n            d9 += h4 * r5;\n            c = (d9 >>> 13); d9 &= 0x1fff;\n            d9 += h5 * r4;\n            d9 += h6 * r3;\n            d9 += h7 * r2;\n            d9 += h8 * r1;\n            d9 += h9 * r0;\n            c += (d9 >>> 13); d9 &= 0x1fff;\n\n            c = (((c << 2) + c)) | 0;\n            c = (c + d0) | 0;\n            d0 = c & 0x1fff;\n            c = (c >>> 13);\n            d1 += c;\n\n            h0 = d0;\n            h1 = d1;\n            h2 = d2;\n            h3 = d3;\n            h4 = d4;\n            h5 = d5;\n            h6 = d6;\n            h7 = d7;\n            h8 = d8;\n            h9 = d9;\n\n            mpos += 16;\n            bytes -= 16;\n        }\n        this._h[0] = h0;\n        this._h[1] = h1;\n        this._h[2] = h2;\n        this._h[3] = h3;\n        this._h[4] = h4;\n        this._h[5] = h5;\n        this._h[6] = h6;\n        this._h[7] = h7;\n        this._h[8] = h8;\n        this._h[9] = h9;\n    }\n\n    finish(mac: Uint8Array, macpos = 0): this {\n        const g = new Uint16Array(10);\n        let c: number;\n        let mask: number;\n        let f: number;\n        let i: number;\n\n        if (this._leftover) {\n            i = this._leftover;\n            this._buffer[i++] = 1;\n            for (; i < 16; i++) {\n                this._buffer[i] = 0;\n            }\n            this._fin = 1;\n            this._blocks(this._buffer, 0, 16);\n        }\n\n        c = this._h[1] >>> 13;\n        this._h[1] &= 0x1fff;\n        for (i = 2; i < 10; i++) {\n            this._h[i] += c;\n            c = this._h[i] >>> 13;\n            this._h[i] &= 0x1fff;\n        }\n        this._h[0] += (c * 5);\n        c = this._h[0] >>> 13;\n        this._h[0] &= 0x1fff;\n        this._h[1] += c;\n        c = this._h[1] >>> 13;\n        this._h[1] &= 0x1fff;\n        this._h[2] += c;\n\n        g[0] = this._h[0] + 5;\n        c = g[0] >>> 13;\n        g[0] &= 0x1fff;\n        for (i = 1; i < 10; i++) {\n            g[i] = this._h[i] + c;\n            c = g[i] >>> 13;\n            g[i] &= 0x1fff;\n        }\n        g[9] -= (1 << 13);\n\n        mask = (c ^ 1) - 1;\n        for (i = 0; i < 10; i++) {\n            g[i] &= mask;\n        }\n        mask = ~mask;\n        for (i = 0; i < 10; i++) {\n            this._h[i] = (this._h[i] & mask) | g[i];\n        }\n\n        this._h[0] = ((this._h[0]) | (this._h[1] << 13)) & 0xffff;\n        this._h[1] = ((this._h[1] >>> 3) | (this._h[2] << 10)) & 0xffff;\n        this._h[2] = ((this._h[2] >>> 6) | (this._h[3] << 7)) & 0xffff;\n        this._h[3] = ((this._h[3] >>> 9) | (this._h[4] << 4)) & 0xffff;\n        this._h[4] = ((this._h[4] >>> 12) | (this._h[5] << 1) | (this._h[6] << 14)) & 0xffff;\n        this._h[5] = ((this._h[6] >>> 2) | (this._h[7] << 11)) & 0xffff;\n        this._h[6] = ((this._h[7] >>> 5) | (this._h[8] << 8)) & 0xffff;\n        this._h[7] = ((this._h[8] >>> 8) | (this._h[9] << 5)) & 0xffff;\n\n        f = this._h[0] + this._pad[0];\n        this._h[0] = f & 0xffff;\n        for (i = 1; i < 8; i++) {\n            f = (((this._h[i] + this._pad[i]) | 0) + (f >>> 16)) | 0;\n            this._h[i] = f & 0xffff;\n        }\n\n        mac[macpos + 0] = this._h[0] >>> 0;\n        mac[macpos + 1] = this._h[0] >>> 8;\n        mac[macpos + 2] = this._h[1] >>> 0;\n        mac[macpos + 3] = this._h[1] >>> 8;\n        mac[macpos + 4] = this._h[2] >>> 0;\n        mac[macpos + 5] = this._h[2] >>> 8;\n        mac[macpos + 6] = this._h[3] >>> 0;\n        mac[macpos + 7] = this._h[3] >>> 8;\n        mac[macpos + 8] = this._h[4] >>> 0;\n        mac[macpos + 9] = this._h[4] >>> 8;\n        mac[macpos + 10] = this._h[5] >>> 0;\n        mac[macpos + 11] = this._h[5] >>> 8;\n        mac[macpos + 12] = this._h[6] >>> 0;\n        mac[macpos + 13] = this._h[6] >>> 8;\n        mac[macpos + 14] = this._h[7] >>> 0;\n        mac[macpos + 15] = this._h[7] >>> 8;\n\n        this._finished = true;\n        return this;\n    }\n\n    update(m: Uint8Array): this {\n        let mpos = 0;\n        let bytes = m.length;\n        let want: number;\n\n        if (this._leftover) {\n            want = (16 - this._leftover);\n            if (want > bytes) {\n                want = bytes;\n            }\n            for (let i = 0; i < want; i++) {\n                this._buffer[this._leftover + i] = m[mpos + i];\n            }\n            bytes -= want;\n            mpos += want;\n            this._leftover += want;\n            if (this._leftover < 16) {\n                return this;\n            }\n            this._blocks(this._buffer, 0, 16);\n            this._leftover = 0;\n        }\n\n        if (bytes >= 16) {\n            want = bytes - (bytes % 16);\n            this._blocks(m, mpos, want);\n            mpos += want;\n            bytes -= want;\n        }\n\n        if (bytes) {\n            for (let i = 0; i < bytes; i++) {\n                this._buffer[this._leftover + i] = m[mpos + i];\n            }\n            this._leftover += bytes;\n        }\n\n        return this;\n    }\n\n    digest(): Uint8Array {\n        // TODO(dchest): it behaves differently than other hashes/HMAC,\n        // because it throws when finished — others just return saved result.\n        if (this._finished) {\n            throw new Error(\"Poly1305 was finished\");\n        }\n        let mac = new Uint8Array(16);\n        this.finish(mac);\n        return mac;\n    }\n\n    clean(): this {\n        wipe(this._buffer);\n        wipe(this._r);\n        wipe(this._h);\n        wipe(this._pad);\n        this._leftover = 0;\n        this._fin = 0;\n        this._finished = true; // mark as finished even if not\n        return this;\n    }\n}\n\n/**\n * Returns 16-byte authenticator of data using a one-time 32-byte key.\n *\n * Important: key should be used for only one message, it should never repeat.\n */\nexport function oneTimeAuth(key: Uint8Array, data: Uint8Array): Uint8Array {\n    const h = new Poly1305(key);\n    h.update(data);\n    const digest = h.digest();\n    h.clean();\n    return digest;\n}\n\n/**\n * Returns true if two authenticators are 16-byte long and equal.\n * Uses contant-time comparison to avoid leaking timing information.\n */\nexport function equal(a: Uint8Array, b: Uint8Array): boolean {\n    if (a.length !== DIGEST_LENGTH || b.length !== DIGEST_LENGTH) {\n        return false;\n    }\n    return constantTimeEqual(a, b);\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package random provides functions to access system's\n * cryptographically secure random byte generator.\n */\n\nimport { RandomSource } from \"./source\";\nimport { SystemRandomSource } from \"./source/system\";\nimport { readUint32LE } from \"@stablelib/binary\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport { RandomSource } from \"./source\";\n\nexport const defaultRandomSource = new SystemRandomSource();\n\nexport function randomBytes(length: number, prng: RandomSource = defaultRandomSource): Uint8Array {\n    return prng.randomBytes(length);\n}\n\n/**\n * Returns a uniformly random unsigned 32-bit integer.\n */\nexport function randomUint32(prng: RandomSource = defaultRandomSource): number {\n    // Generate 4-byte random buffer.\n    const buf = randomBytes(4, prng);\n\n    // Convert bytes from buffer into a 32-bit integer.\n    // It's not important which byte order to use, since\n    // the result is random.\n    const result = readUint32LE(buf);\n\n    // Clean the buffer.\n    wipe(buf);\n\n    return result;\n}\n\n/** 62 alphanumeric characters for default charset of randomString() */\nconst ALPHANUMERIC = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n/**\n * Returns a uniform random string of the given length\n * with characters from the given charset.\n *\n * Charset must not have more than 256 characters.\n *\n * Default charset generates case-sensitive alphanumeric\n * strings (0-9, A-Z, a-z).\n */\nexport function randomString(\n    length: number,\n    charset = ALPHANUMERIC,\n    prng: RandomSource = defaultRandomSource\n): string {\n    if (charset.length < 2) {\n        throw new Error(\"randomString charset is too short\");\n    }\n    if (charset.length > 256) {\n        throw new Error(\"randomString charset is too long\");\n    }\n    let out = '';\n    const charsLen = charset.length;\n    const maxByte = 256 - (256 % charsLen);\n    while (length > 0) {\n        const buf = randomBytes(Math.ceil(length * 256 / maxByte), prng);\n        for (let i = 0; i < buf.length && length > 0; i++) {\n            const randomByte = buf[i];\n            if (randomByte < maxByte) {\n                out += charset.charAt(randomByte % charsLen);\n                length--;\n            }\n        }\n        wipe(buf);\n    }\n    return out;\n}\n\n/**\n * Returns uniform random string containing at least the given\n * number of bits of entropy.\n *\n * For example, randomStringForEntropy(128) will return a 22-character\n * alphanumeric string, while randomStringForEntropy(128, \"0123456789\")\n * will return a 39-character numeric string, both will contain at\n * least 128 bits of entropy.\n *\n * Default charset generates case-sensitive alphanumeric\n * strings (0-9, A-Z, a-z).\n */\nexport function randomStringForEntropy(\n    bits: number,\n    charset = ALPHANUMERIC,\n    prng: RandomSource = defaultRandomSource\n): string {\n    const length = Math.ceil(bits / (Math.log(charset.length) / Math.LN2));\n    return randomString(length, charset, prng);\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\nimport { RandomSource } from \"./\";\n\nconst QUOTA = 65536;\n\nexport class BrowserRandomSource implements RandomSource {\n    isAvailable = false;\n    isInstantiated = false;\n\n    private _crypto?: { getRandomValues: typeof window.crypto.getRandomValues };\n\n    constructor() {\n        const browserCrypto = typeof self !== 'undefined'\n            ? (self.crypto || (self as { msCrypto?: any }).msCrypto) // IE11 has msCrypto\n            : null;\n\n        if (browserCrypto && browserCrypto.getRandomValues !== undefined) {\n            this._crypto = browserCrypto;\n            this.isAvailable = true;\n            this.isInstantiated = true;\n        }\n    }\n\n    randomBytes(length: number): Uint8Array {\n        if (!this.isAvailable || !this._crypto) {\n            throw new Error(\"Browser random byte generator is not available.\");\n        }\n        const out = new Uint8Array(length);\n        for (let i = 0; i < out.length; i += QUOTA) {\n            this._crypto.getRandomValues(out.subarray(i, i + Math.min(out.length - i, QUOTA)));\n        }\n        return out;\n    }\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\nimport { RandomSource } from \"./\";\nimport { wipe } from \"@stablelib/wipe\";\n\ndeclare function require(name: string): any;\n\nexport class NodeRandomSource implements RandomSource {\n    isAvailable = false;\n    isInstantiated = false;\n\n    private _crypto: { randomBytes(n: number): Uint8Array } | undefined;\n\n    constructor() {\n        if (typeof require !== \"undefined\") {\n            const nodeCrypto = require(\"crypto\");\n            if (nodeCrypto && nodeCrypto.randomBytes) {\n                this._crypto = nodeCrypto;\n                this.isAvailable = true;\n                this.isInstantiated = true;\n            }\n        }\n    }\n\n    randomBytes(length: number): Uint8Array {\n        if (!this.isAvailable || !this._crypto) {\n            throw new Error(\"Node.js random byte generator is not available.\");\n        }\n\n        // Get random bytes (result is Buffer).\n        let buffer = this._crypto.randomBytes(length);\n\n        // Make sure we got the length that we requested.\n        if (buffer.length !== length) {\n            throw new Error(\"NodeRandomSource: got fewer bytes than requested\");\n        }\n\n        // Allocate output array.\n        const out = new Uint8Array(length);\n\n        // Copy bytes from buffer to output.\n        for (let i = 0; i < out.length; i++) {\n            out[i] = buffer[i];\n        }\n\n        // Cleanup.\n        wipe(buffer);\n\n        return out;\n    }\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\nimport { RandomSource } from \"./\";\nimport { BrowserRandomSource } from \"./browser\";\nimport { NodeRandomSource } from \"./node\";\n\nexport class SystemRandomSource implements RandomSource {\n    isAvailable = false;\n    name = \"\";\n    private _source: RandomSource;\n\n    constructor() {\n        // Try browser.\n        this._source = new BrowserRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Browser\";\n            return;\n        }\n\n        // If no browser source, try Node.\n        this._source = new NodeRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Node\";\n            return;\n        }\n\n        // No sources, we're out of options.\n    }\n\n    randomBytes(length: number): Uint8Array {\n        if (!this.isAvailable) {\n            throw new Error(\"System random byte generator is not available.\");\n        }\n        return this._source.randomBytes(length);\n    }\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package sha256 implements SHA-2-256 cryptographic hash function.\n */\n\nimport { SerializableHash } from \"@stablelib/hash\";\nimport { readUint32BE, writeUint32BE } from \"@stablelib/binary\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport const DIGEST_LENGTH = 32;\nexport const BLOCK_SIZE = 64;\n\n/**\n * SHA2-256 cryptographic hash algorithm.\n */\nexport class SHA256 implements SerializableHash {\n    /** Length of hash output */\n    readonly digestLength: number = DIGEST_LENGTH;\n\n    /** Block size */\n    readonly blockSize: number = BLOCK_SIZE;\n\n    // Note: Int32Array is used instead of Uint32Array for performance reasons.\n    protected _state = new Int32Array(8); // hash state\n    private _temp = new Int32Array(64); // temporary state\n    private _buffer = new Uint8Array(128); // buffer for data to hash\n    private _bufferLength = 0; // number of bytes in buffer\n    private _bytesHashed = 0; // number of total bytes hashed\n    private _finished = false; // indicates whether the hash was finalized\n\n    constructor() {\n        this.reset();\n    }\n\n    protected _initState() {\n        this._state[0] = 0x6a09e667;\n        this._state[1] = 0xbb67ae85;\n        this._state[2] = 0x3c6ef372;\n        this._state[3] = 0xa54ff53a;\n        this._state[4] = 0x510e527f;\n        this._state[5] = 0x9b05688c;\n        this._state[6] = 0x1f83d9ab;\n        this._state[7] = 0x5be0cd19;\n    }\n\n    /**\n     * Resets hash state making it possible\n     * to re-use this instance to hash other data.\n     */\n    reset(): this {\n        this._initState();\n        this._bufferLength = 0;\n        this._bytesHashed = 0;\n        this._finished = false;\n        return this;\n    }\n\n    /**\n     * Cleans internal buffers and resets hash state.\n     */\n    clean() {\n        wipe(this._buffer);\n        wipe(this._temp);\n        this.reset();\n    }\n\n    /**\n     * Updates hash state with the given data.\n     *\n     * Throws error when trying to update already finalized hash:\n     * instance must be reset to update it again.\n     */\n    update(data: Uint8Array, dataLength: number = data.length): this {\n        if (this._finished) {\n            throw new Error(\"SHA256: can't update because hash was finished.\");\n        }\n        let dataPos = 0;\n        this._bytesHashed += dataLength;\n        if (this._bufferLength > 0) {\n            while (this._bufferLength < this.blockSize && dataLength > 0) {\n                this._buffer[this._bufferLength++] = data[dataPos++];\n                dataLength--;\n            }\n            if (this._bufferLength === this.blockSize) {\n                hashBlocks(this._temp, this._state, this._buffer, 0, this.blockSize);\n                this._bufferLength = 0;\n            }\n        }\n        if (dataLength >= this.blockSize) {\n            dataPos = hashBlocks(this._temp, this._state, data, dataPos, dataLength);\n            dataLength %= this.blockSize;\n        }\n        while (dataLength > 0) {\n            this._buffer[this._bufferLength++] = data[dataPos++];\n            dataLength--;\n        }\n        return this;\n    }\n\n    /**\n     * Finalizes hash state and puts hash into out.\n     * If hash was already finalized, puts the same value.\n     */\n    finish(out: Uint8Array): this {\n        if (!this._finished) {\n            const bytesHashed = this._bytesHashed;\n            const left = this._bufferLength;\n            const bitLenHi = (bytesHashed / 0x20000000) | 0;\n            const bitLenLo = bytesHashed << 3;\n            const padLength = (bytesHashed % 64 < 56) ? 64 : 128;\n\n            this._buffer[left] = 0x80;\n            for (let i = left + 1; i < padLength - 8; i++) {\n                this._buffer[i] = 0;\n            }\n            writeUint32BE(bitLenHi, this._buffer, padLength - 8);\n            writeUint32BE(bitLenLo, this._buffer, padLength - 4);\n\n            hashBlocks(this._temp, this._state, this._buffer, 0, padLength);\n\n            this._finished = true;\n        }\n\n        for (let i = 0; i < this.digestLength / 4; i++) {\n            writeUint32BE(this._state[i], out, i * 4);\n        }\n\n        return this;\n    }\n\n    /**\n     * Returns the final hash digest.\n     */\n    digest(): Uint8Array {\n        const out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    }\n\n    /**\n     * Function useful for HMAC/PBKDF2 optimization.\n     * Returns hash state to be used with restoreState().\n     * Only chain value is saved, not buffers or other\n     * state variables.\n     */\n    saveState(): SavedState {\n        if (this._finished) {\n            throw new Error(\"SHA256: cannot save finished state\");\n        }\n        return {\n            state: new Int32Array(this._state),\n            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : undefined,\n            bufferLength: this._bufferLength,\n            bytesHashed: this._bytesHashed\n        };\n    }\n\n    /**\n     * Function useful for HMAC/PBKDF2 optimization.\n     * Restores state saved by saveState() and sets bytesHashed\n     * to the given value.\n     */\n    restoreState(savedState: SavedState): this {\n        this._state.set(savedState.state);\n        this._bufferLength = savedState.bufferLength;\n        if (savedState.buffer) {\n            this._buffer.set(savedState.buffer);\n        }\n        this._bytesHashed = savedState.bytesHashed;\n        this._finished = false;\n        return this;\n    }\n\n    /**\n     * Cleans state returned by saveState().\n     */\n    cleanSavedState(savedState: SavedState) {\n        wipe(savedState.state);\n        if (savedState.buffer) {\n            wipe(savedState.buffer);\n        }\n        savedState.bufferLength = 0;\n        savedState.bytesHashed = 0;\n    }\n}\n\nexport type SavedState = {\n    state: Int32Array;\n    buffer: Uint8Array | undefined;\n    bufferLength: number;\n    bytesHashed: number;\n};\n\n// Constants\nconst K = new Int32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n    0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n    0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n    0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n    0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n    0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n    0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n    0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n    0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n    0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\nfunction hashBlocks(w: Int32Array, v: Int32Array, p: Uint8Array, pos: number, len: number): number {\n    while (len >= 64) {\n        let a = v[0];\n        let b = v[1];\n        let c = v[2];\n        let d = v[3];\n        let e = v[4];\n        let f = v[5];\n        let g = v[6];\n        let h = v[7];\n\n        for (let i = 0; i < 16; i++) {\n            let j = pos + i * 4;\n            w[i] = readUint32BE(p, j);\n        }\n\n        for (let i = 16; i < 64; i++) {\n            let u = w[i - 2];\n            let t1 = (u >>> 17 | u << (32 - 17)) ^ (u >>> 19 | u << (32 - 19)) ^ (u >>> 10);\n\n            u = w[i - 15];\n            let t2 = (u >>> 7 | u << (32 - 7)) ^ (u >>> 18 | u << (32 - 18)) ^ (u >>> 3);\n\n            w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0);\n        }\n\n        for (let i = 0; i < 64; i++) {\n            let t1 = (((((e >>> 6 | e << (32 - 6)) ^ (e >>> 11 | e << (32 - 11)) ^\n                (e >>> 25 | e << (32 - 25))) + ((e & f) ^ (~e & g))) | 0) +\n                ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n            let t2 = (((a >>> 2 | a << (32 - 2)) ^ (a >>> 13 | a << (32 - 13)) ^\n                (a >>> 22 | a << (32 - 22))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n            h = g;\n            g = f;\n            f = e;\n            e = (d + t1) | 0;\n            d = c;\n            c = b;\n            b = a;\n            a = (t1 + t2) | 0;\n        }\n\n        v[0] += a;\n        v[1] += b;\n        v[2] += c;\n        v[3] += d;\n        v[4] += e;\n        v[5] += f;\n        v[6] += g;\n        v[7] += h;\n\n        pos += 64;\n        len -= 64;\n    }\n    return pos;\n}\n\nexport function hash(data: Uint8Array): Uint8Array {\n    const h = new SHA256();\n    h.update(data);\n    const digest = h.digest();\n    h.clean();\n    return digest;\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package wipe implements functions for zeroing arrays.\n */\n\nexport type NumericArray = number[] | Uint8Array | Int8Array | Uint16Array\n    | Int16Array | Uint32Array | Int32Array | Float32Array | Float64Array;\n\n/**\n * Sets all values in the given array to zero and returns it.\n *\n * The fact that it sets bytes to zero can be relied on.\n *\n * There is no guarantee that this function makes data disappear from memory,\n * as runtime implementation can, for example, have copying garbage collector\n * that will make copies of sensitive data before we wipe it. Or that an\n * operating system will write our data to swap or sleep image. Another thing\n * is that an optimizing compiler can remove calls to this function or make it\n * no-op. There's nothing we can do with it, so we just do our best and hope\n * that everything will be okay and good will triumph over evil.\n */\nexport function wipe(array: NumericArray): NumericArray {\n    // Right now it's similar to array.fill(0). If it turns\n    // out that runtimes optimize this call away, maybe\n    // we can try something else.\n    for (let i = 0; i < array.length; i++) {\n        array[i] = 0;\n    }\n    return array;\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package x25519 implements X25519 key agreement.\n */\n\nimport { randomBytes, RandomSource } from \"@stablelib/random\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport const PUBLIC_KEY_LENGTH = 32;\nexport const SECRET_KEY_LENGTH = 32;\nexport const SHARED_KEY_LENGTH = 32;\n\n// TODO(dchest): some functions are copies of ../sign/ed25519.\n// Find a way to combine them without opening up to public.\n\n// Ported from TweetNaCl.js, which is ported from TweetNaCl\n// by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n// https://tweetnacl.js.org\n\n// TweetNaCl contributors:\n// Daniel J. Bernstein, Bernard van Gastel, Wesley Janssen,\n// Tanja Lange, Peter Schwabe, Sjaak Smetsers.\n// Public domain.\n// https://tweetnacl.cr.yp.to/\n\ntype GF = Float64Array;\n\n// Returns new zero-filled 16-element GF (Float64Array).\n// If passed an array of numbers, prefills the returned\n// array with them.\n//\n// We use Float64Array, because we need 48-bit numbers\n// for this implementation.\nfunction gf(init?: number[]): GF {\n    const r = new Float64Array(16);\n    if (init) {\n        for (let i = 0; i < init.length; i++) {\n            r[i] = init[i];\n        }\n    }\n    return r;\n}\n\n// Base point.\nconst _9 = new Uint8Array(32); _9[0] = 9;\n\nconst _121665 = gf([0xdb41, 1]);\n\nfunction car25519(o: GF) {\n    let c = 1;\n    for (let i = 0; i < 16; i++) {\n        let v = o[i] + c + 65535;\n        c = Math.floor(v / 65536);\n        o[i] = v - c * 65536;\n    }\n    o[0] += c - 1 + 37 * (c - 1);\n}\n\nfunction sel25519(p: GF, q: GF, b: number) {\n    const c = ~(b - 1);\n    for (let i = 0; i < 16; i++) {\n        const t = c & (p[i] ^ q[i]);\n        p[i] ^= t;\n        q[i] ^= t;\n    }\n}\n\nfunction pack25519(o: Uint8Array, n: GF) {\n    const m = gf();\n    const t = gf();\n    for (let i = 0; i < 16; i++) {\n        t[i] = n[i];\n    }\n    car25519(t);\n    car25519(t);\n    car25519(t);\n    for (let j = 0; j < 2; j++) {\n        m[0] = t[0] - 0xffed;\n        for (let i = 1; i < 15; i++) {\n            m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n            m[i - 1] &= 0xffff;\n        }\n        m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n        const b = (m[15] >> 16) & 1;\n        m[14] &= 0xffff;\n        sel25519(t, m, 1 - b);\n    }\n    for (let i = 0; i < 16; i++) {\n        o[2 * i] = t[i] & 0xff;\n        o[2 * i + 1] = t[i] >> 8;\n    }\n}\n\nfunction unpack25519(o: GF, n: Uint8Array) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n    }\n    o[15] &= 0x7fff;\n}\n\nfunction add(o: GF, a: GF, b: GF) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] + b[i];\n    }\n}\n\nfunction sub(o: GF, a: GF, b: GF) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] - b[i];\n    }\n}\n\nfunction mul(o: GF, a: GF, b: GF) {\n    let v: number, c: number,\n        t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0,\n        t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n        t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n        t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n        b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3],\n        b4 = b[4],\n        b5 = b[5],\n        b6 = b[6],\n        b7 = b[7],\n        b8 = b[8],\n        b9 = b[9],\n        b10 = b[10],\n        b11 = b[11],\n        b12 = b[12],\n        b13 = b[13],\n        b14 = b[14],\n        b15 = b[15];\n\n    v = a[0];\n    t0 += v * b0;\n    t1 += v * b1;\n    t2 += v * b2;\n    t3 += v * b3;\n    t4 += v * b4;\n    t5 += v * b5;\n    t6 += v * b6;\n    t7 += v * b7;\n    t8 += v * b8;\n    t9 += v * b9;\n    t10 += v * b10;\n    t11 += v * b11;\n    t12 += v * b12;\n    t13 += v * b13;\n    t14 += v * b14;\n    t15 += v * b15;\n    v = a[1];\n    t1 += v * b0;\n    t2 += v * b1;\n    t3 += v * b2;\n    t4 += v * b3;\n    t5 += v * b4;\n    t6 += v * b5;\n    t7 += v * b6;\n    t8 += v * b7;\n    t9 += v * b8;\n    t10 += v * b9;\n    t11 += v * b10;\n    t12 += v * b11;\n    t13 += v * b12;\n    t14 += v * b13;\n    t15 += v * b14;\n    t16 += v * b15;\n    v = a[2];\n    t2 += v * b0;\n    t3 += v * b1;\n    t4 += v * b2;\n    t5 += v * b3;\n    t6 += v * b4;\n    t7 += v * b5;\n    t8 += v * b6;\n    t9 += v * b7;\n    t10 += v * b8;\n    t11 += v * b9;\n    t12 += v * b10;\n    t13 += v * b11;\n    t14 += v * b12;\n    t15 += v * b13;\n    t16 += v * b14;\n    t17 += v * b15;\n    v = a[3];\n    t3 += v * b0;\n    t4 += v * b1;\n    t5 += v * b2;\n    t6 += v * b3;\n    t7 += v * b4;\n    t8 += v * b5;\n    t9 += v * b6;\n    t10 += v * b7;\n    t11 += v * b8;\n    t12 += v * b9;\n    t13 += v * b10;\n    t14 += v * b11;\n    t15 += v * b12;\n    t16 += v * b13;\n    t17 += v * b14;\n    t18 += v * b15;\n    v = a[4];\n    t4 += v * b0;\n    t5 += v * b1;\n    t6 += v * b2;\n    t7 += v * b3;\n    t8 += v * b4;\n    t9 += v * b5;\n    t10 += v * b6;\n    t11 += v * b7;\n    t12 += v * b8;\n    t13 += v * b9;\n    t14 += v * b10;\n    t15 += v * b11;\n    t16 += v * b12;\n    t17 += v * b13;\n    t18 += v * b14;\n    t19 += v * b15;\n    v = a[5];\n    t5 += v * b0;\n    t6 += v * b1;\n    t7 += v * b2;\n    t8 += v * b3;\n    t9 += v * b4;\n    t10 += v * b5;\n    t11 += v * b6;\n    t12 += v * b7;\n    t13 += v * b8;\n    t14 += v * b9;\n    t15 += v * b10;\n    t16 += v * b11;\n    t17 += v * b12;\n    t18 += v * b13;\n    t19 += v * b14;\n    t20 += v * b15;\n    v = a[6];\n    t6 += v * b0;\n    t7 += v * b1;\n    t8 += v * b2;\n    t9 += v * b3;\n    t10 += v * b4;\n    t11 += v * b5;\n    t12 += v * b6;\n    t13 += v * b7;\n    t14 += v * b8;\n    t15 += v * b9;\n    t16 += v * b10;\n    t17 += v * b11;\n    t18 += v * b12;\n    t19 += v * b13;\n    t20 += v * b14;\n    t21 += v * b15;\n    v = a[7];\n    t7 += v * b0;\n    t8 += v * b1;\n    t9 += v * b2;\n    t10 += v * b3;\n    t11 += v * b4;\n    t12 += v * b5;\n    t13 += v * b6;\n    t14 += v * b7;\n    t15 += v * b8;\n    t16 += v * b9;\n    t17 += v * b10;\n    t18 += v * b11;\n    t19 += v * b12;\n    t20 += v * b13;\n    t21 += v * b14;\n    t22 += v * b15;\n    v = a[8];\n    t8 += v * b0;\n    t9 += v * b1;\n    t10 += v * b2;\n    t11 += v * b3;\n    t12 += v * b4;\n    t13 += v * b5;\n    t14 += v * b6;\n    t15 += v * b7;\n    t16 += v * b8;\n    t17 += v * b9;\n    t18 += v * b10;\n    t19 += v * b11;\n    t20 += v * b12;\n    t21 += v * b13;\n    t22 += v * b14;\n    t23 += v * b15;\n    v = a[9];\n    t9 += v * b0;\n    t10 += v * b1;\n    t11 += v * b2;\n    t12 += v * b3;\n    t13 += v * b4;\n    t14 += v * b5;\n    t15 += v * b6;\n    t16 += v * b7;\n    t17 += v * b8;\n    t18 += v * b9;\n    t19 += v * b10;\n    t20 += v * b11;\n    t21 += v * b12;\n    t22 += v * b13;\n    t23 += v * b14;\n    t24 += v * b15;\n    v = a[10];\n    t10 += v * b0;\n    t11 += v * b1;\n    t12 += v * b2;\n    t13 += v * b3;\n    t14 += v * b4;\n    t15 += v * b5;\n    t16 += v * b6;\n    t17 += v * b7;\n    t18 += v * b8;\n    t19 += v * b9;\n    t20 += v * b10;\n    t21 += v * b11;\n    t22 += v * b12;\n    t23 += v * b13;\n    t24 += v * b14;\n    t25 += v * b15;\n    v = a[11];\n    t11 += v * b0;\n    t12 += v * b1;\n    t13 += v * b2;\n    t14 += v * b3;\n    t15 += v * b4;\n    t16 += v * b5;\n    t17 += v * b6;\n    t18 += v * b7;\n    t19 += v * b8;\n    t20 += v * b9;\n    t21 += v * b10;\n    t22 += v * b11;\n    t23 += v * b12;\n    t24 += v * b13;\n    t25 += v * b14;\n    t26 += v * b15;\n    v = a[12];\n    t12 += v * b0;\n    t13 += v * b1;\n    t14 += v * b2;\n    t15 += v * b3;\n    t16 += v * b4;\n    t17 += v * b5;\n    t18 += v * b6;\n    t19 += v * b7;\n    t20 += v * b8;\n    t21 += v * b9;\n    t22 += v * b10;\n    t23 += v * b11;\n    t24 += v * b12;\n    t25 += v * b13;\n    t26 += v * b14;\n    t27 += v * b15;\n    v = a[13];\n    t13 += v * b0;\n    t14 += v * b1;\n    t15 += v * b2;\n    t16 += v * b3;\n    t17 += v * b4;\n    t18 += v * b5;\n    t19 += v * b6;\n    t20 += v * b7;\n    t21 += v * b8;\n    t22 += v * b9;\n    t23 += v * b10;\n    t24 += v * b11;\n    t25 += v * b12;\n    t26 += v * b13;\n    t27 += v * b14;\n    t28 += v * b15;\n    v = a[14];\n    t14 += v * b0;\n    t15 += v * b1;\n    t16 += v * b2;\n    t17 += v * b3;\n    t18 += v * b4;\n    t19 += v * b5;\n    t20 += v * b6;\n    t21 += v * b7;\n    t22 += v * b8;\n    t23 += v * b9;\n    t24 += v * b10;\n    t25 += v * b11;\n    t26 += v * b12;\n    t27 += v * b13;\n    t28 += v * b14;\n    t29 += v * b15;\n    v = a[15];\n    t15 += v * b0;\n    t16 += v * b1;\n    t17 += v * b2;\n    t18 += v * b3;\n    t19 += v * b4;\n    t20 += v * b5;\n    t21 += v * b6;\n    t22 += v * b7;\n    t23 += v * b8;\n    t24 += v * b9;\n    t25 += v * b10;\n    t26 += v * b11;\n    t27 += v * b12;\n    t28 += v * b13;\n    t29 += v * b14;\n    t30 += v * b15;\n\n    t0 += 38 * t16;\n    t1 += 38 * t17;\n    t2 += 38 * t18;\n    t3 += 38 * t19;\n    t4 += 38 * t20;\n    t5 += 38 * t21;\n    t6 += 38 * t22;\n    t7 += 38 * t23;\n    t8 += 38 * t24;\n    t9 += 38 * t25;\n    t10 += 38 * t26;\n    t11 += 38 * t27;\n    t12 += 38 * t28;\n    t13 += 38 * t29;\n    t14 += 38 * t30;\n    // t15 left as is\n\n    // first car\n    c = 1;\n    v = t0 + c + 65535; c = Math.floor(v / 65536); t0 = v - c * 65536;\n    v = t1 + c + 65535; c = Math.floor(v / 65536); t1 = v - c * 65536;\n    v = t2 + c + 65535; c = Math.floor(v / 65536); t2 = v - c * 65536;\n    v = t3 + c + 65535; c = Math.floor(v / 65536); t3 = v - c * 65536;\n    v = t4 + c + 65535; c = Math.floor(v / 65536); t4 = v - c * 65536;\n    v = t5 + c + 65535; c = Math.floor(v / 65536); t5 = v - c * 65536;\n    v = t6 + c + 65535; c = Math.floor(v / 65536); t6 = v - c * 65536;\n    v = t7 + c + 65535; c = Math.floor(v / 65536); t7 = v - c * 65536;\n    v = t8 + c + 65535; c = Math.floor(v / 65536); t8 = v - c * 65536;\n    v = t9 + c + 65535; c = Math.floor(v / 65536); t9 = v - c * 65536;\n    v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n    v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n    v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n    v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n    v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n    v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n\n    // second car\n    c = 1;\n    v = t0 + c + 65535; c = Math.floor(v / 65536); t0 = v - c * 65536;\n    v = t1 + c + 65535; c = Math.floor(v / 65536); t1 = v - c * 65536;\n    v = t2 + c + 65535; c = Math.floor(v / 65536); t2 = v - c * 65536;\n    v = t3 + c + 65535; c = Math.floor(v / 65536); t3 = v - c * 65536;\n    v = t4 + c + 65535; c = Math.floor(v / 65536); t4 = v - c * 65536;\n    v = t5 + c + 65535; c = Math.floor(v / 65536); t5 = v - c * 65536;\n    v = t6 + c + 65535; c = Math.floor(v / 65536); t6 = v - c * 65536;\n    v = t7 + c + 65535; c = Math.floor(v / 65536); t7 = v - c * 65536;\n    v = t8 + c + 65535; c = Math.floor(v / 65536); t8 = v - c * 65536;\n    v = t9 + c + 65535; c = Math.floor(v / 65536); t9 = v - c * 65536;\n    v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n    v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n    v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n    v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n    v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n    v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n\n    o[0] = t0;\n    o[1] = t1;\n    o[2] = t2;\n    o[3] = t3;\n    o[4] = t4;\n    o[5] = t5;\n    o[6] = t6;\n    o[7] = t7;\n    o[8] = t8;\n    o[9] = t9;\n    o[10] = t10;\n    o[11] = t11;\n    o[12] = t12;\n    o[13] = t13;\n    o[14] = t14;\n    o[15] = t15;\n}\n\nfunction square(o: GF, a: GF) {\n    mul(o, a, a);\n}\n\nfunction inv25519(o: GF, inp: GF) {\n    const c = gf();\n    for (let i = 0; i < 16; i++) {\n        c[i] = inp[i];\n    }\n    for (let i = 253; i >= 0; i--) {\n        square(c, c);\n        if (i !== 2 && i !== 4) {\n            mul(c, c, inp);\n        }\n    }\n    for (let i = 0; i < 16; i++) {\n        o[i] = c[i];\n    }\n}\n\nexport function scalarMult(n: Uint8Array, p: Uint8Array): Uint8Array {\n    const z = new Uint8Array(32);\n    const x = new Float64Array(80);\n    const a = gf(), b = gf(), c = gf(),\n        d = gf(), e = gf(), f = gf();\n\n    for (let i = 0; i < 31; i++) {\n        z[i] = n[i];\n    }\n    z[31] = (n[31] & 127) | 64;\n    z[0] &= 248;\n\n    unpack25519(x, p);\n\n    for (let i = 0; i < 16; i++) {\n        b[i] = x[i];\n    }\n\n    a[0] = d[0] = 1;\n\n    for (let i = 254; i >= 0; --i) {\n        const r = (z[i >>> 3] >>> (i & 7)) & 1;\n        sel25519(a, b, r);\n        sel25519(c, d, r);\n        add(e, a, c);\n        sub(a, a, c);\n        add(c, b, d);\n        sub(b, b, d);\n        square(d, e);\n        square(f, a);\n        mul(a, c, a);\n        mul(c, b, e);\n        add(e, a, c);\n        sub(a, a, c);\n        square(b, a);\n        sub(c, d, f);\n        mul(a, c, _121665);\n        add(a, a, d);\n        mul(c, c, a);\n        mul(a, d, f);\n        mul(d, b, x);\n        square(b, e);\n        sel25519(a, b, r);\n        sel25519(c, d, r);\n    }\n    for (let i = 0; i < 16; i++) {\n        x[i + 16] = a[i];\n        x[i + 32] = c[i];\n        x[i + 48] = b[i];\n        x[i + 64] = d[i];\n    }\n    const x32 = x.subarray(32);\n    const x16 = x.subarray(16);\n    inv25519(x32, x32);\n    mul(x16, x16, x32);\n    const q = new Uint8Array(32);\n    pack25519(q, x16);\n    return q;\n}\n\nexport function scalarMultBase(n: Uint8Array): Uint8Array {\n    return scalarMult(n, _9);\n}\n\nexport interface KeyPair {\n    publicKey: Uint8Array;\n    secretKey: Uint8Array;\n}\n\nexport function generateKeyPairFromSeed(seed: Uint8Array): KeyPair {\n    if (seed.length !== SECRET_KEY_LENGTH) {\n        throw new Error(`x25519: seed must be ${SECRET_KEY_LENGTH} bytes`);\n    }\n    const secretKey = new Uint8Array(seed);\n    const publicKey = scalarMultBase(secretKey);\n    return {\n        publicKey,\n        secretKey\n    };\n}\n\nexport function generateKeyPair(prng?: RandomSource): KeyPair {\n    const seed = randomBytes(32, prng);\n    const result = generateKeyPairFromSeed(seed);\n    wipe(seed);\n    return result;\n}\n\n/**\n * Returns a shared key between our secret key and a peer's public key.\n *\n * Throws an error if the given keys are of wrong length.\n *\n * If rejectZero is true throws if the calculated shared key is all-zero.\n * From RFC 7748:\n *\n * > Protocol designers using Diffie-Hellman over the curves defined in\n * > this document must not assume \"contributory behavior\".  Specially,\n * > contributory behavior means that both parties' private keys\n * > contribute to the resulting shared key.  Since curve25519 and\n * > curve448 have cofactors of 8 and 4 (respectively), an input point of\n * > small order will eliminate any contribution from the other party's\n * > private key.  This situation can be detected by checking for the all-\n * > zero output, which implementations MAY do, as specified in Section 6.\n * > However, a large number of existing implementations do not do this.\n *\n * IMPORTANT: the returned key is a raw result of scalar multiplication.\n * To use it as a key material, hash it with a cryptographic hash function.\n */\nexport function sharedKey(mySecretKey: Uint8Array, theirPublicKey: Uint8Array, rejectZero = false): Uint8Array {\n    if (mySecretKey.length !== PUBLIC_KEY_LENGTH) {\n        throw new Error(\"X25519: incorrect secret key length\");\n    }\n    if (theirPublicKey.length !== PUBLIC_KEY_LENGTH) {\n        throw new Error(\"X25519: incorrect public key length\");\n    }\n\n    const result = scalarMult(mySecretKey, theirPublicKey);\n\n    if (rejectZero) {\n        let zeros = 0;\n        for (let i = 0; i < result.length; i++) {\n            zeros |= result[i];\n        }\n        if (zeros === 0) {\n            throw new Error(\"X25519: invalid shared key\");\n        }\n    }\n\n    return result;\n}\n",null,null,null,null,null,null,null,null,null,null,"var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\nexport { BrowserInfo };\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nexport { NodeInfo };\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\nexport { SearchBotDeviceInfo };\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nexport { BotInfo };\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\nexport { ReactNativeInfo };\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['pie', /^Microsoft Pocket Internet Explorer\\/(\\d+\\.\\d+)$/],\n    ['pie', /^Mozilla\\/\\d\\.\\d+\\s\\(compatible;\\s(?:MSP?IE|MSInternet Explorer) (\\d+\\.\\d+);.*Windows CE.*\\)$/],\n    ['netfront', /^Mozilla\\/\\d\\.\\d+.*NetFront\\/(\\d.\\d)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FB[AS]V\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['curl', /^curl\\/([0-9\\.]+)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Windows CE', /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nexport function detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nexport function browserName(ua) {\n    var data = matchUserAgent(ua);\n    return data ? data[0] : null;\n}\nexport function parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)\n    var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nexport function detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nexport function getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n",null,"export type Input = string | number | bigint | Uint8Array | Array<Input> | null | undefined\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\n\nexport interface Decoded {\n  data: Uint8Array | NestedUint8Array\n  remainder: Uint8Array\n}\n\n/**\n * RLP Encoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\n * This function takes in data, converts it to Uint8Array if not,\n * and adds a length for recursion.\n * @param input Will be converted to Uint8Array\n * @returns Uint8Array of encoded data\n **/\nexport function encode(input: Input): Uint8Array {\n  if (Array.isArray(input)) {\n    const output: Uint8Array[] = []\n    let outputLength = 0\n    for (let i = 0; i < input.length; i++) {\n      const encoded = encode(input[i])\n      output.push(encoded)\n      outputLength += encoded.length\n    }\n    return concatBytes(encodeLength(outputLength, 192), ...output)\n  }\n  const inputBuf = toBytes(input)\n  if (inputBuf.length === 1 && inputBuf[0] < 128) {\n    return inputBuf\n  }\n  return concatBytes(encodeLength(inputBuf.length, 128), inputBuf)\n}\n\n/**\n * Slices a Uint8Array, throws if the slice goes out-of-bounds of the Uint8Array.\n * E.g. `safeSlice(hexToBytes('aa'), 1, 2)` will throw.\n * @param input\n * @param start\n * @param end\n */\nfunction safeSlice(input: Uint8Array, start: number, end: number) {\n  if (end > input.length) {\n    throw new Error('invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds')\n  }\n  return input.slice(start, end)\n}\n\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n */\nfunction decodeLength(v: Uint8Array): number {\n  if (v[0] === 0) {\n    throw new Error('invalid RLP: extra zeros')\n  }\n  return parseHexByte(bytesToHex(v))\n}\n\nfunction encodeLength(len: number, offset: number): Uint8Array {\n  if (len < 56) {\n    return Uint8Array.from([len + offset])\n  }\n  const hexLength = numberToHex(len)\n  const lLength = hexLength.length / 2\n  const firstByte = numberToHex(offset + 55 + lLength)\n  return Uint8Array.from(hexToBytes(firstByte + hexLength))\n}\n\n/**\n * RLP Decoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\n * @param input Will be converted to Uint8Array\n * @param stream Is the input a stream (false by default)\n * @returns decoded Array of Uint8Arrays containing the original message\n **/\nexport function decode(input: Input, stream?: false): Uint8Array | NestedUint8Array\nexport function decode(input: Input, stream?: true): Decoded\nexport function decode(input: Input, stream = false): Uint8Array | NestedUint8Array | Decoded {\n  if (typeof input === 'undefined' || input === null || (input as any).length === 0) {\n    return Uint8Array.from([])\n  }\n\n  const inputBytes = toBytes(input)\n  const decoded = _decode(inputBytes)\n\n  if (stream) {\n    return decoded\n  }\n  if (decoded.remainder.length !== 0) {\n    throw new Error('invalid RLP: remainder must be zero')\n  }\n\n  return decoded.data\n}\n\n/** Decode an input with RLP */\nfunction _decode(input: Uint8Array): Decoded {\n  let length: number, llength: number, data: Uint8Array, innerRemainder: Uint8Array, d: Decoded\n  const decoded = []\n  const firstByte = input[0]\n\n  if (firstByte <= 0x7f) {\n    // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n    return {\n      data: input.slice(0, 1),\n      remainder: input.slice(1),\n    }\n  } else if (firstByte <= 0xb7) {\n    // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n    // The range of the first byte is [0x80, 0xb7]\n    length = firstByte - 0x7f\n\n    // set 0x80 null to 0\n    if (firstByte === 0x80) {\n      data = Uint8Array.from([])\n    } else {\n      data = safeSlice(input, 1, length)\n    }\n\n    if (length === 2 && data[0] < 0x80) {\n      throw new Error('invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed')\n    }\n\n    return {\n      data,\n      remainder: input.slice(length),\n    }\n  } else if (firstByte <= 0xbf) {\n    // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n    // followed by the length, followed by the string\n    llength = firstByte - 0xb6\n    if (input.length - 1 < llength) {\n      throw new Error('invalid RLP: not enough bytes for string length')\n    }\n    length = decodeLength(safeSlice(input, 1, llength))\n    if (length <= 55) {\n      throw new Error('invalid RLP: expected string length to be greater than 55')\n    }\n    data = safeSlice(input, llength, length + llength)\n\n    return {\n      data,\n      remainder: input.slice(length + llength),\n    }\n  } else if (firstByte <= 0xf7) {\n    // a list between 0-55 bytes long\n    length = firstByte - 0xbf\n    innerRemainder = safeSlice(input, 1, length)\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data)\n      innerRemainder = d.remainder\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(length),\n    }\n  } else {\n    // a list over 55 bytes long\n    llength = firstByte - 0xf6\n    length = decodeLength(safeSlice(input, 1, llength))\n    if (length < 56) {\n      throw new Error('invalid RLP: encoded list too short')\n    }\n    const totalLength = llength + length\n    if (totalLength > input.length) {\n      throw new Error('invalid RLP: total length is larger than the data')\n    }\n\n    innerRemainder = safeSlice(input, llength, totalLength)\n\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data)\n      innerRemainder = d.remainder\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(totalLength),\n    }\n  }\n}\n\nconst cachedHexes = Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'))\nfunction bytesToHex(uint8a: Uint8Array): string {\n  // Pre-caching chars with `cachedHexes` speeds this up 6x\n  let hex = ''\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += cachedHexes[uint8a[i]]\n  }\n  return hex\n}\n\nfunction parseHexByte(hexByte: string): number {\n  const byte = Number.parseInt(hexByte, 16)\n  if (Number.isNaN(byte)) throw new Error('Invalid byte sequence')\n  return byte\n}\n\n// Caching slows it down 2-3x\nfunction hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex)\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex')\n  const array = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2\n    array[i] = parseHexByte(hex.slice(j, j + 2))\n  }\n  return array\n}\n\n/** Concatenates two Uint8Arrays into one. */\nfunction concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (arrays.length === 1) return arrays[0]\n  const length = arrays.reduce((a, arr) => a + arr.length, 0)\n  const result = new Uint8Array(length)\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i]\n    result.set(arr, pad)\n    pad += arr.length\n  }\n  return result\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any\ndeclare const TextDecoder: any\n\nfunction utf8ToBytes(utf: string): Uint8Array {\n  return new TextEncoder().encode(utf)\n}\n\n/** Transform an integer into its hexadecimal value */\nfunction numberToHex(integer: number | bigint): string {\n  if (integer < 0) {\n    throw new Error('Invalid integer as argument, must be unsigned!')\n  }\n  const hex = integer.toString(16)\n  return hex.length % 2 ? `0${hex}` : hex\n}\n\n/** Pad a string to be even */\nfunction padToEven(a: string): string {\n  return a.length % 2 ? `0${a}` : a\n}\n\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str: string): boolean {\n  return str.length >= 2 && str[0] === '0' && str[1] === 'x'\n}\n\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/** Transform anything into a Uint8Array */\nfunction toBytes(v: Input): Uint8Array {\n  if (v instanceof Uint8Array) {\n    return v\n  }\n  if (typeof v === 'string') {\n    if (isHexPrefixed(v)) {\n      return hexToBytes(padToEven(stripHexPrefix(v)))\n    }\n    return utf8ToBytes(v)\n  }\n  if (typeof v === 'number' || typeof v === 'bigint') {\n    if (!v) {\n      return Uint8Array.from([])\n    }\n    return hexToBytes(numberToHex(v))\n  }\n  if (v === null || v === undefined) {\n    return Uint8Array.from([])\n  }\n  throw new Error('toBytes: received unsupported type ' + typeof v)\n}\n\nexport const utils = {\n  bytesToHex,\n  concatBytes,\n  hexToBytes,\n  utf8ToBytes,\n}\n\nexport const RLP = { encode, decode }\n","/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\n\nimport { bytesToUnprefixedHex, utf8ToBytes } from './bytes.js'\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nexport function isHexPrefixed(str: string): boolean {\n  if (typeof str !== 'string') {\n    throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`)\n  }\n\n  return str[0] === '0' && str[1] === 'x'\n}\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str: string): string => {\n  if (typeof str !== 'string')\n    throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`)\n\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value: string): string {\n  let a = value\n\n  if (typeof a !== 'string') {\n    throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`)\n  }\n\n  if (a.length % 2) a = `0${a}`\n\n  return a\n}\n\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nexport function getBinarySize(str: string) {\n  if (typeof str !== 'string') {\n    throw new Error(`[getBinarySize] method requires input type 'string', received ${typeof str}`)\n  }\n\n  return utf8ToBytes(str).byteLength\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nexport function arrayContainsArray(\n  superset: unknown[],\n  subset: unknown[],\n  some?: boolean\n): boolean {\n  if (Array.isArray(superset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof superset}'`\n    )\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof subset}'`\n    )\n  }\n\n  return subset[some === true ? 'some' : 'every']((value) => superset.indexOf(value) >= 0)\n}\n\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nexport function toAscii(hex: string): string {\n  let str = ''\n  let i = 0\n  const l = hex.length\n\n  if (hex.substring(0, 2) === '0x') i = 2\n\n  for (; i < l; i += 2) {\n    const code = parseInt(hex.substr(i, 2), 16)\n    str += String.fromCharCode(code)\n  }\n\n  return str\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string.\n * Strips leading and trailing 0's.\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nexport function fromUtf8(stringValue: string) {\n  const str = utf8ToBytes(stringValue)\n\n  return `0x${padToEven(bytesToUnprefixedHex(str)).replace(/^0+|0+$/g, '')}`\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nexport function fromAscii(stringValue: string) {\n  let hex = ''\n  for (let i = 0; i < stringValue.length; i++) {\n    const code = stringValue.charCodeAt(i)\n    const n = code.toString(16)\n    hex += n.length < 2 ? `0${n}` : n\n  }\n\n  return `0x${hex}`\n}\n\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nexport function getKeys(params: Record<string, string>[], key: string, allowEmpty?: boolean) {\n  if (!Array.isArray(params)) {\n    throw new Error(`[getKeys] method expects input 'params' to be an array, got ${typeof params}`)\n  }\n  if (typeof key !== 'string') {\n    throw new Error(\n      `[getKeys] method expects input 'key' to be type 'string', got ${typeof params}`\n    )\n  }\n\n  const result = []\n\n  for (let i = 0; i < params.length; i++) {\n    let value = params[i][key]\n    if (allowEmpty === true && !value) {\n      value = ''\n    } else if (typeof value !== 'string') {\n      throw new Error(`invalid abi - expected type 'string', received ${typeof value}`)\n    }\n    result.push(value)\n  }\n\n  return result\n}\n\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nexport function isHexString(value: string, length?: number): boolean {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) return false\n\n  if (typeof length !== 'undefined' && length > 0 && value.length !== 2 + 2 * length) return false\n\n  return true\n}\n","import { isHexString } from './internal.js'\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function (input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBytes = function (input: Uint8Array): void {\n  if (!(input instanceof Uint8Array)) {\n    const msg = `This method only supports Uint8Array but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function (input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function (input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n","import { getRandomBytesSync } from 'ethereum-cryptography/random.js'\n// eslint-disable-next-line no-restricted-imports\nimport {\n  bytesToHex as _bytesToUnprefixedHex,\n  hexToBytes as _unprefixedHexToBytes,\n} from 'ethereum-cryptography/utils.js'\n\nimport { assertIsArray, assertIsBytes, assertIsHexString } from './helpers.js'\nimport { isHexPrefixed, isHexString, padToEven, stripHexPrefix } from './internal.js'\n\nimport type { PrefixedHexString, TransformabletoBytes } from './types.js'\n\nconst BIGINT_0 = BigInt(0)\n\n/**\n * @deprecated\n */\nexport const bytesToUnprefixedHex = _bytesToUnprefixedHex\n\n/**\n * @deprecated\n */\nexport const unprefixedHexToBytes = (inp: string) => {\n  if (inp.slice(0, 2) === '0x') {\n    throw new Error('hex string is prefixed with 0x, should be unprefixed')\n  } else {\n    return _unprefixedHexToBytes(padToEven(inp))\n  }\n}\n\n/****************  Borrowed from @chainsafe/ssz */\n// Caching this info costs about ~1000 bytes and speeds up toHexString() by x6\nconst hexByByte = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'))\n\nexport const bytesToHex = (bytes: Uint8Array): string => {\n  let hex = '0x'\n  if (bytes === undefined || bytes.length === 0) return hex\n  for (const byte of bytes) {\n    hex += hexByByte[byte]\n  }\n  return hex\n}\n\n// BigInt cache for the numbers 0 - 256*256-1 (two-byte bytes)\nconst BIGINT_CACHE: bigint[] = []\nfor (let i = 0; i <= 256 * 256 - 1; i++) {\n  BIGINT_CACHE[i] = BigInt(i)\n}\n\n/**\n * Converts a {@link Uint8Array} to a {@link bigint}\n * @param {Uint8Array} bytes the bytes to convert\n * @returns {bigint}\n */\nexport const bytesToBigInt = (bytes: Uint8Array): bigint => {\n  const hex = bytesToHex(bytes)\n  if (hex === '0x') {\n    return BIGINT_0\n  }\n  if (hex.length === 4) {\n    // If the byte length is 1 (this is faster than checking `bytes.length === 1`)\n    return BIGINT_CACHE[bytes[0]]\n  }\n  if (hex.length === 6) {\n    return BIGINT_CACHE[bytes[0] * 256 + bytes[1]]\n  }\n  return BigInt(hex)\n}\n\n/**\n * Converts a {@link Uint8Array} to a {@link number}.\n * @param {Uint8Array} bytes the bytes to convert\n * @return  {number}\n * @throws If the input number exceeds 53 bits.\n */\nexport const bytesToInt = (bytes: Uint8Array): number => {\n  const res = Number(bytesToBigInt(bytes))\n  if (!Number.isSafeInteger(res)) throw new Error('Number exceeds 53 bits')\n  return res\n}\n\nexport const hexToBytes = (hex: string): Uint8Array => {\n  if (typeof hex !== 'string') {\n    throw new Error(`hex argument type ${typeof hex} must be of type string`)\n  }\n\n  if (!hex.startsWith('0x')) {\n    throw new Error(`prefixed hex input should start with 0x, got ${hex.substring(0, 2)}`)\n  }\n\n  hex = hex.slice(2)\n\n  if (hex.length % 2 !== 0) {\n    hex = padToEven(hex)\n  }\n\n  const byteLen = hex.length / 2\n  const bytes = new Uint8Array(byteLen)\n  for (let i = 0; i < byteLen; i++) {\n    const byte = parseInt(hex.slice(i * 2, (i + 1) * 2), 16)\n    bytes[i] = byte\n  }\n  return bytes\n}\n\n/******************************************/\n\n/**\n * Converts a {@link number} into a {@link PrefixedHexString}\n * @param {number} i\n * @return {PrefixedHexString}\n */\nexport const intToHex = (i: number): PrefixedHexString => {\n  if (!Number.isSafeInteger(i) || i < 0) {\n    throw new Error(`Received an invalid integer type: ${i}`)\n  }\n  return `0x${i.toString(16)}`\n}\n\n/**\n * Converts an {@link number} to a {@link Uint8Array}\n * @param {Number} i\n * @return {Uint8Array}\n */\nexport const intToBytes = (i: number): Uint8Array => {\n  const hex = intToHex(i)\n  return hexToBytes(hex)\n}\n\n/**\n * Converts a {@link bigint} to a {@link Uint8Array}\n *  * @param {bigint} num the bigint to convert\n * @returns {Uint8Array}\n */\nexport const bigIntToBytes = (num: bigint): Uint8Array => {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return toBytes('0x' + padToEven(num.toString(16)))\n}\n\n/**\n * Returns a Uint8Array filled with 0s.\n * @param {number} bytes the number of bytes of the Uint8Array\n * @return {Uint8Array}\n */\nexport const zeros = (bytes: number): Uint8Array => {\n  return new Uint8Array(bytes)\n}\n\n/**\n * Pads a `Uint8Array` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param {Uint8Array} msg the value to pad\n * @param {number} length the number of bytes the output should be\n * @param {boolean} right whether to start padding form the left or right\n * @return {Uint8Array}\n */\nconst setLength = (msg: Uint8Array, length: number, right: boolean): Uint8Array => {\n  if (right) {\n    if (msg.length < length) {\n      return new Uint8Array([...msg, ...zeros(length - msg.length)])\n    }\n    return msg.subarray(0, length)\n  } else {\n    if (msg.length < length) {\n      return new Uint8Array([...zeros(length - msg.length), ...msg])\n    }\n    return msg.subarray(-length)\n  }\n}\n\n/**\n * Left Pads a `Uint8Array` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param {Uint8Array} msg the value to pad\n * @param {number} length the number of bytes the output should be\n * @return {Uint8Array}\n */\nexport const setLengthLeft = (msg: Uint8Array, length: number): Uint8Array => {\n  assertIsBytes(msg)\n  return setLength(msg, length, false)\n}\n\n/**\n * Right Pads a `Uint8Array` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param {Uint8Array} msg the value to pad\n * @param {number} length the number of bytes the output should be\n * @return {Uint8Array}\n */\nexport const setLengthRight = (msg: Uint8Array, length: number): Uint8Array => {\n  assertIsBytes(msg)\n  return setLength(msg, length, true)\n}\n\n/**\n * Trims leading zeros from a `Uint8Array`, `number[]` or PrefixedHexString`.\n * @param {Uint8Array|number[]|PrefixedHexString} a\n * @return {Uint8Array|number[]|PrefixedHexString}\n */\nconst stripZeros = <\n  T extends Uint8Array | number[] | PrefixedHexString = Uint8Array | number[] | PrefixedHexString\n>(\n  a: T\n): T => {\n  let first = a[0]\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1) as T\n    first = a[0]\n  }\n  return a\n}\n\n/**\n * Trims leading zeros from a `Uint8Array`.\n * @param {Uint8Array} a\n * @return {Uint8Array}\n */\nexport const unpadBytes = (a: Uint8Array): Uint8Array => {\n  assertIsBytes(a)\n  return stripZeros(a)\n}\n\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param  {number[]} a\n * @return {number[]}\n */\nexport const unpadArray = (a: number[]): number[] => {\n  assertIsArray(a)\n  return stripZeros(a)\n}\n\n/**\n * Trims leading zeros from a `PrefixedHexString`.\n * @param {PrefixedHexString} a\n * @return {PrefixedHexString}\n */\nexport const unpadHex = (a: string): PrefixedHexString => {\n  assertIsHexString(a)\n  a = stripHexPrefix(a)\n  return '0x' + stripZeros(a)\n}\n\nexport type ToBytesInputTypes =\n  | PrefixedHexString\n  | number\n  | bigint\n  | Uint8Array\n  | number[]\n  | TransformabletoBytes\n  | null\n  | undefined\n\n/**\n * Attempts to turn a value into a `Uint8Array`.\n * Inputs supported: `Buffer`, `Uint8Array`, `String` (hex-prefixed), `Number`, null/undefined, `BigInt` and other objects\n * with a `toArray()` or `toBytes()` method.\n * @param {ToBytesInputTypes} v the value\n * @return {Uint8Array}\n */\n\nexport const toBytes = (v: ToBytesInputTypes): Uint8Array => {\n  if (v === null || v === undefined) {\n    return new Uint8Array()\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Uint8Array.from(v)\n  }\n\n  if (typeof v === 'string') {\n    if (!isHexString(v)) {\n      throw new Error(\n        `Cannot convert string to Uint8Array. toBytes only supports 0x-prefixed hex strings and this string was given: ${v}`\n      )\n    }\n    return hexToBytes(v)\n  }\n\n  if (typeof v === 'number') {\n    return intToBytes(v)\n  }\n\n  if (typeof v === 'bigint') {\n    if (v < BIGINT_0) {\n      throw new Error(`Cannot convert negative bigint to Uint8Array. Given: ${v}`)\n    }\n    let n = v.toString(16)\n    if (n.length % 2) n = '0' + n\n    return unprefixedHexToBytes(n)\n  }\n\n  if (v.toBytes !== undefined) {\n    // converts a `TransformableToBytes` object to a Uint8Array\n    return v.toBytes()\n  }\n\n  throw new Error('invalid type')\n}\n\n/**\n * Interprets a `Uint8Array` as a signed integer and returns a `BigInt`. Assumes 256-bit numbers.\n * @param {Uint8Array} num Signed integer value\n * @returns {bigint}\n */\nexport const fromSigned = (num: Uint8Array): bigint => {\n  return BigInt.asIntN(256, bytesToBigInt(num))\n}\n\n/**\n * Converts a `BigInt` to an unsigned integer and returns it as a `Uint8Array`. Assumes 256-bit numbers.\n * @param {bigint} num\n * @returns {Uint8Array}\n */\nexport const toUnsigned = (num: bigint): Uint8Array => {\n  return bigIntToBytes(BigInt.asUintN(256, num))\n}\n\n/**\n * Adds \"0x\" to a given `string` if it does not already start with \"0x\".\n * @param {string} str\n * @return {PrefixedHexString}\n */\nexport const addHexPrefix = (str: string): PrefixedHexString => {\n  if (typeof str !== 'string') {\n    return str\n  }\n\n  return isHexPrefixed(str) ? str : '0x' + str\n}\n\n/**\n * Shortens a string  or Uint8Array's hex string representation to maxLength (default 50).\n *\n * Examples:\n *\n * Input:  '657468657265756d000000000000000000000000000000000000000000000000'\n * Output: '657468657265756d0000000000000000000000000000000000…'\n * @param {Uint8Array | string} bytes\n * @param {number} maxLength\n * @return {string}\n */\nexport const short = (bytes: Uint8Array | string, maxLength: number = 50): string => {\n  const byteStr = bytes instanceof Uint8Array ? bytesToHex(bytes) : bytes\n  const len = byteStr.slice(0, 2) === '0x' ? maxLength + 2 : maxLength\n  if (byteStr.length <= len) {\n    return byteStr\n  }\n  return byteStr.slice(0, len) + '…'\n}\n\n/**\n * Checks provided Uint8Array for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Uint8Array values\n * @throws if any provided value is found to have leading zero bytes\n */\nexport const validateNoLeadingZeroes = (values: { [key: string]: Uint8Array | undefined }) => {\n  for (const [k, v] of Object.entries(values)) {\n    if (v !== undefined && v.length > 0 && v[0] === 0) {\n      throw new Error(`${k} cannot have leading zeroes, received: ${bytesToHex(v)}`)\n    }\n  }\n}\n\n/**\n * Converts a {@link bigint} to a `0x` prefixed hex string\n * @param {bigint} num the bigint to convert\n * @returns {PrefixedHexString}\n */\nexport const bigIntToHex = (num: bigint): PrefixedHexString => {\n  return '0x' + num.toString(16)\n}\n\n/**\n * Convert value from bigint to an unpadded Uint8Array\n * (useful for RLP transport)\n * @param {bigint} value the bigint to convert\n * @returns {Uint8Array}\n */\nexport const bigIntToUnpaddedBytes = (value: bigint): Uint8Array => {\n  return unpadBytes(bigIntToBytes(value))\n}\n\n/**\n * Convert value from number to an unpadded Uint8Array\n * (useful for RLP transport)\n * @param {number} value the bigint to convert\n * @returns {Uint8Array}\n */\nexport const intToUnpaddedBytes = (value: number): Uint8Array => {\n  return unpadBytes(intToBytes(value))\n}\n\n/**\n * Compares two Uint8Arrays and returns a number indicating their order in a sorted array.\n *\n * @param {Uint8Array} value1 - The first Uint8Array to compare.\n * @param {Uint8Array} value2 - The second Uint8Array to compare.\n * @returns {number} A positive number if value1 is larger than value2,\n *                   A negative number if value1 is smaller than value2,\n *                   or 0 if value1 and value2 are equal.\n */\nexport const compareBytes = (value1: Uint8Array, value2: Uint8Array): number => {\n  const bigIntValue1 = bytesToBigInt(value1)\n  const bigIntValue2 = bytesToBigInt(value2)\n  return bigIntValue1 > bigIntValue2 ? 1 : bigIntValue1 < bigIntValue2 ? -1 : 0\n}\n\n/**\n * Generates a Uint8Array of random bytes of specified length.\n *\n * @param {number} length - The length of the Uint8Array.\n * @returns {Uint8Array} A Uint8Array of random bytes of specified length.\n */\nexport const randomBytes = (length: number): Uint8Array => {\n  return getRandomBytesSync(length)\n}\n\n/**\n * This mirrors the functionality of the `ethereum-cryptography` export except\n * it skips the check to validate that every element of `arrays` is indead a `uint8Array`\n * Can give small performance gains on large arrays\n * @param {Uint8Array[]} arrays an array of Uint8Arrays\n * @returns {Uint8Array} one Uint8Array with all the elements of the original set\n * works like `Buffer.concat`\n */\nexport const concatBytes = (...arrays: Uint8Array[]): Uint8Array => {\n  if (arrays.length === 1) return arrays[0]\n  const length = arrays.reduce((a, arr) => a + arr.length, 0)\n  const result = new Uint8Array(length)\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i]\n    result.set(arr, pad)\n    pad += arr.length\n  }\n  return result\n}\n\n/**\n * @notice Convert a Uint8Array to a 32-bit integer\n * @param {Uint8Array} bytes The input Uint8Array from which to read the 32-bit integer.\n * @param {boolean} littleEndian True for little-endian, undefined or false for big-endian.\n * @throws {Error} If the input Uint8Array has a length less than 4.\n * @return {number} The 32-bit integer read from the input Uint8Array.\n */\nexport function bytesToInt32(bytes: Uint8Array, littleEndian: boolean = false): number {\n  if (bytes.length < 4) {\n    throw new Error('The input Uint8Array must have at least 4 bytes.')\n  }\n  const dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength)\n  return dataView.getInt32(0, littleEndian)\n}\n\n/**\n * @notice Convert a Uint8Array to a 64-bit bigint\n * @param {Uint8Array} bytes The input Uint8Array from which to read the 64-bit bigint.\n * @param {boolean} littleEndian True for little-endian, undefined or false for big-endian.\n * @throws {Error} If the input Uint8Array has a length less than 8.\n * @return {bigint} The 64-bit bigint read from the input Uint8Array.\n */\nexport function bytesToBigInt64(bytes: Uint8Array, littleEndian: boolean = false): bigint {\n  if (bytes.length < 8) {\n    throw new Error('The input Uint8Array must have at least 8 bytes.')\n  }\n  const dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength)\n  return dataView.getBigInt64(0, littleEndian)\n}\n\n/**\n * @notice Convert a 32-bit integer to a Uint8Array.\n * @param {number} value The 32-bit integer to convert.\n * @param {boolean} littleEndian True for little-endian, undefined or false for big-endian.\n * @return {Uint8Array} A Uint8Array of length 4 containing the integer.\n */\nexport function int32ToBytes(value: number, littleEndian: boolean = false): Uint8Array {\n  const buffer = new ArrayBuffer(4)\n  const dataView = new DataView(buffer)\n  dataView.setInt32(0, value, littleEndian)\n  return new Uint8Array(buffer)\n}\n\n/**\n * @notice Convert a 64-bit bigint to a Uint8Array.\n * @param {bigint} value The 64-bit bigint to convert.\n * @param {boolean} littleEndian True for little-endian, undefined or false for big-endian.\n * @return {Uint8Array} A Uint8Array of length 8 containing the bigint.\n */\nexport function bigInt64ToBytes(value: bigint, littleEndian: boolean = false): Uint8Array {\n  const buffer = new ArrayBuffer(8)\n  const dataView = new DataView(buffer)\n  dataView.setBigInt64(0, value, littleEndian)\n  return new Uint8Array(buffer)\n}\n\n// eslint-disable-next-line no-restricted-imports\nexport { bytesToUtf8, equalsBytes, utf8ToBytes } from 'ethereum-cryptography/utils.js'\n","import { secp256k1 } from 'ethereum-cryptography/secp256k1.js'\n\nimport { hexToBytes } from './bytes.js'\n\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = BigInt('0xffffffffffffffff')\n\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = BigInt(\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\n)\n\n/**\n * The max integer that the evm can handle (2^256-1) as a bigint\n * 2^256-1 equals to 340282366920938463463374607431768211455\n * We use literal value instead of calculated value for compatibility issue.\n */\nexport const MAX_INTEGER_BIGINT = BigInt(\n  '115792089237316195423570985008687907853269984665640564039457584007913129639935'\n)\n\nexport const SECP256K1_ORDER = secp256k1.CURVE.n\nexport const SECP256K1_ORDER_DIV_2 = secp256k1.CURVE.n / BigInt(2)\n\n/**\n * 2^256\n */\nexport const TWO_POW256 = BigInt(\n  '0x10000000000000000000000000000000000000000000000000000000000000000'\n)\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL_S = '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL = hexToBytes(KECCAK256_NULL_S)\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY_S =\n  '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY = hexToBytes(KECCAK256_RLP_ARRAY_S)\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP_S = '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP = hexToBytes(KECCAK256_RLP_S)\n\n/**\n *  RLP encoded empty string\n */\nexport const RLP_EMPTY_STRING = Uint8Array.from([0x80])\n\nexport const MAX_WITHDRAWALS_PER_PAYLOAD = 16\n\nexport const RIPEMD160_ADDRESS_STRING = '0000000000000000000000000000000000000003'\n\n/**\n * BigInt constants\n */\n\nexport const BIGINT_NEG1 = BigInt(-1)\n\nexport const BIGINT_0 = BigInt(0)\nexport const BIGINT_1 = BigInt(1)\nexport const BIGINT_2 = BigInt(2)\nexport const BIGINT_3 = BigInt(3)\nexport const BIGINT_7 = BigInt(7)\nexport const BIGINT_8 = BigInt(8)\n\nexport const BIGINT_27 = BigInt(27)\nexport const BIGINT_28 = BigInt(28)\nexport const BIGINT_31 = BigInt(31)\nexport const BIGINT_32 = BigInt(32)\nexport const BIGINT_64 = BigInt(64)\n\nexport const BIGINT_128 = BigInt(128)\nexport const BIGINT_255 = BigInt(255)\nexport const BIGINT_256 = BigInt(256)\n\nexport const BIGINT_96 = BigInt(96)\nexport const BIGINT_100 = BigInt(100)\nexport const BIGINT_160 = BigInt(160)\nexport const BIGINT_224 = BigInt(224)\nexport const BIGINT_2EXP96 = BigInt(79228162514264337593543950336)\nexport const BIGINT_2EXP160 = BigInt(1461501637330902918203684832716283019655932542976)\nexport const BIGINT_2EXP224 =\n  BigInt(26959946667150639794667015087019630673637144422540572481103610249216)\nexport const BIGINT_2EXP256 = BIGINT_2 ** BIGINT_256\n","import { BIGINT_0, BIGINT_1 } from './constants.js'\n/** Easy conversion from Gwei to wei */\nexport const GWEI_TO_WEI = BigInt(1000000000)\n\nexport function formatBigDecimal(\n  numerator: bigint,\n  denominator: bigint,\n  maxDecimalFactor: bigint\n): string {\n  if (denominator === BIGINT_0) {\n    denominator = BIGINT_1\n  }\n\n  const full = numerator / denominator\n  const fraction = ((numerator - full * denominator) * maxDecimalFactor) / denominator\n\n  // zeros to be added post decimal are number of zeros in maxDecimalFactor - number of digits in fraction\n  const zerosPostDecimal = String(maxDecimalFactor).length - 1 - String(fraction).length\n  return `${full}.${'0'.repeat(zerosPostDecimal)}${fraction}`\n}\n","import { RLP } from '@ethereumjs/rlp'\nimport { keccak256 } from 'ethereum-cryptography/keccak.js'\nimport { secp256k1 } from 'ethereum-cryptography/secp256k1.js'\n\nimport {\n  bigIntToUnpaddedBytes,\n  bytesToBigInt,\n  bytesToHex,\n  concatBytes,\n  equalsBytes,\n  hexToBytes,\n  toBytes,\n  utf8ToBytes,\n  zeros,\n} from './bytes.js'\nimport { BIGINT_0, KECCAK256_NULL, KECCAK256_RLP } from './constants.js'\nimport { assertIsBytes, assertIsHexString, assertIsString } from './helpers.js'\nimport { stripHexPrefix } from './internal.js'\n\nimport type { BigIntLike, BytesLike } from './types.js'\n\nexport interface AccountData {\n  nonce?: BigIntLike\n  balance?: BigIntLike\n  storageRoot?: BytesLike\n  codeHash?: BytesLike\n}\n\nexport type AccountBodyBytes = [Uint8Array, Uint8Array, Uint8Array, Uint8Array]\n\nexport class Account {\n  nonce: bigint\n  balance: bigint\n  storageRoot: Uint8Array\n  codeHash: Uint8Array\n\n  static fromAccountData(accountData: AccountData) {\n    const { nonce, balance, storageRoot, codeHash } = accountData\n\n    return new Account(\n      nonce !== undefined ? bytesToBigInt(toBytes(nonce)) : undefined,\n      balance !== undefined ? bytesToBigInt(toBytes(balance)) : undefined,\n      storageRoot !== undefined ? toBytes(storageRoot) : undefined,\n      codeHash !== undefined ? toBytes(codeHash) : undefined\n    )\n  }\n\n  public static fromRlpSerializedAccount(serialized: Uint8Array) {\n    const values = RLP.decode(serialized) as Uint8Array[]\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized account input. Must be array')\n    }\n\n    return this.fromValuesArray(values)\n  }\n\n  public static fromValuesArray(values: Uint8Array[]) {\n    const [nonce, balance, storageRoot, codeHash] = values\n\n    return new Account(bytesToBigInt(nonce), bytesToBigInt(balance), storageRoot, codeHash)\n  }\n\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating an Account from varying data types.\n   */\n  constructor(\n    nonce = BIGINT_0,\n    balance = BIGINT_0,\n    storageRoot = KECCAK256_RLP,\n    codeHash = KECCAK256_NULL\n  ) {\n    this.nonce = nonce\n    this.balance = balance\n    this.storageRoot = storageRoot\n    this.codeHash = codeHash\n\n    this._validate()\n  }\n\n  private _validate() {\n    if (this.nonce < BIGINT_0) {\n      throw new Error('nonce must be greater than zero')\n    }\n    if (this.balance < BIGINT_0) {\n      throw new Error('balance must be greater than zero')\n    }\n    if (this.storageRoot.length !== 32) {\n      throw new Error('storageRoot must have a length of 32')\n    }\n    if (this.codeHash.length !== 32) {\n      throw new Error('codeHash must have a length of 32')\n    }\n  }\n\n  /**\n   * Returns an array of Uint8Arrays of the raw bytes for the account, in order.\n   */\n  raw(): Uint8Array[] {\n    return [\n      bigIntToUnpaddedBytes(this.nonce),\n      bigIntToUnpaddedBytes(this.balance),\n      this.storageRoot,\n      this.codeHash,\n    ]\n  }\n\n  /**\n   * Returns the RLP serialization of the account as a `Uint8Array`.\n   */\n  serialize(): Uint8Array {\n    return RLP.encode(this.raw())\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is a contract.\n   */\n  isContract(): boolean {\n    return !equalsBytes(this.codeHash, KECCAK256_NULL)\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is empty complying to the definition of\n   * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n   * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n   */\n  isEmpty(): boolean {\n    return (\n      this.balance === BIGINT_0 &&\n      this.nonce === BIGINT_0 &&\n      equalsBytes(this.codeHash, KECCAK256_NULL)\n    )\n  }\n}\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexport const isValidAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  return /^0x[0-9a-fA-F]{40}$/.test(hexAddress)\n}\n\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nexport const toChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BigIntLike\n): string {\n  assertIsHexString(hexAddress)\n  const address = stripHexPrefix(hexAddress).toLowerCase()\n\n  let prefix = ''\n  if (eip1191ChainId !== undefined) {\n    const chainId = bytesToBigInt(toBytes(eip1191ChainId))\n    prefix = chainId.toString() + '0x'\n  }\n\n  const bytes = utf8ToBytes(prefix + address)\n  const hash = bytesToHex(keccak256(bytes)).slice(2)\n  let ret = '0x'\n\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexport const isValidChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BigIntLike\n): boolean {\n  return isValidAddress(hexAddress) && toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress\n}\n\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexport const generateAddress = function (from: Uint8Array, nonce: Uint8Array): Uint8Array {\n  assertIsBytes(from)\n  assertIsBytes(nonce)\n\n  if (bytesToBigInt(nonce) === BIGINT_0) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    return keccak256(RLP.encode([from, Uint8Array.from([])])).subarray(-20)\n  }\n\n  // Only take the lower 160bits of the hash\n  return keccak256(RLP.encode([from, nonce])).subarray(-20)\n}\n\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexport const generateAddress2 = function (\n  from: Uint8Array,\n  salt: Uint8Array,\n  initCode: Uint8Array\n): Uint8Array {\n  assertIsBytes(from)\n  assertIsBytes(salt)\n  assertIsBytes(initCode)\n\n  if (from.length !== 20) {\n    throw new Error('Expected from to be of length 20')\n  }\n  if (salt.length !== 32) {\n    throw new Error('Expected salt to be of length 32')\n  }\n\n  const address = keccak256(concatBytes(hexToBytes('0xff'), from, salt, keccak256(initCode)))\n\n  return address.subarray(-20)\n}\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexport const isValidPrivate = function (privateKey: Uint8Array): boolean {\n  return secp256k1.utils.isValidPrivateKey(privateKey)\n}\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const isValidPublic = function (publicKey: Uint8Array, sanitize: boolean = false): boolean {\n  assertIsBytes(publicKey)\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    // Automatically checks whether point is on curve\n    try {\n      secp256k1.ProjectivePoint.fromHex(concatBytes(Uint8Array.from([4]), publicKey))\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n\n  if (!sanitize) {\n    return false\n  }\n\n  try {\n    secp256k1.ProjectivePoint.fromHex(publicKey)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const pubToAddress = function (pubKey: Uint8Array, sanitize: boolean = false): Uint8Array {\n  assertIsBytes(pubKey)\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = secp256k1.ProjectivePoint.fromHex(pubKey).toRawBytes(false).slice(1)\n  }\n  if (pubKey.length !== 64) {\n    throw new Error('Expected pubKey to be of length 64')\n  }\n  // Only take the lower 160bits of the hash\n  return keccak256(pubKey).subarray(-20)\n}\nexport const publicToAddress = pubToAddress\n\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToPublic = function (privateKey: Uint8Array): Uint8Array {\n  assertIsBytes(privateKey)\n  // skip the type flag and use the X, Y points\n  return secp256k1.ProjectivePoint.fromPrivateKey(privateKey).toRawBytes(false).slice(1)\n}\n\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToAddress = function (privateKey: Uint8Array): Uint8Array {\n  return publicToAddress(privateToPublic(privateKey))\n}\n\n/**\n * Converts a public key to the Ethereum format.\n */\nexport const importPublic = function (publicKey: Uint8Array): Uint8Array {\n  assertIsBytes(publicKey)\n  if (publicKey.length !== 64) {\n    publicKey = secp256k1.ProjectivePoint.fromHex(publicKey).toRawBytes(false).slice(1)\n  }\n  return publicKey\n}\n\n/**\n * Returns the zero address.\n */\nexport const zeroAddress = function (): string {\n  const addressLength = 20\n  const addr = zeros(addressLength)\n  return bytesToHex(addr)\n}\n\n/**\n * Checks if a given address is the zero address.\n */\nexport const isZeroAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  const zeroAddr = zeroAddress()\n  return zeroAddr === hexAddress\n}\n\nexport function accountBodyFromSlim(body: AccountBodyBytes) {\n  const [nonce, balance, storageRoot, codeHash] = body\n  return [\n    nonce,\n    balance,\n    storageRoot.length === 0 ? KECCAK256_RLP : storageRoot,\n    codeHash.length === 0 ? KECCAK256_NULL : codeHash,\n  ]\n}\n\nconst emptyUint8Arr = new Uint8Array(0)\nexport function accountBodyToSlim(body: AccountBodyBytes) {\n  const [nonce, balance, storageRoot, codeHash] = body\n  return [\n    nonce,\n    balance,\n    equalsBytes(storageRoot, KECCAK256_RLP) ? emptyUint8Arr : storageRoot,\n    equalsBytes(codeHash, KECCAK256_NULL) ? emptyUint8Arr : codeHash,\n  ]\n}\n\n/**\n * Converts a slim account (per snap protocol spec) to the RLP encoded version of the account\n * @param body Array of 4 Uint8Array-like items to represent the account\n * @returns RLP encoded version of the account\n */\nexport function accountBodyToRLP(body: AccountBodyBytes, couldBeSlim = true) {\n  const accountBody = couldBeSlim ? accountBodyFromSlim(body) : body\n  return RLP.encode(accountBody)\n}\n","import {\n  generateAddress,\n  generateAddress2,\n  isValidAddress,\n  privateToAddress,\n  pubToAddress,\n} from './account.js'\nimport { bigIntToBytes, bytesToBigInt, bytesToHex, equalsBytes, toBytes, zeros } from './bytes.js'\nimport { BIGINT_0 } from './constants.js'\n\n/**\n * Handling and generating Ethereum addresses\n */\nexport class Address {\n  public readonly bytes: Uint8Array\n\n  constructor(bytes: Uint8Array) {\n    if (bytes.length !== 20) {\n      throw new Error('Invalid address length')\n    }\n    this.bytes = bytes\n  }\n\n  /**\n   * Returns the zero address.\n   */\n  static zero(): Address {\n    return new Address(zeros(20))\n  }\n\n  /**\n   * Returns an Address object from a hex-encoded string.\n   * @param str - Hex-encoded address\n   */\n  static fromString(str: string): Address {\n    if (!isValidAddress(str)) {\n      throw new Error('Invalid address')\n    }\n    return new Address(toBytes(str))\n  }\n\n  /**\n   * Returns an address for a given public key.\n   * @param pubKey The two points of an uncompressed key\n   */\n  static fromPublicKey(pubKey: Uint8Array): Address {\n    if (!(pubKey instanceof Uint8Array)) {\n      throw new Error('Public key should be Uint8Array')\n    }\n    const bytes = pubToAddress(pubKey)\n    return new Address(bytes)\n  }\n\n  /**\n   * Returns an address for a given private key.\n   * @param privateKey A private key must be 256 bits wide\n   */\n  static fromPrivateKey(privateKey: Uint8Array): Address {\n    if (!(privateKey instanceof Uint8Array)) {\n      throw new Error('Private key should be Uint8Array')\n    }\n    const bytes = privateToAddress(privateKey)\n    return new Address(bytes)\n  }\n\n  /**\n   * Generates an address for a newly created contract.\n   * @param from The address which is creating this new address\n   * @param nonce The nonce of the from account\n   */\n  static generate(from: Address, nonce: bigint): Address {\n    if (typeof nonce !== 'bigint') {\n      throw new Error('Expected nonce to be a bigint')\n    }\n    return new Address(generateAddress(from.bytes, bigIntToBytes(nonce)))\n  }\n\n  /**\n   * Generates an address for a contract created using CREATE2.\n   * @param from The address which is creating this new address\n   * @param salt A salt\n   * @param initCode The init code of the contract being created\n   */\n  static generate2(from: Address, salt: Uint8Array, initCode: Uint8Array): Address {\n    if (!(salt instanceof Uint8Array)) {\n      throw new Error('Expected salt to be a Uint8Array')\n    }\n    if (!(initCode instanceof Uint8Array)) {\n      throw new Error('Expected initCode to be a Uint8Array')\n    }\n    return new Address(generateAddress2(from.bytes, salt, initCode))\n  }\n\n  /**\n   * Is address equal to another.\n   */\n  equals(address: Address): boolean {\n    return equalsBytes(this.bytes, address.bytes)\n  }\n\n  /**\n   * Is address zero.\n   */\n  isZero(): boolean {\n    return this.equals(Address.zero())\n  }\n\n  /**\n   * True if address is in the address range defined\n   * by EIP-1352\n   */\n  isPrecompileOrSystemAddress(): boolean {\n    const address = bytesToBigInt(this.bytes)\n    const rangeMin = BIGINT_0\n    const rangeMax = BigInt('0xffff')\n    return address >= rangeMin && address <= rangeMax\n  }\n\n  /**\n   * Returns hex encoding of address.\n   */\n  toString(): string {\n    return bytesToHex(this.bytes)\n  }\n\n  /**\n   * Returns a new Uint8Array representation of address.\n   */\n  toBytes(): Uint8Array {\n    return new Uint8Array(this.bytes)\n  }\n}\n","export type DBObject = {\n  [key: string]: string | string[] | number\n}\nexport type BatchDBOp<\n  TKey extends Uint8Array | string | number = Uint8Array,\n  TValue extends Uint8Array | string | DBObject = Uint8Array\n> = PutBatch<TKey, TValue> | DelBatch<TKey>\n\nexport enum KeyEncoding {\n  String = 'string',\n  Bytes = 'view',\n  Number = 'number',\n}\n\nexport enum ValueEncoding {\n  String = 'string',\n  Bytes = 'view',\n  JSON = 'json',\n}\n\nexport type EncodingOpts = {\n  keyEncoding?: KeyEncoding\n  valueEncoding?: ValueEncoding\n}\nexport interface PutBatch<\n  TKey extends Uint8Array | string | number = Uint8Array,\n  TValue extends Uint8Array | string | DBObject = Uint8Array\n> {\n  type: 'put'\n  key: TKey\n  value: TValue\n  opts?: EncodingOpts\n}\n\nexport interface DelBatch<TKey extends Uint8Array | string | number = Uint8Array> {\n  type: 'del'\n  key: TKey\n  opts?: EncodingOpts\n}\n\nexport interface DB<\n  TKey extends Uint8Array | string | number = Uint8Array,\n  TValue extends Uint8Array | string | DBObject = Uint8Array\n> {\n  /**\n   * Retrieves a raw value from db.\n   * @param key\n   * @returns A Promise that resolves to `Uint8Array` if a value is found or `undefined` if no value is found.\n   */\n  get(key: TKey, opts?: EncodingOpts): Promise<TValue | undefined>\n\n  /**\n   * Writes a value directly to db.\n   * @param key The key as a `TValue`\n   * @param value The value to be stored\n   */\n  put(key: TKey, val: TValue, opts?: EncodingOpts): Promise<void>\n\n  /**\n   * Removes a raw value in the underlying db.\n   * @param keys\n   */\n  del(key: TKey, opts?: EncodingOpts): Promise<void>\n\n  /**\n   * Performs a batch operation on db.\n   * @param opStack A stack of levelup operations\n   */\n  batch(opStack: BatchDBOp<TKey, TValue>[]): Promise<void>\n\n  /**\n   * Returns a copy of the DB instance, with a reference\n   * to the **same** underlying db instance.\n   */\n  shallowCopy(): DB<TKey, TValue>\n\n  /**\n   * Opens the database -- if applicable\n   */\n  open(): Promise<void>\n  // TODO - decide if we actually need open/close - it's not required for maps and Level automatically opens the DB when you instantiate it\n}\n","import { bytesToBigInt, bytesToHex, toBytes } from './bytes.js'\nimport { isHexString } from './internal.js'\n\nimport type { Address } from './address.js'\nimport type { ToBytesInputTypes } from './bytes.js'\n\n/*\n * A type that represents an input that can be converted to a BigInt.\n */\nexport type BigIntLike = bigint | PrefixedHexString | number | Uint8Array\n\n/*\n * A type that represents an input that can be converted to a Uint8Array.\n */\nexport type BytesLike =\n  | Uint8Array\n  | number[]\n  | number\n  | bigint\n  | TransformabletoBytes\n  | PrefixedHexString\n\n/*\n * A type that represents a `0x`-prefixed hex string.\n */\nexport type PrefixedHexString = string\n\n/**\n * A type that represents an input that can be converted to an Address.\n */\nexport type AddressLike = Address | Uint8Array | PrefixedHexString\n\nexport interface TransformabletoBytes {\n  toBytes?(): Uint8Array\n}\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\n\n/**\n * Type output options\n */\nexport enum TypeOutput {\n  Number,\n  BigInt,\n  Uint8Array,\n  PrefixedHexString,\n}\n\nexport type TypeOutputReturnType = {\n  [TypeOutput.Number]: number\n  [TypeOutput.BigInt]: bigint\n  [TypeOutput.Uint8Array]: Uint8Array\n  [TypeOutput.PrefixedHexString]: PrefixedHexString\n}\n\n/**\n * Convert an input to a specified type.\n * Input of null/undefined returns null/undefined regardless of the output type.\n * @param input value to convert\n * @param outputType type to output\n */\nexport function toType<T extends TypeOutput>(input: null, outputType: T): null\nexport function toType<T extends TypeOutput>(input: undefined, outputType: T): undefined\nexport function toType<T extends TypeOutput>(\n  input: ToBytesInputTypes,\n  outputType: T\n): TypeOutputReturnType[T]\nexport function toType<T extends TypeOutput>(\n  input: ToBytesInputTypes,\n  outputType: T\n): TypeOutputReturnType[T] | undefined | null {\n  if (input === null) {\n    return null\n  }\n  if (input === undefined) {\n    return undefined\n  }\n\n  if (typeof input === 'string' && !isHexString(input)) {\n    throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`)\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error(\n      'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n    )\n  }\n\n  const output = toBytes(input)\n\n  switch (outputType) {\n    case TypeOutput.Uint8Array:\n      return output as TypeOutputReturnType[T]\n    case TypeOutput.BigInt:\n      return bytesToBigInt(output) as TypeOutputReturnType[T]\n    case TypeOutput.Number: {\n      const bigInt = bytesToBigInt(output)\n      if (bigInt > BigInt(Number.MAX_SAFE_INTEGER)) {\n        throw new Error(\n          'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)'\n        )\n      }\n      return Number(bigInt) as TypeOutputReturnType[T]\n    }\n    case TypeOutput.PrefixedHexString:\n      return bytesToHex(output) as TypeOutputReturnType[T]\n    default:\n      throw new Error('unknown outputType')\n  }\n}\n","import { keccak256 } from 'ethereum-cryptography/keccak.js'\nimport { secp256k1 } from 'ethereum-cryptography/secp256k1.js'\n\nimport {\n  bytesToBigInt,\n  bytesToHex,\n  bytesToInt,\n  concatBytes,\n  setLengthLeft,\n  toBytes,\n  utf8ToBytes,\n} from './bytes.js'\nimport {\n  BIGINT_0,\n  BIGINT_1,\n  BIGINT_2,\n  BIGINT_27,\n  SECP256K1_ORDER,\n  SECP256K1_ORDER_DIV_2,\n} from './constants.js'\nimport { assertIsBytes } from './helpers.js'\n\nexport interface ECDSASignature {\n  v: bigint\n  r: Uint8Array\n  s: Uint8Array\n}\n\n/**\n * Returns the ECDSA signature of a message hash.\n *\n * If `chainId` is provided assume an EIP-155-style signature and calculate the `v` value\n * accordingly, otherwise return a \"static\" `v` just derived from the `recovery` bit\n */\nexport function ecsign(\n  msgHash: Uint8Array,\n  privateKey: Uint8Array,\n  chainId?: bigint\n): ECDSASignature {\n  const sig = secp256k1.sign(msgHash, privateKey)\n  const buf = sig.toCompactRawBytes()\n  const r = buf.slice(0, 32)\n  const s = buf.slice(32, 64)\n\n  const v =\n    chainId === undefined\n      ? BigInt(sig.recovery! + 27)\n      : BigInt(sig.recovery! + 35) + BigInt(chainId) * BIGINT_2\n\n  return { r, s, v }\n}\n\nfunction calculateSigRecovery(v: bigint, chainId?: bigint): bigint {\n  if (v === BIGINT_0 || v === BIGINT_1) return v\n\n  if (chainId === undefined) {\n    return v - BIGINT_27\n  }\n  return v - (chainId * BIGINT_2 + BigInt(35))\n}\n\nfunction isValidSigRecovery(recovery: bigint): boolean {\n  return recovery === BIGINT_0 || recovery === BIGINT_1\n}\n\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nexport const ecrecover = function (\n  msgHash: Uint8Array,\n  v: bigint,\n  r: Uint8Array,\n  s: Uint8Array,\n  chainId?: bigint\n): Uint8Array {\n  const signature = concatBytes(setLengthLeft(r, 32), setLengthLeft(s, 32))\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  const sig = secp256k1.Signature.fromCompact(signature).addRecoveryBit(Number(recovery))\n  const senderPubKey = sig.recoverPublicKey(msgHash)\n  return senderPubKey.toRawBytes(false).slice(1)\n}\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toRpcSig = function (\n  v: bigint,\n  r: Uint8Array,\n  s: Uint8Array,\n  chainId?: bigint\n): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n\n  return bytesToHex(concatBytes(setLengthLeft(r, 32), setLengthLeft(s, 32), toBytes(v)))\n}\n\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toCompactSig = function (\n  v: bigint,\n  r: Uint8Array,\n  s: Uint8Array,\n  chainId?: bigint\n): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  const ss = Uint8Array.from([...s])\n  if ((v > BigInt(28) && v % BIGINT_2 === BIGINT_1) || v === BIGINT_1 || v === BigInt(28)) {\n    ss[0] |= 0x80\n  }\n\n  return bytesToHex(concatBytes(setLengthLeft(r, 32), setLengthLeft(ss, 32)))\n}\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n *\n * NOTE: For an extracted `v` value < 27 (see Geth bug https://github.com/ethereum/go-ethereum/issues/2053)\n * `v + 27` is returned for the `v` value\n * NOTE: After EIP1559, `v` could be `0` or `1` but this function assumes\n * it's a signed message (EIP-191 or EIP-712) adding `27` at the end. Remove if needed.\n */\nexport const fromRpcSig = function (sig: string): ECDSASignature {\n  const bytes: Uint8Array = toBytes(sig)\n\n  let r: Uint8Array\n  let s: Uint8Array\n  let v: bigint\n  if (bytes.length >= 65) {\n    r = bytes.subarray(0, 32)\n    s = bytes.subarray(32, 64)\n    v = bytesToBigInt(bytes.subarray(64))\n  } else if (bytes.length === 64) {\n    // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n    r = bytes.subarray(0, 32)\n    s = bytes.subarray(32, 64)\n    v = BigInt(bytesToInt(bytes.subarray(32, 33)) >> 7)\n    s[0] &= 0x7f\n  } else {\n    throw new Error('Invalid signature length')\n  }\n\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v = v + BIGINT_27\n  }\n\n  return {\n    v,\n    r,\n    s,\n  }\n}\n\n/**\n * Validate a ECDSA signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexport const isValidSignature = function (\n  v: bigint,\n  r: Uint8Array,\n  s: Uint8Array,\n  homesteadOrLater: boolean = true,\n  chainId?: bigint\n): boolean {\n  if (r.length !== 32 || s.length !== 32) {\n    return false\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false\n  }\n\n  const rBigInt = bytesToBigInt(r)\n  const sBigInt = bytesToBigInt(s)\n\n  if (\n    rBigInt === BIGINT_0 ||\n    rBigInt >= SECP256K1_ORDER ||\n    sBigInt === BIGINT_0 ||\n    sBigInt >= SECP256K1_ORDER\n  ) {\n    return false\n  }\n\n  if (homesteadOrLater && sBigInt >= SECP256K1_ORDER_DIV_2) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexport const hashPersonalMessage = function (message: Uint8Array): Uint8Array {\n  assertIsBytes(message)\n  const prefix = utf8ToBytes(`\\u0019Ethereum Signed Message:\\n${message.length}`)\n  return keccak256(concatBytes(prefix, message))\n}\n","/**\n * Interface for an externally provided kzg library used when creating blob transactions\n */\nexport interface Kzg {\n  loadTrustedSetup(filePath: string): void\n  blobToKzgCommitment(blob: Uint8Array): Uint8Array\n  computeBlobKzgProof(blob: Uint8Array, commitment: Uint8Array): Uint8Array\n  verifyKzgProof(\n    polynomialKzg: Uint8Array,\n    z: Uint8Array,\n    y: Uint8Array,\n    kzgProof: Uint8Array\n  ): boolean\n  verifyBlobKzgProofBatch(\n    blobs: Uint8Array[],\n    expectedKzgCommitments: Uint8Array[],\n    kzgProofs: Uint8Array[]\n  ): boolean\n}\n\nfunction kzgNotLoaded(): never {\n  throw Error('kzg library not loaded')\n}\n\n// eslint-disable-next-line import/no-mutable-exports\nexport let kzg: Kzg = {\n  loadTrustedSetup: kzgNotLoaded,\n  blobToKzgCommitment: kzgNotLoaded,\n  computeBlobKzgProof: kzgNotLoaded,\n  verifyKzgProof: kzgNotLoaded,\n  verifyBlobKzgProofBatch: kzgNotLoaded,\n}\n\n/**\n * @param kzgLib a KZG implementation (defaults to c-kzg)\n * @param trustedSetupPath the full path (e.g. \"/home/linux/devnet4.txt\") to a kzg trusted setup text file\n */\nexport function initKZG(kzgLib: Kzg, trustedSetupPath: string) {\n  kzg = kzgLib\n  kzg.loadTrustedSetup(trustedSetupPath)\n}\n","import { sha256 } from 'ethereum-cryptography/sha256.js'\n\nimport { utf8ToBytes } from './bytes.js'\nimport { kzg } from './kzg.js'\n\n/**\n * These utilities for constructing blobs are borrowed from https://github.com/Inphi/eip4844-interop.git\n */\nconst BYTES_PER_FIELD_ELEMENT = 32\nconst FIELD_ELEMENTS_PER_BLOB = 4096\nconst USEFUL_BYTES_PER_BLOB = 32 * FIELD_ELEMENTS_PER_BLOB\nconst MAX_BLOBS_PER_TX = 2\nconst MAX_USEFUL_BYTES_PER_TX = USEFUL_BYTES_PER_BLOB * MAX_BLOBS_PER_TX - 1\nconst BLOB_SIZE = BYTES_PER_FIELD_ELEMENT * FIELD_ELEMENTS_PER_BLOB\n\nfunction get_padded(data: Uint8Array, blobs_len: number): Uint8Array {\n  const pdata = new Uint8Array(blobs_len * USEFUL_BYTES_PER_BLOB).fill(0)\n  pdata.set(data)\n  pdata[data.byteLength] = 0x80\n  return pdata\n}\n\nfunction get_blob(data: Uint8Array): Uint8Array {\n  const blob = new Uint8Array(BLOB_SIZE)\n  for (let i = 0; i < FIELD_ELEMENTS_PER_BLOB; i++) {\n    const chunk = new Uint8Array(32)\n    chunk.set(data.subarray(i * 31, (i + 1) * 31), 0)\n    blob.set(chunk, i * 32)\n  }\n\n  return blob\n}\n\nexport const getBlobs = (input: string) => {\n  const data = utf8ToBytes(input)\n  const len = data.byteLength\n  if (len === 0) {\n    throw Error('invalid blob data')\n  }\n  if (len > MAX_USEFUL_BYTES_PER_TX) {\n    throw Error('blob data is too large')\n  }\n\n  const blobs_len = Math.ceil(len / USEFUL_BYTES_PER_BLOB)\n\n  const pdata = get_padded(data, blobs_len)\n\n  const blobs: Uint8Array[] = []\n  for (let i = 0; i < blobs_len; i++) {\n    const chunk = pdata.subarray(i * USEFUL_BYTES_PER_BLOB, (i + 1) * USEFUL_BYTES_PER_BLOB)\n    const blob = get_blob(chunk)\n    blobs.push(blob)\n  }\n\n  return blobs\n}\n\nexport const blobsToCommitments = (blobs: Uint8Array[]) => {\n  const commitments: Uint8Array[] = []\n  for (const blob of blobs) {\n    commitments.push(kzg.blobToKzgCommitment(blob))\n  }\n  return commitments\n}\n\nexport const blobsToProofs = (blobs: Uint8Array[], commitments: Uint8Array[]) => {\n  const proofs = blobs.map((blob, ctx) => kzg.computeBlobKzgProof(blob, commitments[ctx]))\n\n  return proofs\n}\n\n/**\n * Converts a vector commitment for a given data blob to its versioned hash.  For 4844, this version\n * number will be 0x01 for KZG vector commitments but could be different if future vector commitment\n * types are introduced\n * @param commitment a vector commitment to a blob\n * @param blobCommitmentVersion the version number corresponding to the type of vector commitment\n * @returns a versioned hash corresponding to a given blob vector commitment\n */\nexport const computeVersionedHash = (commitment: Uint8Array, blobCommitmentVersion: number) => {\n  const computedVersionedHash = new Uint8Array(32)\n  computedVersionedHash.set([blobCommitmentVersion], 0)\n  computedVersionedHash.set(sha256(commitment).subarray(1), 1)\n  return computedVersionedHash\n}\n\n/**\n * Generate an array of versioned hashes from corresponding kzg commitments\n * @param commitments array of kzg commitments\n * @returns array of versioned hashes\n * Note: assumes KZG commitments (version 1 version hashes)\n */\nexport const commitmentsToVersionedHashes = (commitments: Uint8Array[]) => {\n  const hashes: Uint8Array[] = []\n  for (const commitment of commitments) {\n    hashes.push(computeVersionedHash(commitment, 0x01))\n  }\n  return hashes\n}\n","type rpcParams = {\n  method: string\n  params: (string | boolean | number)[]\n}\n\n/**\n * Makes a simple RPC call to a remote Ethereum JSON-RPC provider and passes through the response.\n * No parameter or response validation is done.\n *\n * @param url the URL for the JSON RPC provider\n * @param params the parameters for the JSON-RPC method - refer to\n * https://ethereum.org/en/developers/docs/apis/json-rpc/ for details on RPC methods\n * @returns the `result` field from the JSON-RPC response\n */\nexport const fetchFromProvider = async (url: string, params: rpcParams) => {\n  const data = JSON.stringify({\n    method: params.method,\n    params: params.params,\n    jsonrpc: '2.0',\n    id: 1,\n  })\n\n  const res = await fetch(url, {\n    headers: {\n      'content-type': 'application/json',\n    },\n    method: 'POST',\n    body: data,\n  })\n  const json = await res.json()\n  return json.result\n}\n\n/**\n *\n * @param provider a URL string or {@link EthersProvider}\n * @returns the extracted URL string for the JSON-RPC Provider\n */\nexport const getProvider = (provider: string | EthersProvider) => {\n  if (typeof provider === 'string') {\n    return provider\n  } else if (typeof provider === 'object' && provider._getConnection !== undefined) {\n    return provider._getConnection().url\n  } else {\n    throw new Error('Must provide valid provider URL or Web3Provider')\n  }\n}\n\n/**\n * A partial interface for an `ethers` `JsonRpcProvider`\n * We only use the url string since we do raw `fetch` calls to\n * retrieve the necessary data\n */\nexport interface EthersProvider {\n  _getConnection: () => {\n    url: string\n  }\n}\n","const crc1 = (current, previous = 0) => {\n    let crc = ~~previous;\n    let accum = 0;\n    for (let index = 0; index < current.length; index++) {\n        accum += current[index];\n    }\n    crc += accum % 256;\n    return crc % 256;\n};\nexport default crc1;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-prototype-builtins */\nimport { Buffer } from 'buffer';\nconst createBuffer = (value, encoding) => Buffer.from(value, encoding);\nexport default createBuffer;\n","import createBuffer from './create_buffer.js';\nexport default function defineCrc(model, calculator) {\n    const result = (value, previous) => calculator(createBuffer(value), previous) >>> 0;\n    result.signed = (value, previous) => calculator(createBuffer(value), previous);\n    result.unsigned = result;\n    result.model = model;\n    return result;\n}\n","import crc1 from './calculators/crc1.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc1', crc1);\n","// Generated by `./pycrc.py --algorithm=table-driven --model=crc-8 --generate=c`\nlet TABLE = [\n    0x00, 0x07, 0x0e, 0x09, 0x1c, 0x1b, 0x12, 0x15, 0x38, 0x3f, 0x36, 0x31, 0x24, 0x23, 0x2a, 0x2d,\n    0x70, 0x77, 0x7e, 0x79, 0x6c, 0x6b, 0x62, 0x65, 0x48, 0x4f, 0x46, 0x41, 0x54, 0x53, 0x5a, 0x5d,\n    0xe0, 0xe7, 0xee, 0xe9, 0xfc, 0xfb, 0xf2, 0xf5, 0xd8, 0xdf, 0xd6, 0xd1, 0xc4, 0xc3, 0xca, 0xcd,\n    0x90, 0x97, 0x9e, 0x99, 0x8c, 0x8b, 0x82, 0x85, 0xa8, 0xaf, 0xa6, 0xa1, 0xb4, 0xb3, 0xba, 0xbd,\n    0xc7, 0xc0, 0xc9, 0xce, 0xdb, 0xdc, 0xd5, 0xd2, 0xff, 0xf8, 0xf1, 0xf6, 0xe3, 0xe4, 0xed, 0xea,\n    0xb7, 0xb0, 0xb9, 0xbe, 0xab, 0xac, 0xa5, 0xa2, 0x8f, 0x88, 0x81, 0x86, 0x93, 0x94, 0x9d, 0x9a,\n    0x27, 0x20, 0x29, 0x2e, 0x3b, 0x3c, 0x35, 0x32, 0x1f, 0x18, 0x11, 0x16, 0x03, 0x04, 0x0d, 0x0a,\n    0x57, 0x50, 0x59, 0x5e, 0x4b, 0x4c, 0x45, 0x42, 0x6f, 0x68, 0x61, 0x66, 0x73, 0x74, 0x7d, 0x7a,\n    0x89, 0x8e, 0x87, 0x80, 0x95, 0x92, 0x9b, 0x9c, 0xb1, 0xb6, 0xbf, 0xb8, 0xad, 0xaa, 0xa3, 0xa4,\n    0xf9, 0xfe, 0xf7, 0xf0, 0xe5, 0xe2, 0xeb, 0xec, 0xc1, 0xc6, 0xcf, 0xc8, 0xdd, 0xda, 0xd3, 0xd4,\n    0x69, 0x6e, 0x67, 0x60, 0x75, 0x72, 0x7b, 0x7c, 0x51, 0x56, 0x5f, 0x58, 0x4d, 0x4a, 0x43, 0x44,\n    0x19, 0x1e, 0x17, 0x10, 0x05, 0x02, 0x0b, 0x0c, 0x21, 0x26, 0x2f, 0x28, 0x3d, 0x3a, 0x33, 0x34,\n    0x4e, 0x49, 0x40, 0x47, 0x52, 0x55, 0x5c, 0x5b, 0x76, 0x71, 0x78, 0x7f, 0x6a, 0x6d, 0x64, 0x63,\n    0x3e, 0x39, 0x30, 0x37, 0x22, 0x25, 0x2c, 0x2b, 0x06, 0x01, 0x08, 0x0f, 0x1a, 0x1d, 0x14, 0x13,\n    0xae, 0xa9, 0xa0, 0xa7, 0xb2, 0xb5, 0xbc, 0xbb, 0x96, 0x91, 0x98, 0x9f, 0x8a, 0x8d, 0x84, 0x83,\n    0xde, 0xd9, 0xd0, 0xd7, 0xc2, 0xc5, 0xcc, 0xcb, 0xe6, 0xe1, 0xe8, 0xef, 0xfa, 0xfd, 0xf4, 0xf3,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc8 = (current, previous = 0) => {\n    let crc = ~~previous;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[(crc ^ current[index]) & 0xff] & 0xff;\n    }\n    return crc;\n};\nexport default crc8;\n","import crc8 from './calculators/crc8.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-8', crc8);\n","// Generated by `./pycrc.py --algorithm=table-driven --model=dallas-1-wire --generate=c`\nlet TABLE = [\n    0x00, 0x5e, 0xbc, 0xe2, 0x61, 0x3f, 0xdd, 0x83, 0xc2, 0x9c, 0x7e, 0x20, 0xa3, 0xfd, 0x1f, 0x41,\n    0x9d, 0xc3, 0x21, 0x7f, 0xfc, 0xa2, 0x40, 0x1e, 0x5f, 0x01, 0xe3, 0xbd, 0x3e, 0x60, 0x82, 0xdc,\n    0x23, 0x7d, 0x9f, 0xc1, 0x42, 0x1c, 0xfe, 0xa0, 0xe1, 0xbf, 0x5d, 0x03, 0x80, 0xde, 0x3c, 0x62,\n    0xbe, 0xe0, 0x02, 0x5c, 0xdf, 0x81, 0x63, 0x3d, 0x7c, 0x22, 0xc0, 0x9e, 0x1d, 0x43, 0xa1, 0xff,\n    0x46, 0x18, 0xfa, 0xa4, 0x27, 0x79, 0x9b, 0xc5, 0x84, 0xda, 0x38, 0x66, 0xe5, 0xbb, 0x59, 0x07,\n    0xdb, 0x85, 0x67, 0x39, 0xba, 0xe4, 0x06, 0x58, 0x19, 0x47, 0xa5, 0xfb, 0x78, 0x26, 0xc4, 0x9a,\n    0x65, 0x3b, 0xd9, 0x87, 0x04, 0x5a, 0xb8, 0xe6, 0xa7, 0xf9, 0x1b, 0x45, 0xc6, 0x98, 0x7a, 0x24,\n    0xf8, 0xa6, 0x44, 0x1a, 0x99, 0xc7, 0x25, 0x7b, 0x3a, 0x64, 0x86, 0xd8, 0x5b, 0x05, 0xe7, 0xb9,\n    0x8c, 0xd2, 0x30, 0x6e, 0xed, 0xb3, 0x51, 0x0f, 0x4e, 0x10, 0xf2, 0xac, 0x2f, 0x71, 0x93, 0xcd,\n    0x11, 0x4f, 0xad, 0xf3, 0x70, 0x2e, 0xcc, 0x92, 0xd3, 0x8d, 0x6f, 0x31, 0xb2, 0xec, 0x0e, 0x50,\n    0xaf, 0xf1, 0x13, 0x4d, 0xce, 0x90, 0x72, 0x2c, 0x6d, 0x33, 0xd1, 0x8f, 0x0c, 0x52, 0xb0, 0xee,\n    0x32, 0x6c, 0x8e, 0xd0, 0x53, 0x0d, 0xef, 0xb1, 0xf0, 0xae, 0x4c, 0x12, 0x91, 0xcf, 0x2d, 0x73,\n    0xca, 0x94, 0x76, 0x28, 0xab, 0xf5, 0x17, 0x49, 0x08, 0x56, 0xb4, 0xea, 0x69, 0x37, 0xd5, 0x8b,\n    0x57, 0x09, 0xeb, 0xb5, 0x36, 0x68, 0x8a, 0xd4, 0x95, 0xcb, 0x29, 0x77, 0xf4, 0xaa, 0x48, 0x16,\n    0xe9, 0xb7, 0x55, 0x0b, 0x88, 0xd6, 0x34, 0x6a, 0x2b, 0x75, 0x97, 0xc9, 0x4a, 0x14, 0xf6, 0xa8,\n    0x74, 0x2a, 0xc8, 0x96, 0x15, 0x4b, 0xa9, 0xf7, 0xb6, 0xe8, 0x0a, 0x54, 0xd7, 0x89, 0x6b, 0x35,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc81wire = (current, previous = 0) => {\n    let crc = ~~previous;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[(crc ^ current[index]) & 0xff] & 0xff;\n    }\n    return crc;\n};\nexport default crc81wire;\n","import crc81wire from './calculators/crc81wire.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('dallas-1-wire', crc81wire);\n","// Generated by `./pycrc.py --algorithm=table-driven --generate=c --width=8 --poly=0xd5 --reflect-in=false --reflect-out=false --xor-in=0xff --xor-out=0x00`\nlet TABLE = [\n    0x00, 0xd5, 0x7f, 0xaa, 0xfe, 0x2b, 0x81, 0x54, 0x29, 0xfc, 0x56, 0x83, 0xd7, 0x02, 0xa8, 0x7d,\n    0x52, 0x87, 0x2d, 0xf8, 0xac, 0x79, 0xd3, 0x06, 0x7b, 0xae, 0x04, 0xd1, 0x85, 0x50, 0xfa, 0x2f,\n    0xa4, 0x71, 0xdb, 0x0e, 0x5a, 0x8f, 0x25, 0xf0, 0x8d, 0x58, 0xf2, 0x27, 0x73, 0xa6, 0x0c, 0xd9,\n    0xf6, 0x23, 0x89, 0x5c, 0x08, 0xdd, 0x77, 0xa2, 0xdf, 0x0a, 0xa0, 0x75, 0x21, 0xf4, 0x5e, 0x8b,\n    0x9d, 0x48, 0xe2, 0x37, 0x63, 0xb6, 0x1c, 0xc9, 0xb4, 0x61, 0xcb, 0x1e, 0x4a, 0x9f, 0x35, 0xe0,\n    0xcf, 0x1a, 0xb0, 0x65, 0x31, 0xe4, 0x4e, 0x9b, 0xe6, 0x33, 0x99, 0x4c, 0x18, 0xcd, 0x67, 0xb2,\n    0x39, 0xec, 0x46, 0x93, 0xc7, 0x12, 0xb8, 0x6d, 0x10, 0xc5, 0x6f, 0xba, 0xee, 0x3b, 0x91, 0x44,\n    0x6b, 0xbe, 0x14, 0xc1, 0x95, 0x40, 0xea, 0x3f, 0x42, 0x97, 0x3d, 0xe8, 0xbc, 0x69, 0xc3, 0x16,\n    0xef, 0x3a, 0x90, 0x45, 0x11, 0xc4, 0x6e, 0xbb, 0xc6, 0x13, 0xb9, 0x6c, 0x38, 0xed, 0x47, 0x92,\n    0xbd, 0x68, 0xc2, 0x17, 0x43, 0x96, 0x3c, 0xe9, 0x94, 0x41, 0xeb, 0x3e, 0x6a, 0xbf, 0x15, 0xc0,\n    0x4b, 0x9e, 0x34, 0xe1, 0xb5, 0x60, 0xca, 0x1f, 0x62, 0xb7, 0x1d, 0xc8, 0x9c, 0x49, 0xe3, 0x36,\n    0x19, 0xcc, 0x66, 0xb3, 0xe7, 0x32, 0x98, 0x4d, 0x30, 0xe5, 0x4f, 0x9a, 0xce, 0x1b, 0xb1, 0x64,\n    0x72, 0xa7, 0x0d, 0xd8, 0x8c, 0x59, 0xf3, 0x26, 0x5b, 0x8e, 0x24, 0xf1, 0xa5, 0x70, 0xda, 0x0f,\n    0x20, 0xf5, 0x5f, 0x8a, 0xde, 0x0b, 0xa1, 0x74, 0x09, 0xdc, 0x76, 0xa3, 0xf7, 0x22, 0x88, 0x5d,\n    0xd6, 0x03, 0xa9, 0x7c, 0x28, 0xfd, 0x57, 0x82, 0xff, 0x2a, 0x80, 0x55, 0x01, 0xd4, 0x7e, 0xab,\n    0x84, 0x51, 0xfb, 0x2e, 0x7a, 0xaf, 0x05, 0xd0, 0xad, 0x78, 0xd2, 0x07, 0x53, 0x86, 0x2c, 0xf9,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc8dvbs2 = (current, previous = 0) => {\n    let crc = ~~previous;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[(crc ^ current[index]) & 0xff] & 0xff;\n    }\n    return crc;\n};\nexport default crc8dvbs2;\n","import crc8dvbs2 from './calculators/crc8dvbs2.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-8-dvbs2', crc8dvbs2);\n","// Generated by `./pycrc.py --algorithm=table-driven --model=crc-16 --generate=c`\nlet TABLE = [\n    0x0000, 0xc0c1, 0xc181, 0x0140, 0xc301, 0x03c0, 0x0280, 0xc241, 0xc601, 0x06c0, 0x0780, 0xc741,\n    0x0500, 0xc5c1, 0xc481, 0x0440, 0xcc01, 0x0cc0, 0x0d80, 0xcd41, 0x0f00, 0xcfc1, 0xce81, 0x0e40,\n    0x0a00, 0xcac1, 0xcb81, 0x0b40, 0xc901, 0x09c0, 0x0880, 0xc841, 0xd801, 0x18c0, 0x1980, 0xd941,\n    0x1b00, 0xdbc1, 0xda81, 0x1a40, 0x1e00, 0xdec1, 0xdf81, 0x1f40, 0xdd01, 0x1dc0, 0x1c80, 0xdc41,\n    0x1400, 0xd4c1, 0xd581, 0x1540, 0xd701, 0x17c0, 0x1680, 0xd641, 0xd201, 0x12c0, 0x1380, 0xd341,\n    0x1100, 0xd1c1, 0xd081, 0x1040, 0xf001, 0x30c0, 0x3180, 0xf141, 0x3300, 0xf3c1, 0xf281, 0x3240,\n    0x3600, 0xf6c1, 0xf781, 0x3740, 0xf501, 0x35c0, 0x3480, 0xf441, 0x3c00, 0xfcc1, 0xfd81, 0x3d40,\n    0xff01, 0x3fc0, 0x3e80, 0xfe41, 0xfa01, 0x3ac0, 0x3b80, 0xfb41, 0x3900, 0xf9c1, 0xf881, 0x3840,\n    0x2800, 0xe8c1, 0xe981, 0x2940, 0xeb01, 0x2bc0, 0x2a80, 0xea41, 0xee01, 0x2ec0, 0x2f80, 0xef41,\n    0x2d00, 0xedc1, 0xec81, 0x2c40, 0xe401, 0x24c0, 0x2580, 0xe541, 0x2700, 0xe7c1, 0xe681, 0x2640,\n    0x2200, 0xe2c1, 0xe381, 0x2340, 0xe101, 0x21c0, 0x2080, 0xe041, 0xa001, 0x60c0, 0x6180, 0xa141,\n    0x6300, 0xa3c1, 0xa281, 0x6240, 0x6600, 0xa6c1, 0xa781, 0x6740, 0xa501, 0x65c0, 0x6480, 0xa441,\n    0x6c00, 0xacc1, 0xad81, 0x6d40, 0xaf01, 0x6fc0, 0x6e80, 0xae41, 0xaa01, 0x6ac0, 0x6b80, 0xab41,\n    0x6900, 0xa9c1, 0xa881, 0x6840, 0x7800, 0xb8c1, 0xb981, 0x7940, 0xbb01, 0x7bc0, 0x7a80, 0xba41,\n    0xbe01, 0x7ec0, 0x7f80, 0xbf41, 0x7d00, 0xbdc1, 0xbc81, 0x7c40, 0xb401, 0x74c0, 0x7580, 0xb541,\n    0x7700, 0xb7c1, 0xb681, 0x7640, 0x7200, 0xb2c1, 0xb381, 0x7340, 0xb101, 0x71c0, 0x7080, 0xb041,\n    0x5000, 0x90c1, 0x9181, 0x5140, 0x9301, 0x53c0, 0x5280, 0x9241, 0x9601, 0x56c0, 0x5780, 0x9741,\n    0x5500, 0x95c1, 0x9481, 0x5440, 0x9c01, 0x5cc0, 0x5d80, 0x9d41, 0x5f00, 0x9fc1, 0x9e81, 0x5e40,\n    0x5a00, 0x9ac1, 0x9b81, 0x5b40, 0x9901, 0x59c0, 0x5880, 0x9841, 0x8801, 0x48c0, 0x4980, 0x8941,\n    0x4b00, 0x8bc1, 0x8a81, 0x4a40, 0x4e00, 0x8ec1, 0x8f81, 0x4f40, 0x8d01, 0x4dc0, 0x4c80, 0x8c41,\n    0x4400, 0x84c1, 0x8581, 0x4540, 0x8701, 0x47c0, 0x4680, 0x8641, 0x8201, 0x42c0, 0x4380, 0x8341,\n    0x4100, 0x81c1, 0x8081, 0x4040,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc16 = (current, previous = 0) => {\n    let crc = ~~previous;\n    for (let index = 0; index < current.length; index++) {\n        crc = (TABLE[(crc ^ current[index]) & 0xff] ^ (crc >> 8)) & 0xffff;\n    }\n    return crc;\n};\nexport default crc16;\n","import crc16 from './calculators/crc16.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-16', crc16);\n","// Generated by `./pycrc.py --algorithm=table-driven --model=ccitt --generate=c`\nlet TABLE = [\n    0x0000, 0x1021, 0x2042, 0x3063, 0x4084, 0x50a5, 0x60c6, 0x70e7, 0x8108, 0x9129, 0xa14a, 0xb16b,\n    0xc18c, 0xd1ad, 0xe1ce, 0xf1ef, 0x1231, 0x0210, 0x3273, 0x2252, 0x52b5, 0x4294, 0x72f7, 0x62d6,\n    0x9339, 0x8318, 0xb37b, 0xa35a, 0xd3bd, 0xc39c, 0xf3ff, 0xe3de, 0x2462, 0x3443, 0x0420, 0x1401,\n    0x64e6, 0x74c7, 0x44a4, 0x5485, 0xa56a, 0xb54b, 0x8528, 0x9509, 0xe5ee, 0xf5cf, 0xc5ac, 0xd58d,\n    0x3653, 0x2672, 0x1611, 0x0630, 0x76d7, 0x66f6, 0x5695, 0x46b4, 0xb75b, 0xa77a, 0x9719, 0x8738,\n    0xf7df, 0xe7fe, 0xd79d, 0xc7bc, 0x48c4, 0x58e5, 0x6886, 0x78a7, 0x0840, 0x1861, 0x2802, 0x3823,\n    0xc9cc, 0xd9ed, 0xe98e, 0xf9af, 0x8948, 0x9969, 0xa90a, 0xb92b, 0x5af5, 0x4ad4, 0x7ab7, 0x6a96,\n    0x1a71, 0x0a50, 0x3a33, 0x2a12, 0xdbfd, 0xcbdc, 0xfbbf, 0xeb9e, 0x9b79, 0x8b58, 0xbb3b, 0xab1a,\n    0x6ca6, 0x7c87, 0x4ce4, 0x5cc5, 0x2c22, 0x3c03, 0x0c60, 0x1c41, 0xedae, 0xfd8f, 0xcdec, 0xddcd,\n    0xad2a, 0xbd0b, 0x8d68, 0x9d49, 0x7e97, 0x6eb6, 0x5ed5, 0x4ef4, 0x3e13, 0x2e32, 0x1e51, 0x0e70,\n    0xff9f, 0xefbe, 0xdfdd, 0xcffc, 0xbf1b, 0xaf3a, 0x9f59, 0x8f78, 0x9188, 0x81a9, 0xb1ca, 0xa1eb,\n    0xd10c, 0xc12d, 0xf14e, 0xe16f, 0x1080, 0x00a1, 0x30c2, 0x20e3, 0x5004, 0x4025, 0x7046, 0x6067,\n    0x83b9, 0x9398, 0xa3fb, 0xb3da, 0xc33d, 0xd31c, 0xe37f, 0xf35e, 0x02b1, 0x1290, 0x22f3, 0x32d2,\n    0x4235, 0x5214, 0x6277, 0x7256, 0xb5ea, 0xa5cb, 0x95a8, 0x8589, 0xf56e, 0xe54f, 0xd52c, 0xc50d,\n    0x34e2, 0x24c3, 0x14a0, 0x0481, 0x7466, 0x6447, 0x5424, 0x4405, 0xa7db, 0xb7fa, 0x8799, 0x97b8,\n    0xe75f, 0xf77e, 0xc71d, 0xd73c, 0x26d3, 0x36f2, 0x0691, 0x16b0, 0x6657, 0x7676, 0x4615, 0x5634,\n    0xd94c, 0xc96d, 0xf90e, 0xe92f, 0x99c8, 0x89e9, 0xb98a, 0xa9ab, 0x5844, 0x4865, 0x7806, 0x6827,\n    0x18c0, 0x08e1, 0x3882, 0x28a3, 0xcb7d, 0xdb5c, 0xeb3f, 0xfb1e, 0x8bf9, 0x9bd8, 0xabbb, 0xbb9a,\n    0x4a75, 0x5a54, 0x6a37, 0x7a16, 0x0af1, 0x1ad0, 0x2ab3, 0x3a92, 0xfd2e, 0xed0f, 0xdd6c, 0xcd4d,\n    0xbdaa, 0xad8b, 0x9de8, 0x8dc9, 0x7c26, 0x6c07, 0x5c64, 0x4c45, 0x3ca2, 0x2c83, 0x1ce0, 0x0cc1,\n    0xef1f, 0xff3e, 0xcf5d, 0xdf7c, 0xaf9b, 0xbfba, 0x8fd9, 0x9ff8, 0x6e17, 0x7e36, 0x4e55, 0x5e74,\n    0x2e93, 0x3eb2, 0x0ed1, 0x1ef0,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc16ccitt = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0xffff;\n    for (let index = 0; index < current.length; index++) {\n        crc = (TABLE[((crc >> 8) ^ current[index]) & 0xff] ^ (crc << 8)) & 0xffff;\n    }\n    return crc;\n};\nexport default crc16ccitt;\n","import crc16ccitt from './calculators/crc16ccitt.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('ccitt', crc16ccitt);\n","// Generated by `./pycrc.py --algorithm=table-driven --model=crc-16-modbus --generate=c`\nlet TABLE = [\n    0x0000, 0xc0c1, 0xc181, 0x0140, 0xc301, 0x03c0, 0x0280, 0xc241, 0xc601, 0x06c0, 0x0780, 0xc741,\n    0x0500, 0xc5c1, 0xc481, 0x0440, 0xcc01, 0x0cc0, 0x0d80, 0xcd41, 0x0f00, 0xcfc1, 0xce81, 0x0e40,\n    0x0a00, 0xcac1, 0xcb81, 0x0b40, 0xc901, 0x09c0, 0x0880, 0xc841, 0xd801, 0x18c0, 0x1980, 0xd941,\n    0x1b00, 0xdbc1, 0xda81, 0x1a40, 0x1e00, 0xdec1, 0xdf81, 0x1f40, 0xdd01, 0x1dc0, 0x1c80, 0xdc41,\n    0x1400, 0xd4c1, 0xd581, 0x1540, 0xd701, 0x17c0, 0x1680, 0xd641, 0xd201, 0x12c0, 0x1380, 0xd341,\n    0x1100, 0xd1c1, 0xd081, 0x1040, 0xf001, 0x30c0, 0x3180, 0xf141, 0x3300, 0xf3c1, 0xf281, 0x3240,\n    0x3600, 0xf6c1, 0xf781, 0x3740, 0xf501, 0x35c0, 0x3480, 0xf441, 0x3c00, 0xfcc1, 0xfd81, 0x3d40,\n    0xff01, 0x3fc0, 0x3e80, 0xfe41, 0xfa01, 0x3ac0, 0x3b80, 0xfb41, 0x3900, 0xf9c1, 0xf881, 0x3840,\n    0x2800, 0xe8c1, 0xe981, 0x2940, 0xeb01, 0x2bc0, 0x2a80, 0xea41, 0xee01, 0x2ec0, 0x2f80, 0xef41,\n    0x2d00, 0xedc1, 0xec81, 0x2c40, 0xe401, 0x24c0, 0x2580, 0xe541, 0x2700, 0xe7c1, 0xe681, 0x2640,\n    0x2200, 0xe2c1, 0xe381, 0x2340, 0xe101, 0x21c0, 0x2080, 0xe041, 0xa001, 0x60c0, 0x6180, 0xa141,\n    0x6300, 0xa3c1, 0xa281, 0x6240, 0x6600, 0xa6c1, 0xa781, 0x6740, 0xa501, 0x65c0, 0x6480, 0xa441,\n    0x6c00, 0xacc1, 0xad81, 0x6d40, 0xaf01, 0x6fc0, 0x6e80, 0xae41, 0xaa01, 0x6ac0, 0x6b80, 0xab41,\n    0x6900, 0xa9c1, 0xa881, 0x6840, 0x7800, 0xb8c1, 0xb981, 0x7940, 0xbb01, 0x7bc0, 0x7a80, 0xba41,\n    0xbe01, 0x7ec0, 0x7f80, 0xbf41, 0x7d00, 0xbdc1, 0xbc81, 0x7c40, 0xb401, 0x74c0, 0x7580, 0xb541,\n    0x7700, 0xb7c1, 0xb681, 0x7640, 0x7200, 0xb2c1, 0xb381, 0x7340, 0xb101, 0x71c0, 0x7080, 0xb041,\n    0x5000, 0x90c1, 0x9181, 0x5140, 0x9301, 0x53c0, 0x5280, 0x9241, 0x9601, 0x56c0, 0x5780, 0x9741,\n    0x5500, 0x95c1, 0x9481, 0x5440, 0x9c01, 0x5cc0, 0x5d80, 0x9d41, 0x5f00, 0x9fc1, 0x9e81, 0x5e40,\n    0x5a00, 0x9ac1, 0x9b81, 0x5b40, 0x9901, 0x59c0, 0x5880, 0x9841, 0x8801, 0x48c0, 0x4980, 0x8941,\n    0x4b00, 0x8bc1, 0x8a81, 0x4a40, 0x4e00, 0x8ec1, 0x8f81, 0x4f40, 0x8d01, 0x4dc0, 0x4c80, 0x8c41,\n    0x4400, 0x84c1, 0x8581, 0x4540, 0x8701, 0x47c0, 0x4680, 0x8641, 0x8201, 0x42c0, 0x4380, 0x8341,\n    0x4100, 0x81c1, 0x8081, 0x4040,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc16modbus = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0xffff;\n    for (let index = 0; index < current.length; index++) {\n        crc = (TABLE[(crc ^ current[index]) & 0xff] ^ (crc >> 8)) & 0xffff;\n    }\n    return crc;\n};\nexport default crc16modbus;\n","import crc16modbus from './calculators/crc16modbus.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-16-modbus', crc16modbus);\n","import crc16xmodem from './calculators/crc16xmodem.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('xmodem', crc16xmodem);\n","const crc16xmodem = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0x0;\n    for (let index = 0; index < current.length; index++) {\n        let code = (crc >>> 8) & 0xff;\n        code ^= current[index] & 0xff;\n        code ^= code >>> 4;\n        crc = (crc << 8) & 0xffff;\n        crc ^= code;\n        code = (code << 5) & 0xffff;\n        crc ^= code;\n        code = (code << 7) & 0xffff;\n        crc ^= code;\n    }\n    return crc;\n};\nexport default crc16xmodem;\n","// Generated by `./pycrc.py --algorithm=table-driven --model=kermit --generate=c`\nlet TABLE = [\n    0x0000, 0x1189, 0x2312, 0x329b, 0x4624, 0x57ad, 0x6536, 0x74bf, 0x8c48, 0x9dc1, 0xaf5a, 0xbed3,\n    0xca6c, 0xdbe5, 0xe97e, 0xf8f7, 0x1081, 0x0108, 0x3393, 0x221a, 0x56a5, 0x472c, 0x75b7, 0x643e,\n    0x9cc9, 0x8d40, 0xbfdb, 0xae52, 0xdaed, 0xcb64, 0xf9ff, 0xe876, 0x2102, 0x308b, 0x0210, 0x1399,\n    0x6726, 0x76af, 0x4434, 0x55bd, 0xad4a, 0xbcc3, 0x8e58, 0x9fd1, 0xeb6e, 0xfae7, 0xc87c, 0xd9f5,\n    0x3183, 0x200a, 0x1291, 0x0318, 0x77a7, 0x662e, 0x54b5, 0x453c, 0xbdcb, 0xac42, 0x9ed9, 0x8f50,\n    0xfbef, 0xea66, 0xd8fd, 0xc974, 0x4204, 0x538d, 0x6116, 0x709f, 0x0420, 0x15a9, 0x2732, 0x36bb,\n    0xce4c, 0xdfc5, 0xed5e, 0xfcd7, 0x8868, 0x99e1, 0xab7a, 0xbaf3, 0x5285, 0x430c, 0x7197, 0x601e,\n    0x14a1, 0x0528, 0x37b3, 0x263a, 0xdecd, 0xcf44, 0xfddf, 0xec56, 0x98e9, 0x8960, 0xbbfb, 0xaa72,\n    0x6306, 0x728f, 0x4014, 0x519d, 0x2522, 0x34ab, 0x0630, 0x17b9, 0xef4e, 0xfec7, 0xcc5c, 0xddd5,\n    0xa96a, 0xb8e3, 0x8a78, 0x9bf1, 0x7387, 0x620e, 0x5095, 0x411c, 0x35a3, 0x242a, 0x16b1, 0x0738,\n    0xffcf, 0xee46, 0xdcdd, 0xcd54, 0xb9eb, 0xa862, 0x9af9, 0x8b70, 0x8408, 0x9581, 0xa71a, 0xb693,\n    0xc22c, 0xd3a5, 0xe13e, 0xf0b7, 0x0840, 0x19c9, 0x2b52, 0x3adb, 0x4e64, 0x5fed, 0x6d76, 0x7cff,\n    0x9489, 0x8500, 0xb79b, 0xa612, 0xd2ad, 0xc324, 0xf1bf, 0xe036, 0x18c1, 0x0948, 0x3bd3, 0x2a5a,\n    0x5ee5, 0x4f6c, 0x7df7, 0x6c7e, 0xa50a, 0xb483, 0x8618, 0x9791, 0xe32e, 0xf2a7, 0xc03c, 0xd1b5,\n    0x2942, 0x38cb, 0x0a50, 0x1bd9, 0x6f66, 0x7eef, 0x4c74, 0x5dfd, 0xb58b, 0xa402, 0x9699, 0x8710,\n    0xf3af, 0xe226, 0xd0bd, 0xc134, 0x39c3, 0x284a, 0x1ad1, 0x0b58, 0x7fe7, 0x6e6e, 0x5cf5, 0x4d7c,\n    0xc60c, 0xd785, 0xe51e, 0xf497, 0x8028, 0x91a1, 0xa33a, 0xb2b3, 0x4a44, 0x5bcd, 0x6956, 0x78df,\n    0x0c60, 0x1de9, 0x2f72, 0x3efb, 0xd68d, 0xc704, 0xf59f, 0xe416, 0x90a9, 0x8120, 0xb3bb, 0xa232,\n    0x5ac5, 0x4b4c, 0x79d7, 0x685e, 0x1ce1, 0x0d68, 0x3ff3, 0x2e7a, 0xe70e, 0xf687, 0xc41c, 0xd595,\n    0xa12a, 0xb0a3, 0x8238, 0x93b1, 0x6b46, 0x7acf, 0x4854, 0x59dd, 0x2d62, 0x3ceb, 0x0e70, 0x1ff9,\n    0xf78f, 0xe606, 0xd49d, 0xc514, 0xb1ab, 0xa022, 0x92b9, 0x8330, 0x7bc7, 0x6a4e, 0x58d5, 0x495c,\n    0x3de3, 0x2c6a, 0x1ef1, 0x0f78,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc16kermit = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0x0000;\n    for (let index = 0; index < current.length; index++) {\n        crc = (TABLE[(crc ^ current[index]) & 0xff] ^ (crc >> 8)) & 0xffff;\n    }\n    return crc;\n};\nexport default crc16kermit;\n","import crc16kermit from './calculators/crc16kermit.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('kermit', crc16kermit);\n","// Generated by `./pycrc.py --algorithm=table-drive --model=crc-24 --generate=c`\nlet TABLE = [\n    0x000000, 0x864cfb, 0x8ad50d, 0x0c99f6, 0x93e6e1, 0x15aa1a, 0x1933ec, 0x9f7f17, 0xa18139,\n    0x27cdc2, 0x2b5434, 0xad18cf, 0x3267d8, 0xb42b23, 0xb8b2d5, 0x3efe2e, 0xc54e89, 0x430272,\n    0x4f9b84, 0xc9d77f, 0x56a868, 0xd0e493, 0xdc7d65, 0x5a319e, 0x64cfb0, 0xe2834b, 0xee1abd,\n    0x685646, 0xf72951, 0x7165aa, 0x7dfc5c, 0xfbb0a7, 0x0cd1e9, 0x8a9d12, 0x8604e4, 0x00481f,\n    0x9f3708, 0x197bf3, 0x15e205, 0x93aefe, 0xad50d0, 0x2b1c2b, 0x2785dd, 0xa1c926, 0x3eb631,\n    0xb8faca, 0xb4633c, 0x322fc7, 0xc99f60, 0x4fd39b, 0x434a6d, 0xc50696, 0x5a7981, 0xdc357a,\n    0xd0ac8c, 0x56e077, 0x681e59, 0xee52a2, 0xe2cb54, 0x6487af, 0xfbf8b8, 0x7db443, 0x712db5,\n    0xf7614e, 0x19a3d2, 0x9fef29, 0x9376df, 0x153a24, 0x8a4533, 0x0c09c8, 0x00903e, 0x86dcc5,\n    0xb822eb, 0x3e6e10, 0x32f7e6, 0xb4bb1d, 0x2bc40a, 0xad88f1, 0xa11107, 0x275dfc, 0xdced5b,\n    0x5aa1a0, 0x563856, 0xd074ad, 0x4f0bba, 0xc94741, 0xc5deb7, 0x43924c, 0x7d6c62, 0xfb2099,\n    0xf7b96f, 0x71f594, 0xee8a83, 0x68c678, 0x645f8e, 0xe21375, 0x15723b, 0x933ec0, 0x9fa736,\n    0x19ebcd, 0x8694da, 0x00d821, 0x0c41d7, 0x8a0d2c, 0xb4f302, 0x32bff9, 0x3e260f, 0xb86af4,\n    0x2715e3, 0xa15918, 0xadc0ee, 0x2b8c15, 0xd03cb2, 0x567049, 0x5ae9bf, 0xdca544, 0x43da53,\n    0xc596a8, 0xc90f5e, 0x4f43a5, 0x71bd8b, 0xf7f170, 0xfb6886, 0x7d247d, 0xe25b6a, 0x641791,\n    0x688e67, 0xeec29c, 0x3347a4, 0xb50b5f, 0xb992a9, 0x3fde52, 0xa0a145, 0x26edbe, 0x2a7448,\n    0xac38b3, 0x92c69d, 0x148a66, 0x181390, 0x9e5f6b, 0x01207c, 0x876c87, 0x8bf571, 0x0db98a,\n    0xf6092d, 0x7045d6, 0x7cdc20, 0xfa90db, 0x65efcc, 0xe3a337, 0xef3ac1, 0x69763a, 0x578814,\n    0xd1c4ef, 0xdd5d19, 0x5b11e2, 0xc46ef5, 0x42220e, 0x4ebbf8, 0xc8f703, 0x3f964d, 0xb9dab6,\n    0xb54340, 0x330fbb, 0xac70ac, 0x2a3c57, 0x26a5a1, 0xa0e95a, 0x9e1774, 0x185b8f, 0x14c279,\n    0x928e82, 0x0df195, 0x8bbd6e, 0x872498, 0x016863, 0xfad8c4, 0x7c943f, 0x700dc9, 0xf64132,\n    0x693e25, 0xef72de, 0xe3eb28, 0x65a7d3, 0x5b59fd, 0xdd1506, 0xd18cf0, 0x57c00b, 0xc8bf1c,\n    0x4ef3e7, 0x426a11, 0xc426ea, 0x2ae476, 0xaca88d, 0xa0317b, 0x267d80, 0xb90297, 0x3f4e6c,\n    0x33d79a, 0xb59b61, 0x8b654f, 0x0d29b4, 0x01b042, 0x87fcb9, 0x1883ae, 0x9ecf55, 0x9256a3,\n    0x141a58, 0xefaaff, 0x69e604, 0x657ff2, 0xe33309, 0x7c4c1e, 0xfa00e5, 0xf69913, 0x70d5e8,\n    0x4e2bc6, 0xc8673d, 0xc4fecb, 0x42b230, 0xddcd27, 0x5b81dc, 0x57182a, 0xd154d1, 0x26359f,\n    0xa07964, 0xace092, 0x2aac69, 0xb5d37e, 0x339f85, 0x3f0673, 0xb94a88, 0x87b4a6, 0x01f85d,\n    0x0d61ab, 0x8b2d50, 0x145247, 0x921ebc, 0x9e874a, 0x18cbb1, 0xe37b16, 0x6537ed, 0x69ae1b,\n    0xefe2e0, 0x709df7, 0xf6d10c, 0xfa48fa, 0x7c0401, 0x42fa2f, 0xc4b6d4, 0xc82f22, 0x4e63d9,\n    0xd11cce, 0x575035, 0x5bc9c3, 0xdd8538,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc24 = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0xb704ce;\n    for (let index = 0; index < current.length; index++) {\n        crc = (TABLE[((crc >> 16) ^ current[index]) & 0xff] ^ (crc << 8)) & 0xffffff;\n    }\n    return crc;\n};\nexport default crc24;\n","import crc24 from './calculators/crc24.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-24', crc24);\n","// Generated by `./pycrc.py --algorithm=table-driven --model=crc-32 --generate=c`\nlet TABLE = [\n    0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,\n    0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,\n    0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n    0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,\n    0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n    0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n    0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,\n    0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,\n    0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n    0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n    0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,\n    0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n    0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,\n    0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,\n    0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n    0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,\n    0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,\n    0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n    0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,\n    0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n    0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n    0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,\n    0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,\n    0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n    0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n    0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,\n    0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n    0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,\n    0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,\n    0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n    0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,\n    0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc32 = (current, previous) => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    let crc = previous === 0 ? 0 : ~~previous ^ -1;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[(crc ^ current[index]) & 0xff] ^ (crc >>> 8);\n    }\n    return crc ^ -1;\n};\nexport default crc32;\n","import crc32 from './calculators/crc32.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-32', crc32);\n","// Generated by `./pycrc.py --algorithm=table-driven --model=crc-32-mpeg --generate=c`\nlet TABLE = [\n    0x00000000, 0x04c11db7, 0x09823b6e, 0x0d4326d9, 0x130476dc, 0x17c56b6b, 0x1a864db2, 0x1e475005,\n    0x2608edb8, 0x22c9f00f, 0x2f8ad6d6, 0x2b4bcb61, 0x350c9b64, 0x31cd86d3, 0x3c8ea00a, 0x384fbdbd,\n    0x4c11db70, 0x48d0c6c7, 0x4593e01e, 0x4152fda9, 0x5f15adac, 0x5bd4b01b, 0x569796c2, 0x52568b75,\n    0x6a1936c8, 0x6ed82b7f, 0x639b0da6, 0x675a1011, 0x791d4014, 0x7ddc5da3, 0x709f7b7a, 0x745e66cd,\n    0x9823b6e0, 0x9ce2ab57, 0x91a18d8e, 0x95609039, 0x8b27c03c, 0x8fe6dd8b, 0x82a5fb52, 0x8664e6e5,\n    0xbe2b5b58, 0xbaea46ef, 0xb7a96036, 0xb3687d81, 0xad2f2d84, 0xa9ee3033, 0xa4ad16ea, 0xa06c0b5d,\n    0xd4326d90, 0xd0f37027, 0xddb056fe, 0xd9714b49, 0xc7361b4c, 0xc3f706fb, 0xceb42022, 0xca753d95,\n    0xf23a8028, 0xf6fb9d9f, 0xfbb8bb46, 0xff79a6f1, 0xe13ef6f4, 0xe5ffeb43, 0xe8bccd9a, 0xec7dd02d,\n    0x34867077, 0x30476dc0, 0x3d044b19, 0x39c556ae, 0x278206ab, 0x23431b1c, 0x2e003dc5, 0x2ac12072,\n    0x128e9dcf, 0x164f8078, 0x1b0ca6a1, 0x1fcdbb16, 0x018aeb13, 0x054bf6a4, 0x0808d07d, 0x0cc9cdca,\n    0x7897ab07, 0x7c56b6b0, 0x71159069, 0x75d48dde, 0x6b93dddb, 0x6f52c06c, 0x6211e6b5, 0x66d0fb02,\n    0x5e9f46bf, 0x5a5e5b08, 0x571d7dd1, 0x53dc6066, 0x4d9b3063, 0x495a2dd4, 0x44190b0d, 0x40d816ba,\n    0xaca5c697, 0xa864db20, 0xa527fdf9, 0xa1e6e04e, 0xbfa1b04b, 0xbb60adfc, 0xb6238b25, 0xb2e29692,\n    0x8aad2b2f, 0x8e6c3698, 0x832f1041, 0x87ee0df6, 0x99a95df3, 0x9d684044, 0x902b669d, 0x94ea7b2a,\n    0xe0b41de7, 0xe4750050, 0xe9362689, 0xedf73b3e, 0xf3b06b3b, 0xf771768c, 0xfa325055, 0xfef34de2,\n    0xc6bcf05f, 0xc27dede8, 0xcf3ecb31, 0xcbffd686, 0xd5b88683, 0xd1799b34, 0xdc3abded, 0xd8fba05a,\n    0x690ce0ee, 0x6dcdfd59, 0x608edb80, 0x644fc637, 0x7a089632, 0x7ec98b85, 0x738aad5c, 0x774bb0eb,\n    0x4f040d56, 0x4bc510e1, 0x46863638, 0x42472b8f, 0x5c007b8a, 0x58c1663d, 0x558240e4, 0x51435d53,\n    0x251d3b9e, 0x21dc2629, 0x2c9f00f0, 0x285e1d47, 0x36194d42, 0x32d850f5, 0x3f9b762c, 0x3b5a6b9b,\n    0x0315d626, 0x07d4cb91, 0x0a97ed48, 0x0e56f0ff, 0x1011a0fa, 0x14d0bd4d, 0x19939b94, 0x1d528623,\n    0xf12f560e, 0xf5ee4bb9, 0xf8ad6d60, 0xfc6c70d7, 0xe22b20d2, 0xe6ea3d65, 0xeba91bbc, 0xef68060b,\n    0xd727bbb6, 0xd3e6a601, 0xdea580d8, 0xda649d6f, 0xc423cd6a, 0xc0e2d0dd, 0xcda1f604, 0xc960ebb3,\n    0xbd3e8d7e, 0xb9ff90c9, 0xb4bcb610, 0xb07daba7, 0xae3afba2, 0xaafbe615, 0xa7b8c0cc, 0xa379dd7b,\n    0x9b3660c6, 0x9ff77d71, 0x92b45ba8, 0x9675461f, 0x8832161a, 0x8cf30bad, 0x81b02d74, 0x857130c3,\n    0x5d8a9099, 0x594b8d2e, 0x5408abf7, 0x50c9b640, 0x4e8ee645, 0x4a4ffbf2, 0x470cdd2b, 0x43cdc09c,\n    0x7b827d21, 0x7f436096, 0x7200464f, 0x76c15bf8, 0x68860bfd, 0x6c47164a, 0x61043093, 0x65c52d24,\n    0x119b4be9, 0x155a565e, 0x18197087, 0x1cd86d30, 0x029f3d35, 0x065e2082, 0x0b1d065b, 0x0fdc1bec,\n    0x3793a651, 0x3352bbe6, 0x3e119d3f, 0x3ad08088, 0x2497d08d, 0x2056cd3a, 0x2d15ebe3, 0x29d4f654,\n    0xc5a92679, 0xc1683bce, 0xcc2b1d17, 0xc8ea00a0, 0xd6ad50a5, 0xd26c4d12, 0xdf2f6bcb, 0xdbee767c,\n    0xe3a1cbc1, 0xe760d676, 0xea23f0af, 0xeee2ed18, 0xf0a5bd1d, 0xf464a0aa, 0xf9278673, 0xfde69bc4,\n    0x89b8fd09, 0x8d79e0be, 0x803ac667, 0x84fbdbd0, 0x9abc8bd5, 0x9e7d9662, 0x933eb0bb, 0x97ffad0c,\n    0xafb010b1, 0xab710d06, 0xa6322bdf, 0xa2f33668, 0xbcb4666d, 0xb8757bda, 0xb5365d03, 0xb1f740b4,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc32mpeg2 = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0xffffffff;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[((crc >> 24) ^ current[index]) & 0xff] ^ (crc << 8);\n    }\n    return crc;\n};\nexport default crc32mpeg2;\n","import crc32mpeg2 from './calculators/crc32mpeg2.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-32-mpeg', crc32mpeg2);\n","// Generated by `./pycrc.py --algorithm=table-driven --model=jam --generate=c`\nlet TABLE = [\n    0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,\n    0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,\n    0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n    0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,\n    0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n    0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n    0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,\n    0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,\n    0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n    0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n    0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,\n    0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n    0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,\n    0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,\n    0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n    0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,\n    0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,\n    0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n    0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,\n    0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n    0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n    0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,\n    0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,\n    0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n    0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n    0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,\n    0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n    0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,\n    0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,\n    0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n    0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,\n    0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crcjam = (current, previous = -1) => {\n    let crc = previous === 0 ? 0 : ~~previous;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[(crc ^ current[index]) & 0xff] ^ (crc >>> 8);\n    }\n    return crc;\n};\nexport default crcjam;\n","import crcjam from './calculators/crcjam.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('jam', crcjam);\n","import type { ChainConfig } from './types'\n\ntype ChainsDict = {\n  [key: string]: ChainConfig\n}\n\nexport const chains: ChainsDict = {\n  mainnet: {\n    name: 'mainnet',\n    chainId: 1,\n    networkId: 1,\n    defaultHardfork: 'shanghai',\n    consensus: {\n      type: 'pow',\n      algorithm: 'ethash',\n      ethash: {},\n    },\n    comment: 'The Ethereum main chain',\n    url: 'https://ethstats.net/',\n    genesis: {\n      gasLimit: 5000,\n      difficulty: 17179869184,\n      nonce: '0x0000000000000042',\n      extraData: '0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa',\n    },\n    hardforks: [\n      {\n        name: 'chainstart',\n        block: 0,\n        forkHash: '0xfc64ec04',\n      },\n      {\n        name: 'homestead',\n        block: 1150000,\n        forkHash: '0x97c2c34c',\n      },\n      {\n        name: 'dao',\n        block: 1920000,\n        forkHash: '0x91d1f948',\n      },\n      {\n        name: 'tangerineWhistle',\n        block: 2463000,\n        forkHash: '0x7a64da13',\n      },\n      {\n        name: 'spuriousDragon',\n        block: 2675000,\n        forkHash: '0x3edd5b10',\n      },\n      {\n        name: 'byzantium',\n        block: 4370000,\n        forkHash: '0xa00bc324',\n      },\n      {\n        name: 'constantinople',\n        block: 7280000,\n        forkHash: '0x668db0af',\n      },\n      {\n        name: 'petersburg',\n        block: 7280000,\n        forkHash: '0x668db0af',\n      },\n      {\n        name: 'istanbul',\n        block: 9069000,\n        forkHash: '0x879d6e30',\n      },\n      {\n        name: 'muirGlacier',\n        block: 9200000,\n        forkHash: '0xe029e991',\n      },\n      {\n        name: 'berlin',\n        block: 12244000,\n        forkHash: '0x0eb440f6',\n      },\n      {\n        name: 'london',\n        block: 12965000,\n        forkHash: '0xb715077d',\n      },\n      {\n        name: 'arrowGlacier',\n        block: 13773000,\n        forkHash: '0x20c327fc',\n      },\n      {\n        name: 'grayGlacier',\n        block: 15050000,\n        forkHash: '0xf0afd0e3',\n      },\n      {\n        // The forkHash will remain same as mergeForkIdTransition is post merge\n        // terminal block: https://etherscan.io/block/15537393\n        name: 'paris',\n        ttd: '58750000000000000000000',\n        block: 15537394,\n        forkHash: '0xf0afd0e3',\n      },\n      {\n        name: 'mergeForkIdTransition',\n        block: null,\n        forkHash: null,\n      },\n      {\n        name: 'shanghai',\n        block: null,\n        timestamp: '1681338455',\n        forkHash: '0xdce96c2d',\n      },\n      {\n        name: 'cancun',\n        block: null,\n        forkHash: null,\n      },\n    ],\n    bootstrapNodes: [\n      {\n        ip: '18.138.108.67',\n        port: 30303,\n        id: 'd860a01f9722d78051619d1e2351aba3f43f943f6f00718d1b9baa4101932a1f5011f16bb2b1bb35db20d6fe28fa0bf09636d26a87d31de9ec6203eeedb1f666',\n        location: 'ap-southeast-1-001',\n        comment: 'bootnode-aws-ap-southeast-1-001',\n      },\n      {\n        ip: '3.209.45.79',\n        port: 30303,\n        id: '22a8232c3abc76a16ae9d6c3b164f98775fe226f0917b0ca871128a74a8e9630b458460865bab457221f1d448dd9791d24c4e5d88786180ac185df813a68d4de',\n        location: 'us-east-1-001',\n        comment: 'bootnode-aws-us-east-1-001',\n      },\n      {\n        ip: '65.108.70.101',\n        port: 30303,\n        id: '2b252ab6a1d0f971d9722cb839a42cb81db019ba44c08754628ab4a823487071b5695317c8ccd085219c3a03af063495b2f1da8d18218da2d6a82981b45e6ffc',\n        location: 'eu-west-1-001',\n        comment: 'bootnode-hetzner-hel',\n      },\n      {\n        ip: '157.90.35.166',\n        port: 30303,\n        id: '4aeb4ab6c14b23e2c4cfdce879c04b0748a20d8e9b59e25ded2a08143e265c6c25936e74cbc8e641e3312ca288673d91f2f93f8e277de3cfa444ecdaaf982052',\n        location: 'eu-central-1-001',\n        comment: 'bootnode-hetzner-fsn',\n      },\n    ],\n    dnsNetworks: [\n      'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.mainnet.ethdisco.net',\n    ],\n  },\n  goerli: {\n    name: 'goerli',\n    chainId: 5,\n    networkId: 5,\n    defaultHardfork: 'shanghai',\n    consensus: {\n      type: 'poa',\n      algorithm: 'clique',\n      clique: {\n        period: 15,\n        epoch: 30000,\n      },\n    },\n    comment: 'Cross-client PoA test network',\n    url: 'https://github.com/goerli/testnet',\n    genesis: {\n      timestamp: '0x5c51a607',\n      gasLimit: 10485760,\n      difficulty: 1,\n      nonce: '0x0000000000000000',\n      extraData:\n        '0x22466c6578692069732061207468696e6722202d204166726900000000000000e0a2bd4258d2768837baa26a28fe71dc079f84c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n    },\n    hardforks: [\n      {\n        name: 'chainstart',\n        block: 0,\n        forkHash: '0xa3f5ab08',\n      },\n      {\n        name: 'homestead',\n        block: 0,\n        forkHash: '0xa3f5ab08',\n      },\n      {\n        name: 'tangerineWhistle',\n        block: 0,\n        forkHash: '0xa3f5ab08',\n      },\n      {\n        name: 'spuriousDragon',\n        block: 0,\n        forkHash: '0xa3f5ab08',\n      },\n      {\n        name: 'byzantium',\n        block: 0,\n        forkHash: '0xa3f5ab08',\n      },\n      {\n        name: 'constantinople',\n        block: 0,\n        forkHash: '0xa3f5ab08',\n      },\n      {\n        name: 'petersburg',\n        block: 0,\n        forkHash: '0xa3f5ab08',\n      },\n      {\n        name: 'istanbul',\n        block: 1561651,\n        forkHash: '0xc25efa5c',\n      },\n      {\n        name: 'berlin',\n        block: 4460644,\n        forkHash: '0x757a1c47',\n      },\n      {\n        name: 'london',\n        block: 5062605,\n        forkHash: '0xb8c6299d',\n      },\n      {\n        // The forkHash will remain same as mergeForkIdTransition is post merge,\n        // terminal block: https://goerli.etherscan.io/block/7382818\n        name: 'paris',\n        ttd: '10790000',\n        block: 7382819,\n        forkHash: '0xb8c6299d',\n      },\n      {\n        name: 'mergeForkIdTransition',\n        block: null,\n        forkHash: null,\n      },\n      {\n        name: 'shanghai',\n        block: null,\n        timestamp: '1678832736',\n        forkHash: '0xf9843abf',\n      },\n      {\n        name: 'cancun',\n        block: null,\n        forkHash: null,\n      },\n    ],\n    bootstrapNodes: [\n      {\n        ip: '51.141.78.53',\n        port: 30303,\n        id: '011f758e6552d105183b1761c5e2dea0111bc20fd5f6422bc7f91e0fabbec9a6595caf6239b37feb773dddd3f87240d99d859431891e4a642cf2a0a9e6cbb98a',\n        location: '',\n        comment: 'Upstream bootnode 1',\n      },\n      {\n        ip: '13.93.54.137',\n        port: 30303,\n        id: '176b9417f511d05b6b2cf3e34b756cf0a7096b3094572a8f6ef4cdcb9d1f9d00683bf0f83347eebdf3b81c3521c2332086d9592802230bf528eaf606a1d9677b',\n        location: '',\n        comment: 'Upstream bootnode 2',\n      },\n      {\n        ip: '94.237.54.114',\n        port: 30313,\n        id: '46add44b9f13965f7b9875ac6b85f016f341012d84f975377573800a863526f4da19ae2c620ec73d11591fa9510e992ecc03ad0751f53cc02f7c7ed6d55c7291',\n        location: '',\n        comment: 'Upstream bootnode 3',\n      },\n      {\n        ip: '18.218.250.66',\n        port: 30313,\n        id: 'b5948a2d3e9d486c4d75bf32713221c2bd6cf86463302339299bd227dc2e276cd5a1c7ca4f43a0e9122fe9af884efed563bd2a1fd28661f3b5f5ad7bf1de5949',\n        location: '',\n        comment: 'Upstream bootnode 4',\n      },\n      {\n        ip: '3.11.147.67',\n        port: 30303,\n        id: 'a61215641fb8714a373c80edbfa0ea8878243193f57c96eeb44d0bc019ef295abd4e044fd619bfc4c59731a73fb79afe84e9ab6da0c743ceb479cbb6d263fa91',\n        location: '',\n        comment: 'Ethereum Foundation bootnode',\n      },\n      {\n        ip: '51.15.116.226',\n        port: 30303,\n        id: 'a869b02cec167211fb4815a82941db2e7ed2936fd90e78619c53eb17753fcf0207463e3419c264e2a1dd8786de0df7e68cf99571ab8aeb7c4e51367ef186b1dd',\n        location: '',\n        comment: 'Goerli Initiative bootnode',\n      },\n      {\n        ip: '51.15.119.157',\n        port: 30303,\n        id: '807b37ee4816ecf407e9112224494b74dd5933625f655962d892f2f0f02d7fbbb3e2a94cf87a96609526f30c998fd71e93e2f53015c558ffc8b03eceaf30ee33',\n        location: '',\n        comment: 'Goerli Initiative bootnode',\n      },\n      {\n        ip: '51.15.119.157',\n        port: 40303,\n        id: 'a59e33ccd2b3e52d578f1fbd70c6f9babda2650f0760d6ff3b37742fdcdfdb3defba5d56d315b40c46b70198c7621e63ffa3f987389c7118634b0fefbbdfa7fd',\n        location: '',\n        comment: 'Goerli Initiative bootnode',\n      },\n    ],\n    dnsNetworks: [\n      'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.goerli.ethdisco.net',\n    ],\n  },\n  sepolia: {\n    name: 'sepolia',\n    chainId: 11155111,\n    networkId: 11155111,\n    defaultHardfork: 'shanghai',\n    consensus: {\n      type: 'pow',\n      algorithm: 'ethash',\n      ethash: {},\n    },\n    comment: 'PoW test network to replace Ropsten',\n    url: 'https://github.com/ethereum/go-ethereum/pull/23730',\n    genesis: {\n      timestamp: '0x6159af19',\n      gasLimit: 30000000,\n      difficulty: 131072,\n      nonce: '0x0000000000000000',\n      extraData: '0x5365706f6c69612c20417468656e732c204174746963612c2047726565636521',\n    },\n    hardforks: [\n      {\n        name: 'chainstart',\n        block: 0,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        name: 'homestead',\n        block: 0,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        name: 'tangerineWhistle',\n        block: 0,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        name: 'spuriousDragon',\n        block: 0,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        name: 'byzantium',\n        block: 0,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        name: 'constantinople',\n        block: 0,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        name: 'petersburg',\n        block: 0,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        name: 'istanbul',\n        block: 0,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        name: 'muirGlacier',\n        block: 0,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        name: 'berlin',\n        block: 0,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        name: 'london',\n        block: 0,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        // The forkHash will remain same as mergeForkIdTransition is post merge,\n        // terminal block: https://sepolia.etherscan.io/block/1450408\n        name: 'paris',\n        ttd: '17000000000000000',\n        block: 1450409,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        name: 'mergeForkIdTransition',\n        block: 1735371,\n        forkHash: '0xb96cbd13',\n      },\n      {\n        name: 'shanghai',\n        block: null,\n        timestamp: '1677557088',\n        forkHash: '0xf7f9bc08',\n      },\n      {\n        name: 'cancun',\n        block: null,\n        forkHash: null,\n      },\n    ],\n    bootstrapNodes: [\n      {\n        ip: '18.168.182.86',\n        port: 30303,\n        id: '9246d00bc8fd1742e5ad2428b80fc4dc45d786283e05ef6edbd9002cbc335d40998444732fbe921cb88e1d2c73d1b1de53bae6a2237996e9bfe14f871baf7066',\n        location: '',\n        comment: 'geth',\n      },\n      {\n        ip: '52.14.151.177',\n        port: 30303,\n        id: 'ec66ddcf1a974950bd4c782789a7e04f8aa7110a72569b6e65fcd51e937e74eed303b1ea734e4d19cfaec9fbff9b6ee65bf31dcb50ba79acce9dd63a6aca61c7',\n        location: '',\n        comment: 'besu',\n      },\n      {\n        ip: '165.22.196.173',\n        port: 30303,\n        id: 'ce970ad2e9daa9e14593de84a8b49da3d54ccfdf83cbc4fe519cb8b36b5918ed4eab087dedd4a62479b8d50756b492d5f762367c8d20329a7854ec01547568a6',\n        location: '',\n        comment: 'EF',\n      },\n      {\n        ip: '65.108.95.67',\n        port: 30303,\n        id: '075503b13ed736244896efcde2a992ec0b451357d46cb7a8132c0384721742597fc8f0d91bbb40bb52e7d6e66728d36a1fda09176294e4a30cfac55dcce26bc6',\n        location: '',\n        comment: 'lodestar',\n      },\n    ],\n    dnsNetworks: [\n      'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.sepolia.ethdisco.net',\n    ],\n  },\n  holesky: {\n    name: 'holesky',\n    chainId: 17000,\n    networkId: 17000,\n    defaultHardfork: 'paris',\n    consensus: {\n      type: 'pos',\n      algorithm: 'casper',\n    },\n    comment: 'PoS test network to replace Goerli',\n    url: 'https://github.com/eth-clients/holesky/',\n    genesis: {\n      baseFeePerGas: '0x3B9ACA00',\n      difficulty: '0x01',\n      extraData: '0x',\n      gasLimit: '0x17D7840',\n      nonce: '0x0000000000001234',\n      timestamp: '0x65156994',\n    },\n    hardforks: [\n      {\n        name: 'chainstart',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'homestead',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'tangerineWhistle',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'spuriousDragon',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'byzantium',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'constantinople',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'petersburg',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'istanbul',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'muirGlacier',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'berlin',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'london',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'paris',\n        ttd: '0',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'mergeForkIdTransition',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'shanghai',\n        block: null,\n        timestamp: '1696000704',\n        forkHash: '0xfd4f016b',\n      },\n      {\n        name: 'cancun',\n        block: null,\n        forkHash: null,\n      },\n    ],\n    bootstrapNodes: [\n      {\n        ip: '146.190.13.128',\n        port: 30303,\n        id: 'ac906289e4b7f12df423d654c5a962b6ebe5b3a74cc9e06292a85221f9a64a6f1cfdd6b714ed6dacef51578f92b34c60ee91e9ede9c7f8fadc4d347326d95e2b',\n        location: '',\n        comment: 'bootnode 1',\n      },\n      {\n        ip: '178.128.136.233',\n        port: 30303,\n        id: 'a3435a0155a3e837c02f5e7f5662a2f1fbc25b48e4dc232016e1c51b544cb5b4510ef633ea3278c0e970fa8ad8141e2d4d0f9f95456c537ff05fdf9b31c15072',\n        location: '',\n        comment: 'bootnode 2',\n      },\n    ],\n    dnsNetworks: [\n      'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.holesky.ethdisco.net',\n    ],\n  },\n}\n","import { BIGINT_0, hexToBytes } from '@ethereumjs/util'\n\nexport enum Chain {\n  Mainnet = 1,\n  Goerli = 5,\n  Sepolia = 11155111,\n  Holesky = 17000,\n}\n\n/**\n * Genesis state meta info which is decoupled from common's genesis params\n */\ntype GenesisState = {\n  name: string\n  /* blockNumber that can be used to update and track the regenesis marker */\n  blockNumber: bigint\n  /* stateRoot of the chain at the blockNumber */\n  stateRoot: Uint8Array\n}\n\n// Having this info as record will force typescript to make sure no chain is missed\n/**\n * GenesisState info about well known ethereum chains\n */\nexport const ChainGenesis: Record<Chain, GenesisState> = {\n  [Chain.Mainnet]: {\n    name: 'mainnet',\n    blockNumber: BIGINT_0,\n    stateRoot: hexToBytes('0xd7f8974fb5ac78d9ac099b9ad5018bedc2ce0a72dad1827a1709da30580f0544'),\n  },\n  [Chain.Goerli]: {\n    name: 'goerli',\n    blockNumber: BIGINT_0,\n    stateRoot: hexToBytes('0x5d6cded585e73c4e322c30c2f782a336316f17dd85a4863b9d838d2d4b8b3008'),\n  },\n  [Chain.Sepolia]: {\n    name: 'sepolia',\n    blockNumber: BIGINT_0,\n    stateRoot: hexToBytes('0x5eb6e371a698b8d68f665192350ffcecbbbf322916f4b51bd79bb6887da3f494'),\n  },\n  [Chain.Holesky]: {\n    name: 'holesky',\n    blockNumber: BIGINT_0,\n    stateRoot: hexToBytes('0x69d8c9d72f6fa4ad42d4702b433707212f90db395eb54dc20bc85de253788783'),\n  },\n}\n\nexport enum Hardfork {\n  Chainstart = 'chainstart',\n  Homestead = 'homestead',\n  Dao = 'dao',\n  TangerineWhistle = 'tangerineWhistle',\n  SpuriousDragon = 'spuriousDragon',\n  Byzantium = 'byzantium',\n  Constantinople = 'constantinople',\n  Petersburg = 'petersburg',\n  Istanbul = 'istanbul',\n  MuirGlacier = 'muirGlacier',\n  Berlin = 'berlin',\n  London = 'london',\n  ArrowGlacier = 'arrowGlacier',\n  GrayGlacier = 'grayGlacier',\n  MergeForkIdTransition = 'mergeForkIdTransition',\n  Paris = 'paris',\n  Shanghai = 'shanghai',\n  Cancun = 'cancun',\n}\n\nexport enum ConsensusType {\n  ProofOfStake = 'pos',\n  ProofOfWork = 'pow',\n  ProofOfAuthority = 'poa',\n}\n\nexport enum ConsensusAlgorithm {\n  Ethash = 'ethash',\n  Clique = 'clique',\n  Casper = 'casper',\n}\n\nexport enum CustomChain {\n  /**\n   * Polygon (Matic) Mainnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMainnet = 'polygon-mainnet',\n\n  /**\n   * Polygon (Matic) Mumbai Testnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMumbai = 'polygon-mumbai',\n\n  /**\n   * Arbitrum One - mainnet for Arbitrum roll-up\n   *\n   * - [Documentation](https://developer.offchainlabs.com/public-chains)\n   */\n  ArbitrumOne = 'arbitrum-one',\n\n  /**\n   * xDai EVM sidechain with a native stable token\n   *\n   * - [Documentation](https://www.xdaichain.com/)\n   */\n  xDaiChain = 'x-dai-chain',\n\n  /**\n   * Optimistic Kovan - testnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticKovan = 'optimistic-kovan',\n\n  /**\n   * Optimistic Ethereum - mainnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticEthereum = 'optimistic-ethereum',\n}\n","import { Hardfork } from './enums.js'\n\nimport type { EIPConfig } from './types.js'\n\ntype EIPsDict = {\n  [key: string]: EIPConfig\n}\n\nenum Status {\n  Draft = 'draft',\n  Review = 'review',\n  Final = 'final',\n}\n\nexport const EIPs: EIPsDict = {\n  1153: {\n    comment: 'Transient storage opcodes',\n    url: 'https://eips.ethereum.org/EIPS/eip-1153',\n    status: Status.Review,\n    minimumHardfork: Hardfork.Chainstart,\n    requiredEIPs: [],\n    gasPrices: {\n      tstore: {\n        v: 100,\n        d: 'Base fee of the TSTORE opcode',\n      },\n      tload: {\n        v: 100,\n        d: 'Base fee of the TLOAD opcode',\n      },\n    },\n  },\n  1559: {\n    comment: 'Fee market change for ETH 1.0 chain',\n    url: 'https://eips.ethereum.org/EIPS/eip-1559',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Berlin,\n    requiredEIPs: [2930],\n    gasConfig: {\n      baseFeeMaxChangeDenominator: {\n        v: 8,\n        d: 'Maximum base fee change denominator',\n      },\n      elasticityMultiplier: {\n        v: 2,\n        d: 'Maximum block gas target elasticity',\n      },\n      initialBaseFee: {\n        v: 1000000000,\n        d: 'Initial base fee on first EIP1559 block',\n      },\n    },\n  },\n  2315: {\n    comment: 'Simple subroutines for the EVM',\n    url: 'https://eips.ethereum.org/EIPS/eip-2315',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.Istanbul,\n    requiredEIPs: [],\n    gasPrices: {\n      beginsub: {\n        v: 2,\n        d: 'Base fee of the BEGINSUB opcode',\n      },\n      returnsub: {\n        v: 5,\n        d: 'Base fee of the RETURNSUB opcode',\n      },\n      jumpsub: {\n        v: 10,\n        d: 'Base fee of the JUMPSUB opcode',\n      },\n    },\n  },\n  2565: {\n    comment: 'ModExp gas cost',\n    url: 'https://eips.ethereum.org/EIPS/eip-2565',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Byzantium,\n    requiredEIPs: [],\n    gasPrices: {\n      modexpGquaddivisor: {\n        v: 3,\n        d: 'Gquaddivisor from modexp precompile for gas calculation',\n      },\n    },\n  },\n  2718: {\n    comment: 'Typed Transaction Envelope',\n    url: 'https://eips.ethereum.org/EIPS/eip-2718',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Chainstart,\n    requiredEIPs: [],\n  },\n  2929: {\n    comment: 'Gas cost increases for state access opcodes',\n    url: 'https://eips.ethereum.org/EIPS/eip-2929',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Chainstart,\n    requiredEIPs: [],\n    gasPrices: {\n      coldsload: {\n        v: 2100,\n        d: 'Gas cost of the first read of storage from a given location (per transaction)',\n      },\n      coldaccountaccess: {\n        v: 2600,\n        d: 'Gas cost of the first read of a given address (per transaction)',\n      },\n      warmstorageread: {\n        v: 100,\n        d: \"Gas cost of reading storage locations which have already loaded 'cold'\",\n      },\n      sstoreCleanGasEIP2200: {\n        v: 2900,\n        d: 'Once per SSTORE operation from clean non-zero to something else',\n      },\n      sstoreNoopGasEIP2200: {\n        v: 100,\n        d: \"Once per SSTORE operation if the value doesn't change\",\n      },\n      sstoreDirtyGasEIP2200: {\n        v: 100,\n        d: 'Once per SSTORE operation if a dirty value is changed',\n      },\n      sstoreInitRefundEIP2200: {\n        v: 19900,\n        d: 'Once per SSTORE operation for resetting to the original zero value',\n      },\n      sstoreCleanRefundEIP2200: {\n        v: 4900,\n        d: 'Once per SSTORE operation for resetting to the original non-zero value',\n      },\n      call: {\n        v: 0,\n        d: 'Base fee of the CALL opcode',\n      },\n      callcode: {\n        v: 0,\n        d: 'Base fee of the CALLCODE opcode',\n      },\n      delegatecall: {\n        v: 0,\n        d: 'Base fee of the DELEGATECALL opcode',\n      },\n      staticcall: {\n        v: 0,\n        d: 'Base fee of the STATICCALL opcode',\n      },\n      balance: {\n        v: 0,\n        d: 'Base fee of the BALANCE opcode',\n      },\n      extcodesize: {\n        v: 0,\n        d: 'Base fee of the EXTCODESIZE opcode',\n      },\n      extcodecopy: {\n        v: 0,\n        d: 'Base fee of the EXTCODECOPY opcode',\n      },\n      extcodehash: {\n        v: 0,\n        d: 'Base fee of the EXTCODEHASH opcode',\n      },\n      sload: {\n        v: 0,\n        d: 'Base fee of the SLOAD opcode',\n      },\n      sstore: {\n        v: 0,\n        d: 'Base fee of the SSTORE opcode',\n      },\n    },\n  },\n  2930: {\n    comment: 'Optional access lists',\n    url: 'https://eips.ethereum.org/EIPS/eip-2930',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Istanbul,\n    requiredEIPs: [2718, 2929],\n    gasPrices: {\n      accessListStorageKeyCost: {\n        v: 1900,\n        d: 'Gas cost per storage key in an Access List transaction',\n      },\n      accessListAddressCost: {\n        v: 2400,\n        d: 'Gas cost per storage key in an Access List transaction',\n      },\n    },\n  },\n  3074: {\n    comment: 'AUTH and AUTHCALL opcodes',\n    url: 'https://eips.ethereum.org/EIPS/eip-3074',\n    status: Status.Review,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n    gasPrices: {\n      auth: {\n        v: 3100,\n        d: 'Gas cost of the AUTH opcode',\n      },\n      authcall: {\n        v: 0,\n        d: 'Gas cost of the AUTHCALL opcode',\n      },\n      authcallValueTransfer: {\n        v: 6700,\n        d: 'Paid for CALL when the value transfer is non-zero',\n      },\n    },\n  },\n  3198: {\n    comment: 'BASEFEE opcode',\n    url: 'https://eips.ethereum.org/EIPS/eip-3198',\n    status: Status.Final,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n    gasPrices: {\n      basefee: {\n        v: 2,\n        d: 'Gas cost of the BASEFEE opcode',\n      },\n    },\n  },\n  3529: {\n    comment: 'Reduction in refunds',\n    url: 'https://eips.ethereum.org/EIPS/eip-3529',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Berlin,\n    requiredEIPs: [2929],\n    gasConfig: {\n      maxRefundQuotient: {\n        v: 5,\n        d: 'Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)',\n      },\n    },\n    gasPrices: {\n      selfdestructRefund: {\n        v: 0,\n        d: 'Refunded following a selfdestruct operation',\n      },\n      sstoreClearRefundEIP2200: {\n        v: 4800,\n        d: 'Once per SSTORE operation for clearing an originally existing storage slot',\n      },\n    },\n  },\n  3540: {\n    comment: 'EVM Object Format (EOF) v1',\n    url: 'https://eips.ethereum.org/EIPS/eip-3540',\n    status: Status.Review,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [3541],\n  },\n  3541: {\n    comment: 'Reject new contracts starting with the 0xEF byte',\n    url: 'https://eips.ethereum.org/EIPS/eip-3541',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Berlin,\n    requiredEIPs: [],\n  },\n  3554: {\n    comment: 'Difficulty Bomb Delay to December 1st 2021',\n    url: 'https://eips.ethereum.org/EIPS/eip-3554',\n    status: Status.Final,\n    minimumHardfork: Hardfork.MuirGlacier,\n    requiredEIPs: [],\n    pow: {\n      difficultyBombDelay: {\n        v: 9500000,\n        d: 'the amount of blocks to delay the difficulty bomb with',\n      },\n    },\n  },\n  3607: {\n    comment: 'Reject transactions from senders with deployed code',\n    url: 'https://eips.ethereum.org/EIPS/eip-3607',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Chainstart,\n    requiredEIPs: [],\n  },\n  3651: {\n    comment: 'Warm COINBASE',\n    url: 'https://eips.ethereum.org/EIPS/eip-3651',\n    status: Status.Review,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [2929],\n  },\n  3670: {\n    comment: 'EOF - Code Validation',\n    url: 'https://eips.ethereum.org/EIPS/eip-3670',\n    status: 'Review',\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [3540],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n  },\n  3675: {\n    comment: 'Upgrade consensus to Proof-of-Stake',\n    url: 'https://eips.ethereum.org/EIPS/eip-3675',\n    status: Status.Final,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n  },\n  3855: {\n    comment: 'PUSH0 instruction',\n    url: 'https://eips.ethereum.org/EIPS/eip-3855',\n    status: Status.Review,\n    minimumHardfork: Hardfork.Chainstart,\n    requiredEIPs: [],\n    gasPrices: {\n      push0: {\n        v: 2,\n        d: 'Base fee of the PUSH0 opcode',\n      },\n    },\n  },\n  3860: {\n    comment: 'Limit and meter initcode',\n    url: 'https://eips.ethereum.org/EIPS/eip-3860',\n    status: Status.Review,\n    minimumHardfork: Hardfork.SpuriousDragon,\n    requiredEIPs: [],\n    gasPrices: {\n      initCodeWordCost: {\n        v: 2,\n        d: 'Gas to pay for each word (32 bytes) of initcode when creating a contract',\n      },\n    },\n    vm: {\n      maxInitCodeSize: {\n        v: 49152,\n        d: 'Maximum length of initialization code when creating a contract',\n      },\n    },\n  },\n  4345: {\n    comment: 'Difficulty Bomb Delay to June 2022',\n    url: 'https://eips.ethereum.org/EIPS/eip-4345',\n    status: Status.Final,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n    pow: {\n      difficultyBombDelay: {\n        v: 10700000,\n        d: 'the amount of blocks to delay the difficulty bomb with',\n      },\n    },\n  },\n  4399: {\n    comment: 'Supplant DIFFICULTY opcode with PREVRANDAO',\n    url: 'https://eips.ethereum.org/EIPS/eip-4399',\n    status: Status.Review,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n    gasPrices: {\n      prevrandao: {\n        v: 2,\n        d: 'Base fee of the PREVRANDAO opcode (previously DIFFICULTY)',\n      },\n    },\n  },\n  4788: {\n    comment: 'Beacon block root in the EVM',\n    url: 'https://eips.ethereum.org/EIPS/eip-4788',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.Cancun,\n    requiredEIPs: [],\n    gasPrices: {},\n    vm: {\n      historicalRootsLength: {\n        v: 8191,\n        d: 'The modulo parameter of the beaconroot ring buffer in the beaconroot statefull precompile',\n      },\n    },\n  },\n  4844: {\n    comment: 'Shard Blob Transactions',\n    url: 'https://eips.ethereum.org/EIPS/eip-4844',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.Paris,\n    requiredEIPs: [1559, 2718, 2930, 4895],\n    gasConfig: {\n      blobGasPerBlob: {\n        v: 131072,\n        d: 'The base fee for blob gas per blob',\n      },\n      targetBlobGasPerBlock: {\n        v: 393216,\n        d: 'The target blob gas consumed per block',\n      },\n      maxblobGasPerBlock: {\n        v: 786432,\n        d: 'The max blob gas allowable per block',\n      },\n      blobGasPriceUpdateFraction: {\n        v: 3338477,\n        d: 'The denominator used in the exponential when calculating a blob gas price',\n      },\n    },\n    gasPrices: {\n      simpleGasPerBlob: {\n        v: 12000,\n        d: 'The basic gas fee for each blob',\n      },\n      minBlobGasPrice: {\n        v: 1,\n        d: 'The minimum fee per blob gas',\n      },\n      kzgPointEvaluationGasPrecompilePrice: {\n        v: 50000,\n        d: 'The fee associated with the point evaluation precompile',\n      },\n      blobhash: {\n        v: 3,\n        d: 'Base fee of the BLOBHASH opcode',\n      },\n    },\n    sharding: {\n      blobCommitmentVersionKzg: {\n        v: 1,\n        d: 'The number indicated a versioned hash is a KZG commitment',\n      },\n      fieldElementsPerBlob: {\n        v: 4096,\n        d: 'The number of field elements allowed per blob',\n      },\n    },\n  },\n  4895: {\n    comment: 'Beacon chain push withdrawals as operations',\n    url: 'https://eips.ethereum.org/EIPS/eip-4895',\n    status: Status.Review,\n    minimumHardfork: Hardfork.Paris,\n    requiredEIPs: [],\n  },\n  5133: {\n    comment: 'Delaying Difficulty Bomb to mid-September 2022',\n    url: 'https://eips.ethereum.org/EIPS/eip-5133',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.GrayGlacier,\n    requiredEIPs: [],\n    pow: {\n      difficultyBombDelay: {\n        v: 11400000,\n        d: 'the amount of blocks to delay the difficulty bomb with',\n      },\n    },\n  },\n  5656: {\n    comment: 'MCOPY - Memory copying instruction',\n    url: 'https://eips.ethereum.org/EIPS/eip-5656',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.Shanghai,\n    requiredEIPs: [],\n    gasPrices: {\n      mcopy: {\n        v: 3,\n        d: 'Base fee of the MCOPY opcode',\n      },\n    },\n  },\n  6780: {\n    comment: 'SELFDESTRUCT only in same transaction',\n    url: 'https://eips.ethereum.org/EIPS/eip-6780',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n  },\n  7516: {\n    comment: 'BLOBBASEFEE opcode',\n    url: 'https://eips.ethereum.org/EIPS/eip-7516',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.Paris,\n    requiredEIPs: [4844],\n    gasPrices: {\n      blobbasefee: {\n        v: 2,\n        d: 'Gas cost of the BLOBBASEFEE opcode',\n      },\n    },\n  },\n}\n","import type { HardforkConfig } from './types.js'\n\ntype HardforksDict = {\n  [key: string]: HardforkConfig\n}\n\nenum Status {\n  Draft = 'draft',\n  Review = 'review',\n  Final = 'final',\n}\n\nexport const hardforks: HardforksDict = {\n  chainstart: {\n    name: 'chainstart',\n    comment: 'Start of the Ethereum main chain',\n    url: '',\n    status: Status.Final,\n    gasConfig: {\n      minGasLimit: {\n        v: 5000,\n        d: 'Minimum the gas limit may ever be',\n      },\n      gasLimitBoundDivisor: {\n        v: 1024,\n        d: 'The bound divisor of the gas limit, used in update calculations',\n      },\n      maxRefundQuotient: {\n        v: 2,\n        d: 'Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)',\n      },\n    },\n    gasPrices: {\n      base: {\n        v: 2,\n        d: 'Gas base cost, used e.g. for ChainID opcode (Istanbul)',\n      },\n      exp: {\n        v: 10,\n        d: 'Base fee of the EXP opcode',\n      },\n      expByte: {\n        v: 10,\n        d: 'Times ceil(log256(exponent)) for the EXP instruction',\n      },\n      keccak256: {\n        v: 30,\n        d: 'Base fee of the SHA3 opcode',\n      },\n      keccak256Word: {\n        v: 6,\n        d: \"Once per word of the SHA3 operation's data\",\n      },\n      sload: {\n        v: 50,\n        d: 'Base fee of the SLOAD opcode',\n      },\n      sstoreSet: {\n        v: 20000,\n        d: 'Once per SSTORE operation if the zeroness changes from zero',\n      },\n      sstoreReset: {\n        v: 5000,\n        d: 'Once per SSTORE operation if the zeroness does not change from zero',\n      },\n      sstoreRefund: {\n        v: 15000,\n        d: 'Once per SSTORE operation if the zeroness changes to zero',\n      },\n      jumpdest: {\n        v: 1,\n        d: 'Base fee of the JUMPDEST opcode',\n      },\n      log: {\n        v: 375,\n        d: 'Base fee of the LOG opcode',\n      },\n      logData: {\n        v: 8,\n        d: \"Per byte in a LOG* operation's data\",\n      },\n      logTopic: {\n        v: 375,\n        d: 'Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas',\n      },\n      create: {\n        v: 32000,\n        d: 'Base fee of the CREATE opcode',\n      },\n      call: {\n        v: 40,\n        d: 'Base fee of the CALL opcode',\n      },\n      callStipend: {\n        v: 2300,\n        d: 'Free gas given at beginning of call',\n      },\n      callValueTransfer: {\n        v: 9000,\n        d: 'Paid for CALL when the value transfor is non-zero',\n      },\n      callNewAccount: {\n        v: 25000,\n        d: \"Paid for CALL when the destination address didn't exist prior\",\n      },\n      selfdestructRefund: {\n        v: 24000,\n        d: 'Refunded following a selfdestruct operation',\n      },\n      memory: {\n        v: 3,\n        d: 'Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL',\n      },\n      quadCoeffDiv: {\n        v: 512,\n        d: 'Divisor for the quadratic particle of the memory cost equation',\n      },\n      createData: {\n        v: 200,\n        d: '',\n      },\n      tx: {\n        v: 21000,\n        d: 'Per transaction. NOTE: Not payable on data of calls between transactions',\n      },\n      txCreation: {\n        v: 32000,\n        d: 'The cost of creating a contract via tx',\n      },\n      txDataZero: {\n        v: 4,\n        d: 'Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions',\n      },\n      txDataNonZero: {\n        v: 68,\n        d: 'Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions',\n      },\n      copy: {\n        v: 3,\n        d: 'Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added',\n      },\n      ecRecover: {\n        v: 3000,\n        d: '',\n      },\n      sha256: {\n        v: 60,\n        d: '',\n      },\n      sha256Word: {\n        v: 12,\n        d: '',\n      },\n      ripemd160: {\n        v: 600,\n        d: '',\n      },\n      ripemd160Word: {\n        v: 120,\n        d: '',\n      },\n      identity: {\n        v: 15,\n        d: '',\n      },\n      identityWord: {\n        v: 3,\n        d: '',\n      },\n      stop: {\n        v: 0,\n        d: 'Base fee of the STOP opcode',\n      },\n      add: {\n        v: 3,\n        d: 'Base fee of the ADD opcode',\n      },\n      mul: {\n        v: 5,\n        d: 'Base fee of the MUL opcode',\n      },\n      sub: {\n        v: 3,\n        d: 'Base fee of the SUB opcode',\n      },\n      div: {\n        v: 5,\n        d: 'Base fee of the DIV opcode',\n      },\n      sdiv: {\n        v: 5,\n        d: 'Base fee of the SDIV opcode',\n      },\n      mod: {\n        v: 5,\n        d: 'Base fee of the MOD opcode',\n      },\n      smod: {\n        v: 5,\n        d: 'Base fee of the SMOD opcode',\n      },\n      addmod: {\n        v: 8,\n        d: 'Base fee of the ADDMOD opcode',\n      },\n      mulmod: {\n        v: 8,\n        d: 'Base fee of the MULMOD opcode',\n      },\n      signextend: {\n        v: 5,\n        d: 'Base fee of the SIGNEXTEND opcode',\n      },\n      lt: {\n        v: 3,\n        d: 'Base fee of the LT opcode',\n      },\n      gt: {\n        v: 3,\n        d: 'Base fee of the GT opcode',\n      },\n      slt: {\n        v: 3,\n        d: 'Base fee of the SLT opcode',\n      },\n      sgt: {\n        v: 3,\n        d: 'Base fee of the SGT opcode',\n      },\n      eq: {\n        v: 3,\n        d: 'Base fee of the EQ opcode',\n      },\n      iszero: {\n        v: 3,\n        d: 'Base fee of the ISZERO opcode',\n      },\n      and: {\n        v: 3,\n        d: 'Base fee of the AND opcode',\n      },\n      or: {\n        v: 3,\n        d: 'Base fee of the OR opcode',\n      },\n      xor: {\n        v: 3,\n        d: 'Base fee of the XOR opcode',\n      },\n      not: {\n        v: 3,\n        d: 'Base fee of the NOT opcode',\n      },\n      byte: {\n        v: 3,\n        d: 'Base fee of the BYTE opcode',\n      },\n      address: {\n        v: 2,\n        d: 'Base fee of the ADDRESS opcode',\n      },\n      balance: {\n        v: 20,\n        d: 'Base fee of the BALANCE opcode',\n      },\n      origin: {\n        v: 2,\n        d: 'Base fee of the ORIGIN opcode',\n      },\n      caller: {\n        v: 2,\n        d: 'Base fee of the CALLER opcode',\n      },\n      callvalue: {\n        v: 2,\n        d: 'Base fee of the CALLVALUE opcode',\n      },\n      calldataload: {\n        v: 3,\n        d: 'Base fee of the CALLDATALOAD opcode',\n      },\n      calldatasize: {\n        v: 2,\n        d: 'Base fee of the CALLDATASIZE opcode',\n      },\n      calldatacopy: {\n        v: 3,\n        d: 'Base fee of the CALLDATACOPY opcode',\n      },\n      codesize: {\n        v: 2,\n        d: 'Base fee of the CODESIZE opcode',\n      },\n      codecopy: {\n        v: 3,\n        d: 'Base fee of the CODECOPY opcode',\n      },\n      gasprice: {\n        v: 2,\n        d: 'Base fee of the GASPRICE opcode',\n      },\n      extcodesize: {\n        v: 20,\n        d: 'Base fee of the EXTCODESIZE opcode',\n      },\n      extcodecopy: {\n        v: 20,\n        d: 'Base fee of the EXTCODECOPY opcode',\n      },\n      blockhash: {\n        v: 20,\n        d: 'Base fee of the BLOCKHASH opcode',\n      },\n      coinbase: {\n        v: 2,\n        d: 'Base fee of the COINBASE opcode',\n      },\n      timestamp: {\n        v: 2,\n        d: 'Base fee of the TIMESTAMP opcode',\n      },\n      number: {\n        v: 2,\n        d: 'Base fee of the NUMBER opcode',\n      },\n      difficulty: {\n        v: 2,\n        d: 'Base fee of the DIFFICULTY opcode',\n      },\n      gaslimit: {\n        v: 2,\n        d: 'Base fee of the GASLIMIT opcode',\n      },\n      pop: {\n        v: 2,\n        d: 'Base fee of the POP opcode',\n      },\n      mload: {\n        v: 3,\n        d: 'Base fee of the MLOAD opcode',\n      },\n      mstore: {\n        v: 3,\n        d: 'Base fee of the MSTORE opcode',\n      },\n      mstore8: {\n        v: 3,\n        d: 'Base fee of the MSTORE8 opcode',\n      },\n      sstore: {\n        v: 0,\n        d: 'Base fee of the SSTORE opcode',\n      },\n      jump: {\n        v: 8,\n        d: 'Base fee of the JUMP opcode',\n      },\n      jumpi: {\n        v: 10,\n        d: 'Base fee of the JUMPI opcode',\n      },\n      pc: {\n        v: 2,\n        d: 'Base fee of the PC opcode',\n      },\n      msize: {\n        v: 2,\n        d: 'Base fee of the MSIZE opcode',\n      },\n      gas: {\n        v: 2,\n        d: 'Base fee of the GAS opcode',\n      },\n      push: {\n        v: 3,\n        d: 'Base fee of the PUSH opcode',\n      },\n      dup: {\n        v: 3,\n        d: 'Base fee of the DUP opcode',\n      },\n      swap: {\n        v: 3,\n        d: 'Base fee of the SWAP opcode',\n      },\n      callcode: {\n        v: 40,\n        d: 'Base fee of the CALLCODE opcode',\n      },\n      return: {\n        v: 0,\n        d: 'Base fee of the RETURN opcode',\n      },\n      invalid: {\n        v: 0,\n        d: 'Base fee of the INVALID opcode',\n      },\n      selfdestruct: {\n        v: 0,\n        d: 'Base fee of the SELFDESTRUCT opcode',\n      },\n    },\n    vm: {\n      stackLimit: {\n        v: 1024,\n        d: 'Maximum size of VM stack allowed',\n      },\n      callCreateDepth: {\n        v: 1024,\n        d: 'Maximum depth of call/create stack',\n      },\n      maxExtraDataSize: {\n        v: 32,\n        d: 'Maximum size extra data may be after Genesis',\n      },\n    },\n    pow: {\n      minimumDifficulty: {\n        v: 131072,\n        d: 'The minimum that the difficulty may ever be',\n      },\n      difficultyBoundDivisor: {\n        v: 2048,\n        d: 'The bound divisor of the difficulty, used in the update calculations',\n      },\n      durationLimit: {\n        v: 13,\n        d: 'The decision boundary on the blocktime duration used to determine whether difficulty should go up or not',\n      },\n      epochDuration: {\n        v: 30000,\n        d: 'Duration between proof-of-work epochs',\n      },\n      timebombPeriod: {\n        v: 100000,\n        d: 'Exponential difficulty timebomb period',\n      },\n      minerReward: {\n        v: BigInt('5000000000000000000'),\n        d: 'the amount a miner get rewarded for mining a block',\n      },\n      difficultyBombDelay: {\n        v: 0,\n        d: 'the amount of blocks to delay the difficulty bomb with',\n      },\n    },\n  },\n  homestead: {\n    name: 'homestead',\n    comment: 'Homestead hardfork with protocol and network changes',\n    url: 'https://eips.ethereum.org/EIPS/eip-606',\n    status: Status.Final,\n    gasPrices: {\n      delegatecall: {\n        v: 40,\n        d: 'Base fee of the DELEGATECALL opcode',\n      },\n    },\n  },\n  dao: {\n    name: 'dao',\n    comment: 'DAO rescue hardfork',\n    url: 'https://eips.ethereum.org/EIPS/eip-779',\n    status: Status.Final,\n  },\n  tangerineWhistle: {\n    name: 'tangerineWhistle',\n    comment: 'Hardfork with gas cost changes for IO-heavy operations',\n    url: 'https://eips.ethereum.org/EIPS/eip-608',\n    status: Status.Final,\n    gasPrices: {\n      sload: {\n        v: 200,\n        d: 'Once per SLOAD operation',\n      },\n      call: {\n        v: 700,\n        d: 'Once per CALL operation & message call transaction',\n      },\n      extcodesize: {\n        v: 700,\n        d: 'Base fee of the EXTCODESIZE opcode',\n      },\n      extcodecopy: {\n        v: 700,\n        d: 'Base fee of the EXTCODECOPY opcode',\n      },\n      balance: {\n        v: 400,\n        d: 'Base fee of the BALANCE opcode',\n      },\n      delegatecall: {\n        v: 700,\n        d: 'Base fee of the DELEGATECALL opcode',\n      },\n      callcode: {\n        v: 700,\n        d: 'Base fee of the CALLCODE opcode',\n      },\n      selfdestruct: {\n        v: 5000,\n        d: 'Base fee of the SELFDESTRUCT opcode',\n      },\n    },\n  },\n  spuriousDragon: {\n    name: 'spuriousDragon',\n    comment:\n      'HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit',\n    url: 'https://eips.ethereum.org/EIPS/eip-607',\n    status: Status.Final,\n    gasPrices: {\n      expByte: {\n        v: 50,\n        d: 'Times ceil(log256(exponent)) for the EXP instruction',\n      },\n    },\n    vm: {\n      maxCodeSize: {\n        v: 24576,\n        d: 'Maximum length of contract code',\n      },\n    },\n  },\n  byzantium: {\n    name: 'byzantium',\n    comment: 'Hardfork with new precompiles, instructions and other protocol changes',\n    url: 'https://eips.ethereum.org/EIPS/eip-609',\n    status: Status.Final,\n    gasPrices: {\n      modexpGquaddivisor: {\n        v: 20,\n        d: 'Gquaddivisor from modexp precompile for gas calculation',\n      },\n      ecAdd: {\n        v: 500,\n        d: 'Gas costs for curve addition precompile',\n      },\n      ecMul: {\n        v: 40000,\n        d: 'Gas costs for curve multiplication precompile',\n      },\n      ecPairing: {\n        v: 100000,\n        d: 'Base gas costs for curve pairing precompile',\n      },\n      ecPairingWord: {\n        v: 80000,\n        d: 'Gas costs regarding curve pairing precompile input length',\n      },\n      revert: {\n        v: 0,\n        d: 'Base fee of the REVERT opcode',\n      },\n      staticcall: {\n        v: 700,\n        d: 'Base fee of the STATICCALL opcode',\n      },\n      returndatasize: {\n        v: 2,\n        d: 'Base fee of the RETURNDATASIZE opcode',\n      },\n      returndatacopy: {\n        v: 3,\n        d: 'Base fee of the RETURNDATACOPY opcode',\n      },\n    },\n    pow: {\n      minerReward: {\n        v: BigInt('3000000000000000000'),\n        d: 'the amount a miner get rewarded for mining a block',\n      },\n      difficultyBombDelay: {\n        v: 3000000,\n        d: 'the amount of blocks to delay the difficulty bomb with',\n      },\n    },\n  },\n  constantinople: {\n    name: 'constantinople',\n    comment: 'Postponed hardfork including EIP-1283 (SSTORE gas metering changes)',\n    url: 'https://eips.ethereum.org/EIPS/eip-1013',\n    status: Status.Final,\n    gasPrices: {\n      netSstoreNoopGas: {\n        v: 200,\n        d: \"Once per SSTORE operation if the value doesn't change\",\n      },\n      netSstoreInitGas: {\n        v: 20000,\n        d: 'Once per SSTORE operation from clean zero',\n      },\n      netSstoreCleanGas: {\n        v: 5000,\n        d: 'Once per SSTORE operation from clean non-zero',\n      },\n      netSstoreDirtyGas: {\n        v: 200,\n        d: 'Once per SSTORE operation from dirty',\n      },\n      netSstoreClearRefund: {\n        v: 15000,\n        d: 'Once per SSTORE operation for clearing an originally existing storage slot',\n      },\n      netSstoreResetRefund: {\n        v: 4800,\n        d: 'Once per SSTORE operation for resetting to the original non-zero value',\n      },\n      netSstoreResetClearRefund: {\n        v: 19800,\n        d: 'Once per SSTORE operation for resetting to the original zero value',\n      },\n      shl: {\n        v: 3,\n        d: 'Base fee of the SHL opcode',\n      },\n      shr: {\n        v: 3,\n        d: 'Base fee of the SHR opcode',\n      },\n      sar: {\n        v: 3,\n        d: 'Base fee of the SAR opcode',\n      },\n      extcodehash: {\n        v: 400,\n        d: 'Base fee of the EXTCODEHASH opcode',\n      },\n      create2: {\n        v: 32000,\n        d: 'Base fee of the CREATE2 opcode',\n      },\n    },\n    pow: {\n      minerReward: {\n        v: BigInt('2000000000000000000'),\n        d: 'The amount a miner gets rewarded for mining a block',\n      },\n      difficultyBombDelay: {\n        v: 5000000,\n        d: 'the amount of blocks to delay the difficulty bomb with',\n      },\n    },\n  },\n  petersburg: {\n    name: 'petersburg',\n    comment:\n      'Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople',\n    url: 'https://eips.ethereum.org/EIPS/eip-1716',\n    status: Status.Final,\n    gasPrices: {\n      netSstoreNoopGas: {\n        v: null,\n        d: 'Removed along EIP-1283',\n      },\n      netSstoreInitGas: {\n        v: null,\n        d: 'Removed along EIP-1283',\n      },\n      netSstoreCleanGas: {\n        v: null,\n        d: 'Removed along EIP-1283',\n      },\n      netSstoreDirtyGas: {\n        v: null,\n        d: 'Removed along EIP-1283',\n      },\n      netSstoreClearRefund: {\n        v: null,\n        d: 'Removed along EIP-1283',\n      },\n      netSstoreResetRefund: {\n        v: null,\n        d: 'Removed along EIP-1283',\n      },\n      netSstoreResetClearRefund: {\n        v: null,\n        d: 'Removed along EIP-1283',\n      },\n    },\n  },\n  istanbul: {\n    name: 'istanbul',\n    comment: 'HF targeted for December 2019 following the Constantinople/Petersburg HF',\n    url: 'https://eips.ethereum.org/EIPS/eip-1679',\n    status: Status.Final,\n    gasConfig: {},\n    gasPrices: {\n      blake2Round: {\n        v: 1,\n        d: 'Gas cost per round for the Blake2 F precompile',\n      },\n      ecAdd: {\n        v: 150,\n        d: 'Gas costs for curve addition precompile',\n      },\n      ecMul: {\n        v: 6000,\n        d: 'Gas costs for curve multiplication precompile',\n      },\n      ecPairing: {\n        v: 45000,\n        d: 'Base gas costs for curve pairing precompile',\n      },\n      ecPairingWord: {\n        v: 34000,\n        d: 'Gas costs regarding curve pairing precompile input length',\n      },\n      txDataNonZero: {\n        v: 16,\n        d: 'Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions',\n      },\n      sstoreSentryGasEIP2200: {\n        v: 2300,\n        d: 'Minimum gas required to be present for an SSTORE call, not consumed',\n      },\n      sstoreNoopGasEIP2200: {\n        v: 800,\n        d: \"Once per SSTORE operation if the value doesn't change\",\n      },\n      sstoreDirtyGasEIP2200: {\n        v: 800,\n        d: 'Once per SSTORE operation if a dirty value is changed',\n      },\n      sstoreInitGasEIP2200: {\n        v: 20000,\n        d: 'Once per SSTORE operation from clean zero to non-zero',\n      },\n      sstoreInitRefundEIP2200: {\n        v: 19200,\n        d: 'Once per SSTORE operation for resetting to the original zero value',\n      },\n      sstoreCleanGasEIP2200: {\n        v: 5000,\n        d: 'Once per SSTORE operation from clean non-zero to something else',\n      },\n      sstoreCleanRefundEIP2200: {\n        v: 4200,\n        d: 'Once per SSTORE operation for resetting to the original non-zero value',\n      },\n      sstoreClearRefundEIP2200: {\n        v: 15000,\n        d: 'Once per SSTORE operation for clearing an originally existing storage slot',\n      },\n      balance: {\n        v: 700,\n        d: 'Base fee of the BALANCE opcode',\n      },\n      extcodehash: {\n        v: 700,\n        d: 'Base fee of the EXTCODEHASH opcode',\n      },\n      chainid: {\n        v: 2,\n        d: 'Base fee of the CHAINID opcode',\n      },\n      selfbalance: {\n        v: 5,\n        d: 'Base fee of the SELFBALANCE opcode',\n      },\n      sload: {\n        v: 800,\n        d: 'Base fee of the SLOAD opcode',\n      },\n    },\n  },\n  muirGlacier: {\n    name: 'muirGlacier',\n    comment: 'HF to delay the difficulty bomb',\n    url: 'https://eips.ethereum.org/EIPS/eip-2384',\n    status: Status.Final,\n    pow: {\n      difficultyBombDelay: {\n        v: 9000000,\n        d: 'the amount of blocks to delay the difficulty bomb with',\n      },\n    },\n  },\n  berlin: {\n    name: 'berlin',\n    comment: 'HF targeted for July 2020 following the Muir Glacier HF',\n    url: 'https://eips.ethereum.org/EIPS/eip-2070',\n    status: Status.Final,\n    eips: [2565, 2929, 2718, 2930],\n  },\n  london: {\n    name: 'london',\n    comment: 'HF targeted for July 2021 following the Berlin fork',\n    url: 'https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/london.md',\n    status: Status.Final,\n    eips: [1559, 3198, 3529, 3541],\n  },\n  arrowGlacier: {\n    name: 'arrowGlacier',\n    comment: 'HF to delay the difficulty bomb',\n    url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/arrow-glacier.md',\n    status: Status.Final,\n    eips: [4345],\n  },\n  grayGlacier: {\n    name: 'grayGlacier',\n    comment: 'Delaying the difficulty bomb to Mid September 2022',\n    url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/gray-glacier.md',\n    status: Status.Final,\n    eips: [5133],\n  },\n  paris: {\n    name: 'paris',\n    comment: 'Hardfork to upgrade the consensus mechanism to Proof-of-Stake',\n    url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/merge.md',\n    status: Status.Final,\n    consensus: {\n      type: 'pos',\n      algorithm: 'casper',\n      casper: {},\n    },\n    eips: [3675, 4399],\n  },\n  mergeForkIdTransition: {\n    name: 'mergeForkIdTransition',\n    comment: 'Pre-merge hardfork to fork off non-upgraded clients',\n    url: 'https://eips.ethereum.org/EIPS/eip-3675',\n    status: Status.Final,\n    eips: [],\n  },\n  shanghai: {\n    name: 'shanghai',\n    comment:\n      'Next feature hardfork after the merge hardfork having withdrawals, warm coinbase, push0, limit/meter initcode',\n    url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/shanghai.md',\n    status: Status.Final,\n    eips: [3651, 3855, 3860, 4895],\n  },\n  cancun: {\n    name: 'cancun',\n    comment:\n      'Next feature hardfork after shanghai, includes proto-danksharding EIP 4844 blobs (still WIP hence not for production use), transient storage opcodes, parent beacon block root availability in EVM, selfdestruct only in same transaction, and blob base fee opcode',\n    url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/cancun.md',\n    status: Status.Final,\n    eips: [1153, 4844, 4788, 5656, 6780, 7516],\n  },\n}\n","import { intToHex, isHexPrefixed, stripHexPrefix } from '@ethereumjs/util'\n\nimport { Hardfork } from './enums.js'\n\ntype ConfigHardfork =\n  | { name: string; block: null; timestamp: number }\n  | { name: string; block: number; timestamp?: number }\n/**\n * Transforms Geth formatted nonce (i.e. hex string) to 8 byte 0x-prefixed string used internally\n * @param nonce string parsed from the Geth genesis file\n * @returns nonce as a 0x-prefixed 8 byte string\n */\nfunction formatNonce(nonce: string): string {\n  if (!nonce || nonce === '0x0') {\n    return '0x0000000000000000'\n  }\n  if (isHexPrefixed(nonce)) {\n    return '0x' + stripHexPrefix(nonce).padStart(16, '0')\n  }\n  return '0x' + nonce.padStart(16, '0')\n}\n\n/**\n * Converts Geth genesis parameters to an EthereumJS compatible `CommonOpts` object\n * @param json object representing the Geth genesis file\n * @param optional mergeForkIdPostMerge which clarifies the placement of MergeForkIdTransition\n * hardfork, which by default is post merge as with the merged eth networks but could also come\n * before merge like in kiln genesis\n * @returns genesis parameters in a `CommonOpts` compliant object\n */\nfunction parseGethParams(json: any, mergeForkIdPostMerge: boolean = true) {\n  const {\n    name,\n    config,\n    difficulty,\n    mixHash,\n    gasLimit,\n    coinbase,\n    baseFeePerGas,\n    excessBlobGas,\n  }: {\n    name: string\n    config: any\n    difficulty: string\n    mixHash: string\n    gasLimit: string\n    coinbase: string\n    baseFeePerGas: string\n    excessBlobGas: string\n  } = json\n  let { extraData, timestamp, nonce }: { extraData: string; timestamp: string; nonce: string } =\n    json\n  const genesisTimestamp = Number(timestamp)\n  const { chainId }: { chainId: number } = config\n\n  // geth is not strictly putting empty fields with a 0x prefix\n  if (extraData === '') {\n    extraData = '0x'\n  }\n  // geth may use number for timestamp\n  if (!isHexPrefixed(timestamp)) {\n    timestamp = intToHex(parseInt(timestamp))\n  }\n  // geth may not give us a nonce strictly formatted to an 8 byte hex string\n  if (nonce.length !== 18) {\n    nonce = formatNonce(nonce)\n  }\n\n  // EIP155 and EIP158 are both part of Spurious Dragon hardfork and must occur at the same time\n  // but have different configuration parameters in geth genesis parameters\n  if (config.eip155Block !== config.eip158Block) {\n    throw new Error(\n      'EIP155 block number must equal EIP 158 block number since both are part of SpuriousDragon hardfork and the client only supports activating the full hardfork'\n    )\n  }\n\n  const params = {\n    name,\n    chainId,\n    networkId: chainId,\n    genesis: {\n      timestamp,\n      gasLimit,\n      difficulty,\n      nonce,\n      extraData,\n      mixHash,\n      coinbase,\n      baseFeePerGas,\n      excessBlobGas,\n    },\n    hardfork: undefined as string | undefined,\n    hardforks: [] as ConfigHardfork[],\n    bootstrapNodes: [],\n    consensus:\n      config.clique !== undefined\n        ? {\n            type: 'poa',\n            algorithm: 'clique',\n            clique: {\n              // The recent geth genesis seems to be using blockperiodseconds\n              // and epochlength for clique specification\n              // see: https://hackmd.io/PqZgMpnkSWCWv5joJoFymQ\n              period: config.clique.period ?? config.clique.blockperiodseconds,\n              epoch: config.clique.epoch ?? config.clique.epochlength,\n            },\n          }\n        : {\n            type: 'pow',\n            algorithm: 'ethash',\n            ethash: {},\n          },\n  }\n\n  const forkMap: { [key: string]: { name: string; postMerge?: boolean; isTimestamp?: boolean } } = {\n    [Hardfork.Homestead]: { name: 'homesteadBlock' },\n    [Hardfork.Dao]: { name: 'daoForkBlock' },\n    [Hardfork.TangerineWhistle]: { name: 'eip150Block' },\n    [Hardfork.SpuriousDragon]: { name: 'eip155Block' },\n    [Hardfork.Byzantium]: { name: 'byzantiumBlock' },\n    [Hardfork.Constantinople]: { name: 'constantinopleBlock' },\n    [Hardfork.Petersburg]: { name: 'petersburgBlock' },\n    [Hardfork.Istanbul]: { name: 'istanbulBlock' },\n    [Hardfork.MuirGlacier]: { name: 'muirGlacierBlock' },\n    [Hardfork.Berlin]: { name: 'berlinBlock' },\n    [Hardfork.London]: { name: 'londonBlock' },\n    [Hardfork.MergeForkIdTransition]: { name: 'mergeForkBlock', postMerge: mergeForkIdPostMerge },\n    [Hardfork.Shanghai]: { name: 'shanghaiTime', postMerge: true, isTimestamp: true },\n    [Hardfork.Cancun]: { name: 'cancunTime', postMerge: true, isTimestamp: true },\n  }\n\n  // forkMapRev is the map from config field name to Hardfork\n  const forkMapRev = Object.keys(forkMap).reduce((acc, elem) => {\n    acc[forkMap[elem].name] = elem\n    return acc\n  }, {} as { [key: string]: string })\n  const configHardforkNames = Object.keys(config).filter(\n    (key) => forkMapRev[key] !== undefined && config[key] !== undefined && config[key] !== null\n  )\n\n  params.hardforks = configHardforkNames\n    .map((nameBlock) => ({\n      name: forkMapRev[nameBlock],\n      block:\n        forkMap[forkMapRev[nameBlock]].isTimestamp === true || typeof config[nameBlock] !== 'number'\n          ? null\n          : config[nameBlock],\n      timestamp:\n        forkMap[forkMapRev[nameBlock]].isTimestamp === true && typeof config[nameBlock] === 'number'\n          ? config[nameBlock]\n          : undefined,\n    }))\n    .filter((fork) => fork.block !== null || fork.timestamp !== undefined) as ConfigHardfork[]\n\n  for (const hf of params.hardforks) {\n    if (hf.timestamp === genesisTimestamp) {\n      hf.timestamp = 0\n    }\n  }\n\n  params.hardforks.sort(function (a: ConfigHardfork, b: ConfigHardfork) {\n    return (a.block ?? Infinity) - (b.block ?? Infinity)\n  })\n\n  params.hardforks.sort(function (a: ConfigHardfork, b: ConfigHardfork) {\n    return (a.timestamp ?? genesisTimestamp) - (b.timestamp ?? genesisTimestamp)\n  })\n\n  if (config.terminalTotalDifficulty !== undefined) {\n    // Following points need to be considered for placement of merge hf\n    // - Merge hardfork can't be placed at genesis\n    // - Place merge hf before any hardforks that require CL participation for e.g. withdrawals\n    // - Merge hardfork has to be placed just after genesis if any of the genesis hardforks make CL\n    //   necessary for e.g. withdrawals\n    const mergeConfig = {\n      name: Hardfork.Paris,\n      ttd: config.terminalTotalDifficulty,\n      block: null,\n    }\n\n    // Merge hardfork has to be placed before first hardfork that is dependent on merge\n    const postMergeIndex = params.hardforks.findIndex(\n      (hf: any) => forkMap[hf.name]?.postMerge === true\n    )\n    if (postMergeIndex !== -1) {\n      params.hardforks.splice(postMergeIndex, 0, mergeConfig as unknown as ConfigHardfork)\n    } else {\n      params.hardforks.push(mergeConfig as unknown as ConfigHardfork)\n    }\n  }\n\n  const latestHardfork = params.hardforks.length > 0 ? params.hardforks.slice(-1)[0] : undefined\n  params.hardfork = latestHardfork?.name\n  params.hardforks.unshift({ name: Hardfork.Chainstart, block: 0 })\n\n  return params\n}\n\n/**\n * Parses a genesis.json exported from Geth into parameters for Common instance\n * @param json representing the Geth genesis file\n * @param name optional chain name\n * @returns parsed params\n */\nexport function parseGethGenesis(json: any, name?: string, mergeForkIdPostMerge?: boolean) {\n  try {\n    const required = ['config', 'difficulty', 'gasLimit', 'nonce', 'alloc']\n    if (required.some((field) => !(field in json))) {\n      const missingField = required.filter((field) => !(field in json))\n      throw new Error(`Invalid format, expected geth genesis field \"${missingField}\" missing`)\n    }\n    if (name !== undefined) {\n      json.name = name\n    }\n    return parseGethParams(json, mergeForkIdPostMerge)\n  } catch (e: any) {\n    throw new Error(`Error parsing parameters file: ${e.message}`)\n  }\n}\n","import {\n  BIGINT_0,\n  TypeOutput,\n  bytesToHex,\n  concatBytes,\n  hexToBytes,\n  intToBytes,\n  toType,\n} from '@ethereumjs/util'\nimport { crc32 as crc } from 'crc'\nimport { EventEmitter } from 'events'\n\nimport { chains as CHAIN_SPECS } from './chains.js'\nimport { EIPs } from './eips.js'\nimport { Chain, CustomChain, Hardfork } from './enums.js'\nimport { hardforks as HARDFORK_SPECS } from './hardforks.js'\nimport { parseGethGenesis } from './utils.js'\n\nimport type { ConsensusAlgorithm, ConsensusType } from './enums.js'\nimport type {\n  BootstrapNodeConfig,\n  CasperConfig,\n  ChainConfig,\n  ChainName,\n  ChainsConfig,\n  CliqueConfig,\n  CommonOpts,\n  CustomCommonOpts,\n  EIPConfig,\n  EIPOrHFConfig,\n  EthashConfig,\n  GenesisBlockConfig,\n  GethConfigOpts,\n  HardforkByOpts,\n  HardforkConfig,\n  HardforkTransitionConfig,\n} from './types.js'\nimport type { BigIntLike, PrefixedHexString } from '@ethereumjs/util'\n\ntype HardforkSpecKeys = string // keyof typeof HARDFORK_SPECS\ntype HardforkSpecValues = typeof HARDFORK_SPECS[HardforkSpecKeys]\n\ntype ParamsCacheConfig = Omit<EIPOrHFConfig, 'comment' | 'url' | 'status'>\n\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nexport class Common {\n  readonly DEFAULT_HARDFORK: string | Hardfork\n\n  protected _chainParams: ChainConfig\n  protected _hardfork: string | Hardfork\n  protected _eips: number[] = []\n  protected _customChains: ChainConfig[]\n\n  protected _paramsCache: ParamsCacheConfig = {}\n  protected _activatedEIPsCache: number[] = []\n\n  protected HARDFORK_CHANGES: [HardforkSpecKeys, HardforkSpecValues][]\n\n  public events: EventEmitter\n\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one.\n   *\n   * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n   * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n   *\n   * ```javascript\n   * Common.custom({chainId: 123})\n   * ```\n   *\n   * There are also selected supported custom chains which can be initialized by using one of the\n   * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n   *\n   * ```javascript\n   * Common.custom(CustomChains.MaticMumbai)\n   * ```\n   *\n   * Note that these supported custom chains only provide some base parameters (usually the chain and\n   * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n   * the `@ethereumjs/tx` library to a Layer-2 chain).\n   *\n   * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n   * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n   */\n  static custom(\n    chainParamsOrName: Partial<ChainConfig> | CustomChain,\n    opts: CustomCommonOpts = {}\n  ): Common {\n    const baseChain = opts.baseChain ?? 'mainnet'\n    const standardChainParams = { ...Common._getChainParams(baseChain) }\n    standardChainParams['name'] = 'custom-chain'\n\n    if (typeof chainParamsOrName !== 'string') {\n      return new Common({\n        chain: {\n          ...standardChainParams,\n          ...chainParamsOrName,\n        },\n        ...opts,\n      })\n    } else {\n      if (chainParamsOrName === CustomChain.PolygonMainnet) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMainnet,\n            chainId: 137,\n            networkId: 137,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.PolygonMumbai) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMumbai,\n            chainId: 80001,\n            networkId: 80001,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.ArbitrumOne) {\n        return Common.custom(\n          {\n            name: CustomChain.ArbitrumOne,\n            chainId: 42161,\n            networkId: 42161,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.xDaiChain) {\n        return Common.custom(\n          {\n            name: CustomChain.xDaiChain,\n            chainId: 100,\n            networkId: 100,\n          },\n          opts\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticKovan) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticKovan,\n            chainId: 69,\n            networkId: 69,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticEthereum,\n            chainId: 10,\n            networkId: 10,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n      throw new Error(`Custom chain ${chainParamsOrName} not supported`)\n    }\n  }\n\n  /**\n   * Static method to load and set common from a geth genesis json\n   * @param genesisJson json of geth configuration\n   * @param { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge } to further configure the common instance\n   * @returns Common\n   */\n  static fromGethGenesis(\n    genesisJson: any,\n    { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge }: GethConfigOpts\n  ): Common {\n    const genesisParams = parseGethGenesis(genesisJson, chain, mergeForkIdPostMerge)\n    const common = new Common({\n      chain: genesisParams.name ?? 'custom',\n      customChains: [genesisParams],\n      eips,\n      hardfork: hardfork ?? genesisParams.hardfork,\n    })\n    if (genesisHash !== undefined) {\n      common.setForkHashes(genesisHash)\n    }\n    return common\n  }\n\n  /**\n   * Static method to determine if a {@link chainId} is supported as a standard chain\n   * @param chainId bigint id (`1`) of a standard chain\n   * @returns boolean\n   */\n  static isSupportedChainId(chainId: bigint): boolean {\n    const initializedChains = this.getInitializedChains()\n    return Boolean((initializedChains['names'] as ChainName)[chainId.toString()])\n  }\n\n  protected static _getChainParams(\n    chain: string | number | Chain | bigint,\n    customChains?: ChainConfig[]\n  ): ChainConfig {\n    const initializedChains = this.getInitializedChains(customChains)\n    if (typeof chain === 'number' || typeof chain === 'bigint') {\n      chain = chain.toString()\n\n      if ((initializedChains['names'] as ChainName)[chain]) {\n        const name: string = (initializedChains['names'] as ChainName)[chain]\n        return initializedChains[name] as ChainConfig\n      }\n\n      throw new Error(`Chain with ID ${chain} not supported`)\n    }\n\n    if (initializedChains[chain] !== undefined) {\n      return initializedChains[chain] as ChainConfig\n    }\n\n    throw new Error(`Chain with name ${chain} not supported`)\n  }\n\n  constructor(opts: CommonOpts) {\n    this.events = new EventEmitter()\n\n    this._customChains = opts.customChains ?? []\n    this._chainParams = this.setChain(opts.chain)\n    this.DEFAULT_HARDFORK = this._chainParams.defaultHardfork ?? Hardfork.Shanghai\n    // Assign hardfork changes in the sequence of the applied hardforks\n    this.HARDFORK_CHANGES = this.hardforks().map((hf) => [\n      hf.name as HardforkSpecKeys,\n      HARDFORK_SPECS[hf.name as HardforkSpecKeys],\n    ])\n    this._hardfork = this.DEFAULT_HARDFORK\n    if (opts.hardfork !== undefined) {\n      this.setHardfork(opts.hardfork)\n    }\n    if (opts.eips) {\n      this.setEIPs(opts.eips)\n    }\n    if (Object.keys(this._paramsCache).length === 0) {\n      this._buildParamsCache()\n      this._buildActivatedEIPsCache()\n    }\n  }\n\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain representation.\n   *              Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n  setChain(chain: string | number | Chain | bigint | object): ChainConfig {\n    if (typeof chain === 'number' || typeof chain === 'bigint' || typeof chain === 'string') {\n      this._chainParams = Common._getChainParams(chain, this._customChains)\n    } else if (typeof chain === 'object') {\n      if (this._customChains.length > 0) {\n        throw new Error(\n          'Chain must be a string, number, or bigint when initialized with customChains passed in'\n        )\n      }\n      const required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes']\n      for (const param of required) {\n        if (!(param in chain)) {\n          throw new Error(`Missing required chain parameter: ${param}`)\n        }\n      }\n      this._chainParams = chain as ChainConfig\n    } else {\n      throw new Error('Wrong input format')\n    }\n    for (const hf of this.hardforks()) {\n      if (hf.block === undefined) {\n        throw new Error(`Hardfork cannot have undefined block number`)\n      }\n    }\n    return this._chainParams\n  }\n\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n   */\n  setHardfork(hardfork: string | Hardfork): void {\n    let existing = false\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if (hfChanges[0] === hardfork) {\n        if (this._hardfork !== hardfork) {\n          this._hardfork = hardfork\n          this._buildParamsCache()\n          this._buildActivatedEIPsCache()\n          this.events.emit('hardforkChanged', hardfork)\n        }\n        existing = true\n      }\n    }\n    if (!existing) {\n      throw new Error(`Hardfork with name ${hardfork} not supported`)\n    }\n  }\n\n  /**\n   * Returns the hardfork either based on block numer (older HFs) or\n   * timestamp (Shanghai upwards).\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param Opts Block number, timestamp or TD (all optional)\n   * @returns The name of the HF\n   */\n  getHardforkBy(opts: HardforkByOpts): string {\n    let { blockNumber, timestamp, td } = opts\n\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    td = toType(td, TypeOutput.BigInt)\n    timestamp = toType(timestamp, TypeOutput.BigInt)\n\n    // Filter out hardforks with no block number, no ttd or no timestamp (i.e. unapplied hardforks)\n    const hfs = this.hardforks().filter(\n      (hf) =>\n        hf.block !== null || (hf.ttd !== null && hf.ttd !== undefined) || hf.timestamp !== undefined\n    )\n    const mergeIndex = hfs.findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined)\n    const doubleTTDHF = hfs\n      .slice(mergeIndex + 1)\n      .findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined)\n    if (doubleTTDHF >= 0) {\n      throw Error(`More than one merge hardforks found with ttd specified`)\n    }\n\n    // Find the first hardfork that has a block number greater than `blockNumber`\n    // (skips the merge hardfork since it cannot have a block number specified).\n    // If timestamp is not provided, it also skips timestamps hardforks to continue\n    // discovering/checking number hardforks.\n    let hfIndex = hfs.findIndex(\n      (hf) =>\n        (blockNumber !== undefined &&\n          hf.block !== null &&\n          BigInt(hf.block) > (blockNumber as bigint)) ||\n        (timestamp !== undefined && hf.timestamp !== undefined && hf.timestamp > timestamp)\n    )\n\n    if (hfIndex === -1) {\n      // all hardforks apply, set hfIndex to the last one as that's the candidate\n      hfIndex = hfs.length\n    } else if (hfIndex === 0) {\n      // cannot have a case where a block number is before all applied hardforks\n      // since the chain has to start with a hardfork\n      throw Error('Must have at least one hardfork at block 0')\n    }\n\n    // If timestamp is not provided, we need to rollback to the last hf with block or ttd\n    if (timestamp === undefined) {\n      const stepBack = hfs\n        .slice(0, hfIndex)\n        .reverse()\n        .findIndex((hf) => hf.block !== null || hf.ttd !== undefined)\n      hfIndex = hfIndex - stepBack\n    }\n    // Move hfIndex one back to arrive at candidate hardfork\n    hfIndex = hfIndex - 1\n\n    // If the timestamp was not provided, we could have skipped timestamp hardforks to look for number\n    // hardforks. so it will now be needed to rollback\n    if (hfs[hfIndex].block === null && hfs[hfIndex].timestamp === undefined) {\n      // We're on the merge hardfork.  Let's check the TTD\n      if (td === undefined || td === null || BigInt(hfs[hfIndex].ttd!) > td) {\n        // Merge ttd greater than current td so we're on hardfork before merge\n        hfIndex -= 1\n      }\n    } else {\n      if (mergeIndex >= 0 && td !== undefined && td !== null) {\n        if (hfIndex >= mergeIndex && BigInt(hfs[mergeIndex].ttd!) > td) {\n          throw Error('Maximum HF determined by total difficulty is lower than the block number HF')\n        } else if (hfIndex < mergeIndex && BigInt(hfs[mergeIndex].ttd!) < td) {\n          throw Error('HF determined by block number is lower than the minimum total difficulty HF')\n        }\n      }\n    }\n\n    const hfStartIndex = hfIndex\n    // Move the hfIndex to the end of the hardforks that might be scheduled on the same block/timestamp\n    // This won't anyway be the case with Merge hfs\n    for (; hfIndex < hfs.length - 1; hfIndex++) {\n      // break out if hfIndex + 1 is not scheduled at hfIndex\n      if (\n        hfs[hfIndex].block !== hfs[hfIndex + 1].block ||\n        hfs[hfIndex].timestamp !== hfs[hfIndex + 1].timestamp\n      ) {\n        break\n      }\n    }\n\n    if (timestamp !== undefined) {\n      const minTimeStamp = hfs\n        .slice(0, hfStartIndex)\n        .reduce(\n          (acc: number, hf: HardforkTransitionConfig) => Math.max(Number(hf.timestamp ?? '0'), acc),\n          0\n        )\n      if (minTimeStamp > timestamp) {\n        throw Error(`Maximum HF determined by timestamp is lower than the block number/ttd HF`)\n      }\n\n      const maxTimeStamp = hfs\n        .slice(hfIndex + 1)\n        .reduce(\n          (acc: number, hf: HardforkTransitionConfig) =>\n            Math.min(Number(hf.timestamp ?? timestamp), acc),\n          Number(timestamp)\n        )\n      if (maxTimeStamp < timestamp) {\n        throw Error(`Maximum HF determined by block number/ttd is lower than timestamp HF`)\n      }\n    }\n    const hardfork = hfs[hfIndex]\n    return hardfork.name\n  }\n\n  /**\n   * Sets a new hardfork either based on block numer (older HFs) or\n   * timestamp (Shanghai upwards).\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param Opts Block number, timestamp or TD (all optional)\n   * @returns The name of the HF set\n   */\n  setHardforkBy(opts: HardforkByOpts): string {\n    const hardfork = this.getHardforkBy(opts)\n    this.setHardfork(hardfork)\n    return hardfork\n  }\n\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params or null if hardfork not on chain\n   */\n  protected _getHardfork(hardfork: string | Hardfork): HardforkTransitionConfig | null {\n    const hfs = this.hardforks()\n    for (const hf of hfs) {\n      if (hf['name'] === hardfork) return hf\n    }\n    return null\n  }\n\n  /**\n   * Sets the active EIPs\n   * @param eips\n   */\n  setEIPs(eips: number[] = []) {\n    for (const eip of eips) {\n      if (!(eip in EIPs)) {\n        throw new Error(`${eip} not supported`)\n      }\n      const minHF = this.gteHardfork((EIPs as any)[eip]['minimumHardfork'])\n      if (!minHF) {\n        throw new Error(\n          `${eip} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${minHF}`\n        )\n      }\n    }\n    this._eips = eips\n    this._buildParamsCache()\n    this._buildActivatedEIPsCache()\n\n    for (const eip of eips) {\n      if ((EIPs as any)[eip].requiredEIPs !== undefined) {\n        for (const elem of (EIPs as any)[eip].requiredEIPs) {\n          if (!(eips.includes(elem) || this.isActivatedEIP(elem))) {\n            throw new Error(`${eip} requires EIP ${elem}, but is not included in the EIP list`)\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Internal helper for _buildParamsCache()\n   */\n  protected _mergeWithParamsCache(params: HardforkConfig | EIPConfig) {\n    this._paramsCache['gasConfig'] = {\n      ...this._paramsCache['gasConfig'],\n      ...params['gasConfig'],\n    }\n    this._paramsCache['gasPrices'] = {\n      ...this._paramsCache['gasPrices'],\n      ...params['gasPrices'],\n    }\n    this._paramsCache['pow'] = {\n      ...this._paramsCache['pow'],\n      ...params['pow'],\n    }\n    this._paramsCache['sharding'] = {\n      ...this._paramsCache['sharding'],\n      ...params['sharding'],\n    }\n    this._paramsCache['vm'] = {\n      ...this._paramsCache['vm'],\n      ...params['vm'],\n    }\n  }\n\n  /**\n   * Build up a cache for all parameter values for the current HF and all activated EIPs\n   */\n  protected _buildParamsCache() {\n    this._paramsCache = {}\n    // Iterate through all hardforks up to hardfork set\n    const hardfork = this.hardfork()\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      // EIP-referencing HF config (e.g. for berlin)\n      if ('eips' in hfChanges[1]) {\n        const hfEIPs = hfChanges[1]['eips']\n        for (const eip of hfEIPs!) {\n          if (!(eip in EIPs)) {\n            throw new Error(`${eip} not supported`)\n          }\n\n          this._mergeWithParamsCache(EIPs[eip])\n        }\n        // Parameter-inlining HF config (e.g. for istanbul)\n      } else {\n        this._mergeWithParamsCache(hfChanges[1])\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    // Iterate through all additionally activated EIPs\n    for (const eip of this._eips) {\n      if (!(eip in EIPs)) {\n        throw new Error(`${eip} not supported`)\n      }\n\n      this._mergeWithParamsCache(EIPs[eip])\n    }\n  }\n\n  protected _buildActivatedEIPsCache() {\n    this._activatedEIPsCache = []\n\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      const hf = hfChanges[1]\n      if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n        this._activatedEIPsCache = this._activatedEIPsCache.concat(hf['eips'] as number[])\n      }\n    }\n    this._activatedEIPsCache = this._activatedEIPsCache.concat(this._eips)\n  }\n\n  /**\n   * Returns a parameter for the current chain setup\n   *\n   * If the parameter is present in an EIP, the EIP always takes precedence.\n   * Otherwise the parameter is taken from the latest applied HF with\n   * a change on the respective parameter.\n   *\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @returns The value requested or `BigInt(0)` if not found\n   */\n  param(topic: string, name: string): bigint {\n    // TODO: consider the case that different active EIPs\n    // can change the same parameter\n    let value = null\n    if (\n      (this._paramsCache as any)[topic] !== undefined &&\n      (this._paramsCache as any)[topic][name] !== undefined\n    ) {\n      value = (this._paramsCache as any)[topic][name].v\n    }\n    return BigInt(value ?? 0)\n  }\n\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name\n   * @returns The value requested or `BigInt(0)` if not found\n   */\n  paramByHardfork(topic: string, name: string, hardfork: string | Hardfork): bigint {\n    let value = null\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      // EIP-referencing HF config (e.g. for berlin)\n      if ('eips' in hfChanges[1]) {\n        const hfEIPs = hfChanges[1]['eips']\n        for (const eip of hfEIPs!) {\n          const valueEIP = this.paramByEIP(topic, name, eip)\n          value = typeof valueEIP === 'bigint' ? valueEIP : value\n        }\n        // Parameter-inlining HF config (e.g. for istanbul)\n      } else {\n        if (\n          (hfChanges[1] as any)[topic] !== undefined &&\n          (hfChanges[1] as any)[topic][name] !== undefined\n        ) {\n          value = (hfChanges[1] as any)[topic][name].v\n        }\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return BigInt(value ?? 0)\n  }\n\n  /**\n   * Returns a parameter corresponding to an EIP\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param eip Number of the EIP\n   * @returns The value requested or `undefined` if not found\n   */\n  paramByEIP(topic: string, name: string, eip: number): bigint | undefined {\n    if (!(eip in EIPs)) {\n      throw new Error(`${eip} not supported`)\n    }\n\n    const eipParams = (EIPs as any)[eip]\n    if (!(topic in eipParams)) {\n      return undefined\n    }\n    if (eipParams[topic][name] === undefined) {\n      return undefined\n    }\n    const value = eipParams[topic][name].v\n    return BigInt(value)\n  }\n\n  /**\n   * Returns a parameter for the hardfork active on block number or\n   * optional provided total difficulty (Merge HF)\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   * @param td Total difficulty\n   *    * @returns The value requested or `BigInt(0)` if not found\n   */\n  paramByBlock(\n    topic: string,\n    name: string,\n    blockNumber: BigIntLike,\n    td?: BigIntLike,\n    timestamp?: BigIntLike\n  ): bigint {\n    const hardfork = this.getHardforkBy({ blockNumber, td, timestamp })\n    return this.paramByHardfork(topic, name, hardfork)\n  }\n\n  /**\n   * Checks if an EIP is activated by either being included in the EIPs\n   * manually passed in with the {@link CommonOpts.eips} or in a\n   * hardfork currently being active\n   *\n   * Note: this method only works for EIPs being supported\n   * by the {@link CommonOpts.eips} constructor option\n   * @param eip\n   */\n  isActivatedEIP(eip: number): boolean {\n    if (this._activatedEIPsCache.includes(eip)) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @returns True if HF is active on block number\n   */\n  hardforkIsActiveOnBlock(hardfork: string | Hardfork | null, blockNumber: BigIntLike): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    hardfork = hardfork ?? this._hardfork\n    const hfBlock = this.hardforkBlock(hardfork)\n    if (typeof hfBlock === 'bigint' && hfBlock !== BIGINT_0 && blockNumber >= hfBlock) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @returns True if HF is active on block number\n   */\n  activeOnBlock(blockNumber: BigIntLike): boolean {\n    return this.hardforkIsActiveOnBlock(null, blockNumber)\n  }\n\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n  hardforkGteHardfork(hardfork1: string | Hardfork | null, hardfork2: string | Hardfork): boolean {\n    hardfork1 = hardfork1 ?? this._hardfork\n    const hardforks = this.hardforks()\n\n    let posHf1 = -1,\n      posHf2 = -1\n    let index = 0\n    for (const hf of hardforks) {\n      if (hf['name'] === hardfork1) posHf1 = index\n      if (hf['name'] === hardfork2) posHf2 = index\n      index += 1\n    }\n    return posHf1 >= posHf2 && posHf2 !== -1\n  }\n\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n  gteHardfork(hardfork: string | Hardfork): boolean {\n    return this.hardforkGteHardfork(null, hardfork)\n  }\n\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   */\n  hardforkBlock(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const block = this._getHardfork(hardfork)?.['block']\n    if (block === undefined || block === null) {\n      return null\n    }\n    return BigInt(block)\n  }\n\n  hardforkTimestamp(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const timestamp = this._getHardfork(hardfork)?.['timestamp']\n    if (timestamp === undefined || timestamp === null) {\n      return null\n    }\n    return BigInt(timestamp)\n  }\n\n  /**\n   * Returns the hardfork change block for eip\n   * @param eip EIP number\n   * @returns Block number or null if unscheduled\n   */\n  eipBlock(eip: number): bigint | null {\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      const hf = hfChanges[1]\n      if ('eips' in hf) {\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        if ((hf['eips'] as any).includes(eip)) {\n          return this.hardforkBlock(hfChanges[0])\n        }\n      }\n    }\n    return null\n  }\n\n  /**\n   * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Total difficulty or null if no set\n   */\n  hardforkTTD(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const ttd = this._getHardfork(hardfork)?.['ttd']\n    if (ttd === undefined || ttd === null) {\n      return null\n    }\n    return BigInt(ttd)\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block timestamp, number or null if not available\n   */\n  nextHardforkBlockOrTimestamp(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const hfs = this.hardforks()\n    let hfIndex = hfs.findIndex((hf) => hf.name === hardfork)\n    // If the current hardfork is merge, go one behind as merge hf is not part of these\n    // calcs even if the merge hf block is set\n    if (hardfork === Hardfork.Paris) {\n      hfIndex -= 1\n    }\n    // Hardfork not found\n    if (hfIndex < 0) {\n      return null\n    }\n\n    let currHfTimeOrBlock = hfs[hfIndex].timestamp ?? hfs[hfIndex].block\n    currHfTimeOrBlock =\n      currHfTimeOrBlock !== null && currHfTimeOrBlock !== undefined\n        ? Number(currHfTimeOrBlock)\n        : null\n\n    const nextHf = hfs.slice(hfIndex + 1).find((hf) => {\n      let hfTimeOrBlock = hf.timestamp ?? hf.block\n      hfTimeOrBlock =\n        hfTimeOrBlock !== null && hfTimeOrBlock !== undefined ? Number(hfTimeOrBlock) : null\n      return (\n        hf.name !== Hardfork.Paris &&\n        hfTimeOrBlock !== null &&\n        hfTimeOrBlock !== undefined &&\n        hfTimeOrBlock !== currHfTimeOrBlock\n      )\n    })\n    // If no next hf found with valid block or timestamp return null\n    if (nextHf === undefined) {\n      return null\n    }\n\n    const nextHfBlock = nextHf.timestamp ?? nextHf.block\n    if (nextHfBlock === null || nextHfBlock === undefined) {\n      return null\n    }\n\n    return BigInt(nextHfBlock)\n  }\n\n  /**\n   * Internal helper function to calculate a fork hash\n   * @param hardfork Hardfork name\n   * @param genesisHash Genesis block hash of the chain\n   * @returns Fork hash as hex string\n   */\n  protected _calcForkHash(hardfork: string | Hardfork, genesisHash: Uint8Array): PrefixedHexString {\n    let hfBytes = new Uint8Array(0)\n    let prevBlockOrTime = 0\n    for (const hf of this.hardforks()) {\n      const { block, timestamp, name } = hf\n      // Timestamp to be used for timestamp based hfs even if we may bundle\n      // block number with them retrospectively\n      let blockOrTime = timestamp ?? block\n      blockOrTime = blockOrTime !== null ? Number(blockOrTime) : null\n\n      // Skip for chainstart (0), not applied HFs (null) and\n      // when already applied on same blockOrTime HFs\n      // and on the merge since forkhash doesn't change on merge hf\n      if (\n        typeof blockOrTime === 'number' &&\n        blockOrTime !== 0 &&\n        blockOrTime !== prevBlockOrTime &&\n        name !== Hardfork.Paris\n      ) {\n        const hfBlockBytes = hexToBytes('0x' + blockOrTime.toString(16).padStart(16, '0'))\n        hfBytes = concatBytes(hfBytes, hfBlockBytes)\n        prevBlockOrTime = blockOrTime\n      }\n\n      if (hf.name === hardfork) break\n    }\n    const inputBytes = concatBytes(genesisHash, hfBytes)\n\n    // CRC32 delivers result as signed (negative) 32-bit integer,\n    // convert to hex string\n    const forkhash = bytesToHex(intToBytes(crc(inputBytes) >>> 0))\n    return forkhash\n  }\n\n  /**\n   * Returns an eth/64 compliant fork hash (EIP-2124)\n   * @param hardfork Hardfork name, optional if HF set\n   * @param genesisHash Genesis block hash of the chain, optional if already defined and not needed to be calculated\n   */\n  forkHash(hardfork?: string | Hardfork, genesisHash?: Uint8Array): PrefixedHexString {\n    hardfork = hardfork ?? this._hardfork\n    const data = this._getHardfork(hardfork)\n    if (\n      data === null ||\n      (data?.block === null && data?.timestamp === undefined && data?.ttd === undefined)\n    ) {\n      const msg = 'No fork hash calculation possible for future hardfork'\n      throw new Error(msg)\n    }\n    if (data?.forkHash !== null && data?.forkHash !== undefined) {\n      return data.forkHash\n    }\n    if (!genesisHash) throw new Error('genesisHash required for forkHash calculation')\n    return this._calcForkHash(hardfork, genesisHash)\n  }\n\n  /**\n   *\n   * @param forkHash Fork hash as a hex string\n   * @returns Array with hardfork data (name, block, forkHash)\n   */\n  hardforkForForkHash(forkHash: string): HardforkTransitionConfig | null {\n    const resArray = this.hardforks().filter((hf: HardforkTransitionConfig) => {\n      return hf.forkHash === forkHash\n    })\n    return resArray.length >= 1 ? resArray[resArray.length - 1] : null\n  }\n\n  /**\n   * Sets any missing forkHashes on the passed-in {@link Common} instance\n   * @param common The {@link Common} to set the forkHashes for\n   * @param genesisHash The genesis block hash\n   */\n  setForkHashes(genesisHash: Uint8Array) {\n    for (const hf of this.hardforks()) {\n      const blockOrTime = hf.timestamp ?? hf.block\n      if (\n        (hf.forkHash === null || hf.forkHash === undefined) &&\n        ((blockOrTime !== null && blockOrTime !== undefined) || typeof hf.ttd !== 'undefined')\n      ) {\n        hf.forkHash = this.forkHash(hf.name, genesisHash)\n      }\n    }\n  }\n\n  /**\n   * Returns the Genesis parameters of the current chain\n   * @returns Genesis dictionary\n   */\n  genesis(): GenesisBlockConfig {\n    return this._chainParams.genesis\n  }\n\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n  hardforks(): HardforkTransitionConfig[] {\n    return this._chainParams.hardforks\n  }\n\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n  bootstrapNodes(): BootstrapNodeConfig[] {\n    return this._chainParams.bootstrapNodes\n  }\n\n  /**\n   * Returns DNS networks for the current chain\n   * @returns {String[]} Array of DNS ENR urls\n   */\n  dnsNetworks(): string[] {\n    return this._chainParams.dnsNetworks!\n  }\n\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n  hardfork(): string | Hardfork {\n    return this._hardfork\n  }\n\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n  chainId(): bigint {\n    return BigInt(this._chainParams.chainId)\n  }\n\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n  chainName(): string {\n    return this._chainParams.name\n  }\n\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n  networkId(): bigint {\n    return BigInt(this._chainParams.networkId)\n  }\n\n  /**\n   * Returns the additionally activated EIPs\n   * (by using the `eips` constructor option)\n   * @returns List of EIPs\n   */\n  eips(): number[] {\n    return this._eips\n  }\n\n  /**\n   * Returns the consensus type of the network\n   * Possible values: \"pow\"|\"poa\"|\"pos\"\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusType(): string | ConsensusType {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = (hfChanges[1] as any)['consensus']['type']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return value ?? this._chainParams['consensus']['type']\n  }\n\n  /**\n   * Returns the concrete consensus implementation\n   * algorithm or protocol for the network\n   * e.g. \"ethash\" for \"pow\" consensus type,\n   * \"clique\" for \"poa\" consensus type or\n   * \"casper\" for \"pos\" consensus type.\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusAlgorithm(): string | ConsensusAlgorithm {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']!['algorithm']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return value ?? (this._chainParams['consensus']['algorithm'] as ConsensusAlgorithm)\n  }\n\n  /**\n   * Returns a dictionary with consensus configuration\n   * parameters based on the consensus algorithm\n   *\n   * Expected returns (parameters must be present in\n   * the respective chain json files):\n   *\n   * ethash: empty object\n   * clique: period, epoch\n   * casper: empty object\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusConfig(): { [key: string]: CliqueConfig | EthashConfig | CasperConfig } {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        // The config parameter is named after the respective consensus algorithm\n        const config = hfChanges[1]\n        const algorithm = config['consensus']!['algorithm']\n        value = (config['consensus'] as any)[algorithm]\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return (\n      value ?? this._chainParams['consensus'][this.consensusAlgorithm() as ConsensusAlgorithm] ?? {}\n    )\n  }\n\n  /**\n   * Returns a deep copy of this {@link Common} instance.\n   */\n  copy(): Common {\n    const copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this)\n    copy.events = new EventEmitter()\n    return copy\n  }\n\n  static getInitializedChains(customChains?: ChainConfig[]): ChainsConfig {\n    const names: ChainName = {}\n    for (const [name, id] of Object.entries(Chain)) {\n      names[id] = name.toLowerCase()\n    }\n    const chains = { ...CHAIN_SPECS } as ChainsConfig\n    if (customChains) {\n      for (const chain of customChains) {\n        const { name } = chain\n        names[chain.chainId.toString()] = name\n        chains[name] = chain\n      }\n    }\n    chains.names = names\n    return chains\n  }\n}\n","import { bytesToBigInt, toBytes } from '@ethereumjs/util'\n\nimport type { FeeMarketEIP1559Transaction } from './eip1559Transaction.js'\nimport type { AccessListEIP2930Transaction } from './eip2930Transaction.js'\nimport type { BlobEIP4844Transaction } from './eip4844Transaction.js'\nimport type { LegacyTransaction } from './legacyTransaction.js'\nimport type { AccessList, AccessListBytes, Common, Hardfork } from '@ethereumjs/common'\nimport type { Address, AddressLike, BigIntLike, BytesLike } from '@ethereumjs/util'\nexport type {\n  AccessList,\n  AccessListBytes,\n  AccessListBytesItem,\n  AccessListItem,\n} from '@ethereumjs/common'\n\n/**\n * Can be used in conjunction with {@link Transaction[TransactionType].supports}\n * to query on tx capabilities\n */\nexport enum Capability {\n  /**\n   * Tx supports EIP-155 replay protection\n   * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n   */\n  EIP155ReplayProtection = 155,\n\n  /**\n   * Tx supports EIP-1559 gas fee market mechanism\n   * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n   */\n  EIP1559FeeMarket = 1559,\n\n  /**\n   * Tx is a typed transaction as defined in EIP-2718\n   * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n   */\n  EIP2718TypedTransaction = 2718,\n\n  /**\n   * Tx supports access list generation as defined in EIP-2930\n   * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n   */\n  EIP2930AccessLists = 2930,\n}\n\n/**\n * The options for initializing a {@link Transaction}.\n */\nexport interface TxOptions {\n  /**\n   * A {@link Common} object defining the chain and hardfork for the transaction.\n   *\n   * Object will be internally copied so that tx behavior don't incidentally\n   * change on future HF changes.\n   *\n   * Default: {@link Common} object set to `mainnet` and the default hardfork as defined in the {@link Common} class.\n   *\n   * Current default hardfork: `istanbul`\n   */\n  common?: Common\n  /**\n   * A transaction object by default gets frozen along initialization. This gives you\n   * strong additional security guarantees on the consistency of the tx parameters.\n   * It also enables tx hash caching when the `hash()` method is called multiple times.\n   *\n   * If you need to deactivate the tx freeze - e.g. because you want to subclass tx and\n   * add additional properties - it is strongly encouraged that you do the freeze yourself\n   * within your code instead.\n   *\n   * Default: true\n   */\n  freeze?: boolean\n\n  /**\n   * Allows unlimited contract code-size init while debugging. This (partially) disables EIP-3860.\n   * Gas cost for initcode size analysis will still be charged. Use with caution.\n   */\n  allowUnlimitedInitCodeSize?: boolean\n}\n\nexport function isAccessListBytes(input: AccessListBytes | AccessList): input is AccessListBytes {\n  if (input.length === 0) {\n    return true\n  }\n  const firstItem = input[0]\n  if (Array.isArray(firstItem)) {\n    return true\n  }\n  return false\n}\n\nexport function isAccessList(input: AccessListBytes | AccessList): input is AccessList {\n  return !isAccessListBytes(input) // This is exactly the same method, except the output is negated.\n}\n\nexport interface TransactionCache {\n  hash?: Uint8Array\n  dataFee?: {\n    value: bigint\n    hardfork: string | Hardfork\n  }\n  senderPubKey?: Uint8Array\n}\n\n/**\n * Encompassing type for all transaction types.\n */\nexport enum TransactionType {\n  Legacy = 0,\n  AccessListEIP2930 = 1,\n  FeeMarketEIP1559 = 2,\n  BlobEIP4844 = 3,\n}\n\nexport interface Transaction {\n  [TransactionType.Legacy]: LegacyTransaction\n  [TransactionType.FeeMarketEIP1559]: FeeMarketEIP1559Transaction\n  [TransactionType.AccessListEIP2930]: AccessListEIP2930Transaction\n  [TransactionType.BlobEIP4844]: BlobEIP4844Transaction\n}\n\nexport type TypedTransaction = Transaction[TransactionType]\n\nexport function isLegacyTx(tx: TypedTransaction): tx is LegacyTransaction {\n  return tx.type === TransactionType.Legacy\n}\n\nexport function isAccessListEIP2930Tx(tx: TypedTransaction): tx is AccessListEIP2930Transaction {\n  return tx.type === TransactionType.AccessListEIP2930\n}\n\nexport function isFeeMarketEIP1559Tx(tx: TypedTransaction): tx is FeeMarketEIP1559Transaction {\n  return tx.type === TransactionType.FeeMarketEIP1559\n}\n\nexport function isBlobEIP4844Tx(tx: TypedTransaction): tx is BlobEIP4844Transaction {\n  return tx.type === TransactionType.BlobEIP4844\n}\n\nexport interface TransactionInterface<T extends TransactionType = TransactionType> {\n  readonly common: Common\n  readonly nonce: bigint\n  readonly gasLimit: bigint\n  readonly to?: Address\n  readonly value: bigint\n  readonly data: Uint8Array\n  readonly v?: bigint\n  readonly r?: bigint\n  readonly s?: bigint\n  readonly cache: TransactionCache\n  supports(capability: Capability): boolean\n  type: TransactionType\n  getBaseFee(): bigint\n  getDataFee(): bigint\n  getUpfrontCost(): bigint\n  toCreationAddress(): boolean\n  raw(): TxValuesArray[T]\n  serialize(): Uint8Array\n  getMessageToSign(): Uint8Array | Uint8Array[]\n  getHashedMessageToSign(): Uint8Array\n  hash(): Uint8Array\n  getMessageToVerifySignature(): Uint8Array\n  getValidationErrors(): string[]\n  isSigned(): boolean\n  isValid(): boolean\n  verifySignature(): boolean\n  getSenderAddress(): Address\n  getSenderPublicKey(): Uint8Array\n  sign(privateKey: Uint8Array): Transaction[T]\n  toJSON(): JsonTx\n  errorStr(): string\n}\n\nexport interface LegacyTxInterface<T extends TransactionType = TransactionType>\n  extends TransactionInterface<T> {}\n\nexport interface EIP2718CompatibleTx<T extends TransactionType = TransactionType>\n  extends TransactionInterface<T> {\n  readonly chainId: bigint\n  getMessageToSign(): Uint8Array\n}\n\nexport interface EIP2930CompatibleTx<T extends TransactionType = TransactionType>\n  extends EIP2718CompatibleTx<T> {\n  readonly accessList: AccessListBytes\n  readonly AccessListJSON: AccessList\n}\n\nexport interface EIP1559CompatibleTx<T extends TransactionType = TransactionType>\n  extends EIP2930CompatibleTx<T> {\n  readonly maxPriorityFeePerGas: bigint\n  readonly maxFeePerGas: bigint\n}\n\nexport interface EIP4844CompatibleTx<T extends TransactionType = TransactionType>\n  extends EIP1559CompatibleTx<T> {\n  readonly maxFeePerBlobGas: bigint\n  blobVersionedHashes: Uint8Array[]\n  blobs?: Uint8Array[]\n  kzgCommitments?: Uint8Array[]\n  kzgProofs?: Uint8Array[]\n  serializeNetworkWrapper(): Uint8Array\n  numBlobs(): number\n}\n\nexport interface TxData {\n  [TransactionType.Legacy]: LegacyTxData\n  [TransactionType.AccessListEIP2930]: AccessListEIP2930TxData\n  [TransactionType.FeeMarketEIP1559]: FeeMarketEIP1559TxData\n  [TransactionType.BlobEIP4844]: BlobEIP4844TxData\n}\n\nexport type TypedTxData = TxData[TransactionType]\n\nexport function isLegacyTxData(txData: TypedTxData): txData is LegacyTxData {\n  const txType = Number(bytesToBigInt(toBytes(txData.type)))\n  return txType === TransactionType.Legacy\n}\n\nexport function isAccessListEIP2930TxData(txData: TypedTxData): txData is AccessListEIP2930TxData {\n  const txType = Number(bytesToBigInt(toBytes(txData.type)))\n  return txType === TransactionType.AccessListEIP2930\n}\n\nexport function isFeeMarketEIP1559TxData(txData: TypedTxData): txData is FeeMarketEIP1559TxData {\n  const txType = Number(bytesToBigInt(toBytes(txData.type)))\n  return txType === TransactionType.FeeMarketEIP1559\n}\n\nexport function isBlobEIP4844TxData(txData: TypedTxData): txData is BlobEIP4844TxData {\n  const txType = Number(bytesToBigInt(toBytes(txData.type)))\n  return txType === TransactionType.BlobEIP4844\n}\n\n/**\n * Legacy {@link Transaction} Data\n */\nexport type LegacyTxData = {\n  /**\n   * The transaction's nonce.\n   */\n  nonce?: BigIntLike\n\n  /**\n   * The transaction's gas price.\n   */\n  gasPrice?: BigIntLike | null\n\n  /**\n   * The transaction's gas limit.\n   */\n  gasLimit?: BigIntLike\n\n  /**\n   * The transaction's the address is sent to.\n   */\n  to?: AddressLike\n\n  /**\n   * The amount of Ether sent.\n   */\n  value?: BigIntLike\n\n  /**\n   * This will contain the data of the message or the init of a contract.\n   */\n  data?: BytesLike\n\n  /**\n   * EC recovery ID.\n   */\n  v?: BigIntLike\n\n  /**\n   * EC signature parameter.\n   */\n  r?: BigIntLike\n\n  /**\n   * EC signature parameter.\n   */\n  s?: BigIntLike\n\n  /**\n   * The transaction type\n   */\n\n  type?: BigIntLike\n}\n\n/**\n * {@link AccessListEIP2930Transaction} data.\n */\nexport interface AccessListEIP2930TxData extends LegacyTxData {\n  /**\n   * The transaction's chain ID\n   */\n  chainId?: BigIntLike\n\n  /**\n   * The access list which contains the addresses/storage slots which the transaction wishes to access\n   */\n  accessList?: AccessListBytes | AccessList | null\n}\n\n/**\n * {@link FeeMarketEIP1559Transaction} data.\n */\nexport interface FeeMarketEIP1559TxData extends AccessListEIP2930TxData {\n  /**\n   * The transaction's gas price, inherited from {@link Transaction}.  This property is not used for EIP1559\n   * transactions and should always be undefined for this specific transaction type.\n   */\n  gasPrice?: never | null\n  /**\n   * The maximum inclusion fee per gas (this fee is given to the miner)\n   */\n  maxPriorityFeePerGas?: BigIntLike\n  /**\n   * The maximum total fee\n   */\n  maxFeePerGas?: BigIntLike\n}\n\n/**\n * {@link BlobEIP4844Transaction} data.\n */\nexport interface BlobEIP4844TxData extends FeeMarketEIP1559TxData {\n  /**\n   * The versioned hashes used to validate the blobs attached to a transaction\n   */\n  blobVersionedHashes?: BytesLike[]\n  /**\n   * The maximum fee per blob gas paid for the transaction\n   */\n  maxFeePerBlobGas?: BigIntLike\n  /**\n   * The blobs associated with a transaction\n   */\n  blobs?: BytesLike[]\n  /**\n   * The KZG commitments corresponding to the versioned hashes for each blob\n   */\n  kzgCommitments?: BytesLike[]\n  /**\n   * The KZG proofs associated with the transaction\n   */\n  kzgProofs?: BytesLike[]\n  /**\n   * An array of arbitrary strings that blobs are to be constructed from\n   */\n  blobsData?: string[]\n}\n\nexport interface TxValuesArray {\n  [TransactionType.Legacy]: LegacyTxValuesArray\n  [TransactionType.AccessListEIP2930]: AccessListEIP2930TxValuesArray\n  [TransactionType.FeeMarketEIP1559]: FeeMarketEIP1559TxValuesArray\n  [TransactionType.BlobEIP4844]: BlobEIP4844TxValuesArray\n}\n\n/**\n * Bytes values array for a legacy {@link Transaction}\n */\ntype LegacyTxValuesArray = Uint8Array[]\n\n/**\n * Bytes values array for an {@link AccessListEIP2930Transaction}\n */\ntype AccessListEIP2930TxValuesArray = [\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  AccessListBytes,\n  Uint8Array?,\n  Uint8Array?,\n  Uint8Array?\n]\n\n/**\n * Bytes values array for a {@link FeeMarketEIP1559Transaction}\n */\ntype FeeMarketEIP1559TxValuesArray = [\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  AccessListBytes,\n  Uint8Array?,\n  Uint8Array?,\n  Uint8Array?\n]\n\n/**\n * Bytes values array for a {@link BlobEIP4844Transaction}\n */\ntype BlobEIP4844TxValuesArray = [\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  AccessListBytes,\n  Uint8Array,\n  Uint8Array[],\n  Uint8Array?,\n  Uint8Array?,\n  Uint8Array?\n]\n\nexport type BlobEIP4844NetworkValuesArray = [\n  BlobEIP4844TxValuesArray,\n  Uint8Array[],\n  Uint8Array[],\n  Uint8Array[]\n]\n\ntype JsonAccessListItem = { address: string; storageKeys: string[] }\n\n/**\n * Generic interface for all tx types with a\n * JSON representation of a transaction.\n *\n * Note that all values are marked as optional\n * and not all the values are present on all tx types\n * (an EIP1559 tx e.g. lacks a `gasPrice`).\n */\nexport interface JsonTx {\n  nonce?: string\n  gasPrice?: string\n  gasLimit?: string\n  to?: string\n  data?: string\n  v?: string\n  r?: string\n  s?: string\n  value?: string\n  chainId?: string\n  accessList?: JsonAccessListItem[]\n  type?: string\n  maxPriorityFeePerGas?: string\n  maxFeePerGas?: string\n  maxFeePerBlobGas?: string\n  blobVersionedHashes?: string[]\n}\n\n/*\n * Based on https://ethereum.org/en/developers/docs/apis/json-rpc/\n */\nexport interface JsonRpcTx {\n  blockHash: string | null // DATA, 32 Bytes - hash of the block where this transaction was in. null when it's pending.\n  blockNumber: string | null // QUANTITY - block number where this transaction was in. null when it's pending.\n  from: string // DATA, 20 Bytes - address of the sender.\n  gas: string // QUANTITY - gas provided by the sender.\n  gasPrice: string // QUANTITY - gas price provided by the sender in wei. If EIP-1559 tx, defaults to maxFeePerGas.\n  maxFeePerGas?: string // QUANTITY - max total fee per gas provided by the sender in wei.\n  maxPriorityFeePerGas?: string // QUANTITY - max priority fee per gas provided by the sender in wei.\n  type: string // QUANTITY - EIP-2718 Typed Transaction type\n  accessList?: JsonTx['accessList'] // EIP-2930 access list\n  chainId?: string // Chain ID that this transaction is valid on.\n  hash: string // DATA, 32 Bytes - hash of the transaction.\n  input: string // DATA - the data send along with the transaction.\n  nonce: string // QUANTITY - the number of transactions made by the sender prior to this one.\n  to: string | null /// DATA, 20 Bytes - address of the receiver. null when it's a contract creation transaction.\n  transactionIndex: string | null // QUANTITY - integer of the transactions index position in the block. null when it's pending.\n  value: string // QUANTITY - value transferred in Wei.\n  v: string // QUANTITY - ECDSA recovery id\n  r: string // DATA, 32 Bytes - ECDSA signature r\n  s: string // DATA, 32 Bytes - ECDSA signature s\n  maxFeePerBlobGas?: string // QUANTITY - max data fee for blob transactions\n  blobVersionedHashes?: string[] // DATA - array of 32 byte versioned hashes for blob transactions\n}\n","import { bytesToHex, hexToBytes, setLengthLeft } from '@ethereumjs/util'\n\nimport { isAccessList } from './types.js'\n\nimport type { AccessList, AccessListBytes, AccessListItem, TransactionType } from './types.js'\nimport type { Common } from '@ethereumjs/common'\n\nexport function checkMaxInitCodeSize(common: Common, length: number) {\n  const maxInitCodeSize = common.param('vm', 'maxInitCodeSize')\n  if (maxInitCodeSize && BigInt(length) > maxInitCodeSize) {\n    throw new Error(\n      `the initcode size of this transaction is too large: it is ${length} while the max is ${common.param(\n        'vm',\n        'maxInitCodeSize'\n      )}`\n    )\n  }\n}\n\nexport class AccessLists {\n  public static getAccessListData(accessList: AccessListBytes | AccessList) {\n    let AccessListJSON\n    let bufferAccessList\n    if (isAccessList(accessList)) {\n      AccessListJSON = accessList\n      const newAccessList: AccessListBytes = []\n\n      for (let i = 0; i < accessList.length; i++) {\n        const item: AccessListItem = accessList[i]\n        const addressBytes = hexToBytes(item.address)\n        const storageItems: Uint8Array[] = []\n        for (let index = 0; index < item.storageKeys.length; index++) {\n          storageItems.push(hexToBytes(item.storageKeys[index]))\n        }\n        newAccessList.push([addressBytes, storageItems])\n      }\n      bufferAccessList = newAccessList\n    } else {\n      bufferAccessList = accessList ?? []\n      // build the JSON\n      const json: AccessList = []\n      for (let i = 0; i < bufferAccessList.length; i++) {\n        const data = bufferAccessList[i]\n        const address = bytesToHex(data[0])\n        const storageKeys: string[] = []\n        for (let item = 0; item < data[1].length; item++) {\n          storageKeys.push(bytesToHex(data[1][item]))\n        }\n        const jsonItem: AccessListItem = {\n          address,\n          storageKeys,\n        }\n        json.push(jsonItem)\n      }\n      AccessListJSON = json\n    }\n\n    return {\n      AccessListJSON,\n      accessList: bufferAccessList,\n    }\n  }\n\n  public static verifyAccessList(accessList: AccessListBytes) {\n    for (let key = 0; key < accessList.length; key++) {\n      const accessListItem = accessList[key]\n      const address = accessListItem[0]\n      const storageSlots = accessListItem[1]\n      if ((<any>accessListItem)[2] !== undefined) {\n        throw new Error(\n          'Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.'\n        )\n      }\n      if (address.length !== 20) {\n        throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes')\n      }\n      for (let storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n        if (storageSlots[storageSlot].length !== 32) {\n          throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes')\n        }\n      }\n    }\n  }\n\n  public static getAccessListJSON(accessList: AccessListBytes) {\n    const accessListJSON = []\n    for (let index = 0; index < accessList.length; index++) {\n      const item: any = accessList[index]\n      const JSONItem: any = {\n        address: bytesToHex(setLengthLeft(item[0], 20)),\n        storageKeys: [],\n      }\n      const storageSlots: Uint8Array[] = item[1]\n      for (let slot = 0; slot < storageSlots.length; slot++) {\n        const storageSlot = storageSlots[slot]\n        JSONItem.storageKeys.push(bytesToHex(setLengthLeft(storageSlot, 32)))\n      }\n      accessListJSON.push(JSONItem)\n    }\n    return accessListJSON\n  }\n\n  public static getDataFeeEIP2930(accessList: AccessListBytes, common: Common): number {\n    const accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost')\n    const accessListAddressCost = common.param('gasPrices', 'accessListAddressCost')\n\n    let slots = 0\n    for (let index = 0; index < accessList.length; index++) {\n      const item = accessList[index]\n      const storageSlots = item[1]\n      slots += storageSlots.length\n    }\n\n    const addresses = accessList.length\n    return addresses * Number(accessListAddressCost) + slots * Number(accessListStorageKeyCost)\n  }\n}\n\nexport function txTypeBytes(txType: TransactionType): Uint8Array {\n  return hexToBytes('0x' + txType.toString(16).padStart(2, '0'))\n}\n","import { Chain, Common } from '@ethereumjs/common'\nimport {\n  Address,\n  BIGINT_0,\n  MAX_INTEGER,\n  MAX_UINT64,\n  bigIntToHex,\n  bytesToBigInt,\n  bytesToHex,\n  ecsign,\n  publicToAddress,\n  toBytes,\n  unpadBytes,\n} from '@ethereumjs/util'\n\nimport { Capability, TransactionType } from './types.js'\nimport { checkMaxInitCodeSize } from './util.js'\n\nimport type {\n  JsonTx,\n  Transaction,\n  TransactionCache,\n  TransactionInterface,\n  TxData,\n  TxOptions,\n  TxValuesArray,\n} from './types.js'\nimport type { BigIntLike } from '@ethereumjs/util'\n\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nexport abstract class BaseTransaction<T extends TransactionType>\n  implements TransactionInterface<T>\n{\n  protected readonly _type: TransactionType\n\n  public readonly nonce: bigint\n  public readonly gasLimit: bigint\n  public readonly to?: Address\n  public readonly value: bigint\n  public readonly data: Uint8Array\n\n  public readonly v?: bigint\n  public readonly r?: bigint\n  public readonly s?: bigint\n\n  public readonly common!: Common\n\n  public cache: TransactionCache = {\n    hash: undefined,\n    dataFee: undefined,\n    senderPubKey: undefined,\n  }\n\n  protected readonly txOptions: TxOptions\n\n  /**\n   * List of tx type defining EIPs,\n   * e.g. 1559 (fee market) and 2930 (access lists)\n   * for FeeMarketEIP1559Transaction objects\n   */\n  protected activeCapabilities: number[] = []\n\n  /**\n   * The default chain the tx falls back to if no Common\n   * is provided and if the chain can't be derived from\n   * a passed in chainId (only EIP-2718 typed txs) or\n   * EIP-155 signature (legacy txs).\n   *\n   * @hidden\n   */\n  protected DEFAULT_CHAIN = Chain.Mainnet\n\n  constructor(txData: TxData[T], opts: TxOptions) {\n    const { nonce, gasLimit, to, value, data, v, r, s, type } = txData\n    this._type = Number(bytesToBigInt(toBytes(type)))\n\n    this.txOptions = opts\n\n    const toB = toBytes(to === '' ? '0x' : to)\n    const vB = toBytes(v === '' ? '0x' : v)\n    const rB = toBytes(r === '' ? '0x' : r)\n    const sB = toBytes(s === '' ? '0x' : s)\n\n    this.nonce = bytesToBigInt(toBytes(nonce === '' ? '0x' : nonce))\n    this.gasLimit = bytesToBigInt(toBytes(gasLimit === '' ? '0x' : gasLimit))\n    this.to = toB.length > 0 ? new Address(toB) : undefined\n    this.value = bytesToBigInt(toBytes(value === '' ? '0x' : value))\n    this.data = toBytes(data === '' ? '0x' : data)\n\n    this.v = vB.length > 0 ? bytesToBigInt(vB) : undefined\n    this.r = rB.length > 0 ? bytesToBigInt(rB) : undefined\n    this.s = sB.length > 0 ? bytesToBigInt(sB) : undefined\n\n    this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s })\n\n    // geth limits gasLimit to 2^64-1\n    this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64)\n\n    // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n    this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true)\n\n    const createContract = this.to === undefined || this.to === null\n    const allowUnlimitedInitCodeSize = opts.allowUnlimitedInitCodeSize ?? false\n    const common = opts.common ?? this._getCommon()\n    if (createContract && common.isActivatedEIP(3860) && allowUnlimitedInitCodeSize === false) {\n      checkMaxInitCodeSize(common, this.data.length)\n    }\n  }\n\n  /**\n   * Returns the transaction type.\n   *\n   * Note: legacy txs will return tx type `0`.\n   */\n  get type() {\n    return this._type\n  }\n\n  /**\n   * Checks if a tx type defining capability is active\n   * on a tx, for example the EIP-1559 fee market mechanism\n   * or the EIP-2930 access list feature.\n   *\n   * Note that this is different from the tx type itself,\n   * so EIP-2930 access lists can very well be active\n   * on an EIP-1559 tx for example.\n   *\n   * This method can be useful for feature checks if the\n   * tx type is unknown (e.g. when instantiated with\n   * the tx factory).\n   *\n   * See `Capabilities` in the `types` module for a reference\n   * on all supported capabilities.\n   */\n  supports(capability: Capability) {\n    return this.activeCapabilities.includes(capability)\n  }\n\n  /**\n   * Validates the transaction signature and minimum gas requirements.\n   * @returns {string[]} an array of error strings\n   */\n  getValidationErrors(): string[] {\n    const errors = []\n\n    if (this.isSigned() && !this.verifySignature()) {\n      errors.push('Invalid Signature')\n    }\n\n    if (this.getBaseFee() > this.gasLimit) {\n      errors.push(`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`)\n    }\n\n    return errors\n  }\n\n  /**\n   * Validates the transaction signature and minimum gas requirements.\n   * @returns {boolean} true if the transaction is valid, false otherwise\n   */\n  isValid(): boolean {\n    const errors = this.getValidationErrors()\n\n    return errors.length === 0\n  }\n\n  /**\n   * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   */\n  getBaseFee(): bigint {\n    const txFee = this.common.param('gasPrices', 'tx')\n    let fee = this.getDataFee()\n    if (txFee) fee += txFee\n    if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n      const txCreationFee = this.common.param('gasPrices', 'txCreation')\n      if (txCreationFee) fee += txCreationFee\n    }\n    return fee\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    const txDataZero = this.common.param('gasPrices', 'txDataZero')\n    const txDataNonZero = this.common.param('gasPrices', 'txDataNonZero')\n\n    let cost = BIGINT_0\n    for (let i = 0; i < this.data.length; i++) {\n      this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero)\n    }\n\n    if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n      const dataLength = BigInt(Math.ceil(this.data.length / 32))\n      const initCodeCost = this.common.param('gasPrices', 'initCodeWordCost') * dataLength\n      cost += initCodeCost\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  abstract getUpfrontCost(): bigint\n\n  /**\n   * If the tx's `to` is to the creation address\n   */\n  toCreationAddress(): boolean {\n    return this.to === undefined || this.to.bytes.length === 0\n  }\n\n  /**\n   * Returns a Uint8Array Array of the raw Bytes of this transaction, in order.\n   *\n   * Use {@link BaseTransaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Bytes values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link BaseTransaction.getMessageToSign}.\n   */\n  abstract raw(): TxValuesArray[T]\n\n  /**\n   * Returns the encoding of the transaction.\n   */\n  abstract serialize(): Uint8Array\n\n  // Returns the raw unsigned tx, which is used to sign the transaction.\n  abstract getMessageToSign(): Uint8Array | Uint8Array[]\n\n  // Returns the hashed unsigned tx, which is used to sign the transaction.\n  abstract getHashedMessageToSign(): Uint8Array\n\n  abstract hash(): Uint8Array\n\n  abstract getMessageToVerifySignature(): Uint8Array\n\n  public isSigned(): boolean {\n    const { v, r, s } = this\n    if (v === undefined || r === undefined || s === undefined) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  /**\n   * Determines if the signature is valid\n   */\n  verifySignature(): boolean {\n    try {\n      // Main signature verification is done in `getSenderPublicKey()`\n      const publicKey = this.getSenderPublicKey()\n      return unpadBytes(publicKey).length !== 0\n    } catch (e: any) {\n      return false\n    }\n  }\n\n  /**\n   * Returns the sender's address\n   */\n  getSenderAddress(): Address {\n    return new Address(publicToAddress(this.getSenderPublicKey()))\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  abstract getSenderPublicKey(): Uint8Array\n\n  /**\n   * Signs a transaction.\n   *\n   * Note that the signed tx is returned as a new object,\n   * use as follows:\n   * ```javascript\n   * const signedTx = tx.sign(privateKey)\n   * ```\n   */\n  sign(privateKey: Uint8Array): Transaction[T] {\n    if (privateKey.length !== 32) {\n      const msg = this._errorMsg('Private key must be 32 bytes in length.')\n      throw new Error(msg)\n    }\n\n    // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n    // and want to recreate a signature (where EIP155 should be applied)\n    // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n    // 2021-06-23\n    let hackApplied = false\n    if (\n      this.type === TransactionType.Legacy &&\n      this.common.gteHardfork('spuriousDragon') &&\n      !this.supports(Capability.EIP155ReplayProtection)\n    ) {\n      this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      hackApplied = true\n    }\n\n    const msgHash = this.getHashedMessageToSign()\n    const { v, r, s } = ecsign(msgHash, privateKey)\n    const tx = this._processSignature(v, r, s)\n\n    // Hack part 2\n    if (hackApplied) {\n      const index = this.activeCapabilities.indexOf(Capability.EIP155ReplayProtection)\n      if (index > -1) {\n        this.activeCapabilities.splice(index, 1)\n      }\n    }\n\n    return tx\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    return {\n      type: bigIntToHex(BigInt(this.type)),\n      nonce: bigIntToHex(this.nonce),\n      gasLimit: bigIntToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bigIntToHex(this.value),\n      data: bytesToHex(this.data),\n      v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n      r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n      s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n    }\n  }\n\n  // Accept the v,r,s values from the `sign` method, and convert this into a T\n  protected abstract _processSignature(v: bigint, r: Uint8Array, s: Uint8Array): Transaction[T]\n\n  /**\n   * Does chain ID checks on common and returns a common\n   * to be used on instantiation\n   * @hidden\n   *\n   * @param common - {@link Common} instance from tx options\n   * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n   */\n  protected _getCommon(common?: Common, chainId?: BigIntLike) {\n    // Chain ID provided\n    if (chainId !== undefined) {\n      const chainIdBigInt = bytesToBigInt(toBytes(chainId))\n      if (common) {\n        if (common.chainId() !== chainIdBigInt) {\n          const msg = this._errorMsg('The chain ID does not match the chain ID of Common')\n          throw new Error(msg)\n        }\n        // Common provided, chain ID does match\n        // -> Return provided Common\n        return common.copy()\n      } else {\n        if (Common.isSupportedChainId(chainIdBigInt)) {\n          // No Common, chain ID supported by Common\n          // -> Instantiate Common with chain ID\n          return new Common({ chain: chainIdBigInt })\n        } else {\n          // No Common, chain ID not supported by Common\n          // -> Instantiate custom Common derived from DEFAULT_CHAIN\n          return Common.custom(\n            {\n              name: 'custom-chain',\n              networkId: chainIdBigInt,\n              chainId: chainIdBigInt,\n            },\n            { baseChain: this.DEFAULT_CHAIN }\n          )\n        }\n      }\n    } else {\n      // No chain ID provided\n      // -> return Common provided or create new default Common\n      return common?.copy() ?? new Common({ chain: this.DEFAULT_CHAIN })\n    }\n  }\n\n  /**\n   * Validates that an object with BigInt values cannot exceed the specified bit limit.\n   * @param values Object containing string keys and BigInt values\n   * @param bits Number of bits to check (64 or 256)\n   * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n   */\n  protected _validateCannotExceedMaxInteger(\n    values: { [key: string]: bigint | undefined },\n    bits = 256,\n    cannotEqual = false\n  ) {\n    for (const [key, value] of Object.entries(values)) {\n      switch (bits) {\n        case 64:\n          if (cannotEqual) {\n            if (value !== undefined && value >= MAX_UINT64) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_UINT64 (2^64-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value !== undefined && value > MAX_UINT64) {\n              const msg = this._errorMsg(`${key} cannot exceed MAX_UINT64 (2^64-1), given ${value}`)\n              throw new Error(msg)\n            }\n          }\n          break\n        case 256:\n          if (cannotEqual) {\n            if (value !== undefined && value >= MAX_INTEGER) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value !== undefined && value > MAX_INTEGER) {\n              const msg = this._errorMsg(\n                `${key} cannot exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          }\n          break\n        default: {\n          const msg = this._errorMsg('unimplemented bits value')\n          throw new Error(msg)\n        }\n      }\n    }\n  }\n\n  protected static _validateNotArray(values: { [key: string]: any }) {\n    const txDataKeys = [\n      'nonce',\n      'gasPrice',\n      'gasLimit',\n      'to',\n      'value',\n      'data',\n      'v',\n      'r',\n      's',\n      'type',\n      'baseFee',\n      'maxFeePerGas',\n      'chainId',\n    ]\n    for (const [key, value] of Object.entries(values)) {\n      if (txDataKeys.includes(key)) {\n        if (Array.isArray(value)) {\n          throw new Error(`${key} cannot be an array`)\n        }\n      }\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public abstract errorStr(): string\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected abstract _errorMsg(msg: string): string\n\n  /**\n   * Returns the shared error postfix part for _error() method\n   * tx type implementations.\n   */\n  protected _getSharedErrorPostfix() {\n    let hash = ''\n    try {\n      hash = this.isSigned() ? bytesToHex(this.hash()) : 'not available (unsigned)'\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let isSigned = ''\n    try {\n      isSigned = this.isSigned().toString()\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let hf = ''\n    try {\n      hf = this.common.hardfork()\n    } catch (e: any) {\n      hf = 'error'\n    }\n\n    let postfix = `tx type=${this.type} hash=${hash} nonce=${this.nonce} value=${this.value} `\n    postfix += `signed=${isSigned} hf=${hf}`\n\n    return postfix\n  }\n}\n","import type { EIP1559CompatibleTx } from '../types.js'\n\nexport function getUpfrontCost(tx: EIP1559CompatibleTx, baseFee: bigint): bigint {\n  const prio = tx.maxPriorityFeePerGas\n  const maxBase = tx.maxFeePerGas - baseFee\n  const inclusionFeePerGas = prio < maxBase ? prio : maxBase\n  const gasPrice = inclusionFeePerGas + baseFee\n  return tx.gasLimit * gasPrice + tx.value\n}\n","import { SECP256K1_ORDER_DIV_2, bigIntToUnpaddedBytes, ecrecover } from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak.js'\n\nimport { BaseTransaction } from '../baseTransaction.js'\nimport { Capability } from '../types.js'\n\nimport type { LegacyTxInterface } from '../types.js'\n\nexport function errorMsg(tx: LegacyTxInterface, msg: string) {\n  return `${msg} (${tx.errorStr()})`\n}\n\nexport function isSigned(tx: LegacyTxInterface): boolean {\n  const { v, r, s } = tx\n  if (v === undefined || r === undefined || s === undefined) {\n    return false\n  } else {\n    return true\n  }\n}\n\n/**\n * The amount of gas paid for the data in this tx\n */\nexport function getDataFee(tx: LegacyTxInterface, extraCost?: bigint): bigint {\n  if (tx.cache.dataFee && tx.cache.dataFee.hardfork === tx.common.hardfork()) {\n    return tx.cache.dataFee.value\n  }\n\n  const cost = BaseTransaction.prototype.getDataFee.bind(tx)() + (extraCost ?? 0n)\n\n  if (Object.isFrozen(tx)) {\n    tx.cache.dataFee = {\n      value: cost,\n      hardfork: tx.common.hardfork(),\n    }\n  }\n\n  return cost\n}\n\nexport function hash(tx: LegacyTxInterface): Uint8Array {\n  if (!tx.isSigned()) {\n    const msg = errorMsg(tx, 'Cannot call hash method if transaction is not signed')\n    throw new Error(msg)\n  }\n\n  if (Object.isFrozen(tx)) {\n    if (!tx.cache.hash) {\n      tx.cache.hash = keccak256(tx.serialize())\n    }\n    return tx.cache.hash\n  }\n\n  return keccak256(tx.serialize())\n}\n\n/**\n * EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2are considered invalid.\n * Reasoning: https://ethereum.stackexchange.com/a/55728\n */\nexport function validateHighS(tx: LegacyTxInterface): void {\n  const { s } = tx\n  if (tx.common.gteHardfork('homestead') && s !== undefined && s > SECP256K1_ORDER_DIV_2) {\n    const msg = errorMsg(\n      tx,\n      'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n    )\n    throw new Error(msg)\n  }\n}\n\nexport function getSenderPublicKey(tx: LegacyTxInterface): Uint8Array {\n  if (tx.cache.senderPubKey !== undefined) {\n    return tx.cache.senderPubKey\n  }\n\n  const msgHash = tx.getMessageToVerifySignature()\n\n  const { v, r, s } = tx\n\n  validateHighS(tx)\n\n  try {\n    const sender = ecrecover(\n      msgHash,\n      v!,\n      bigIntToUnpaddedBytes(r!),\n      bigIntToUnpaddedBytes(s!),\n      tx.supports(Capability.EIP155ReplayProtection) ? tx.common.chainId() : undefined\n    )\n    if (Object.isFrozen(tx)) {\n      tx.cache.senderPubKey = sender\n    }\n    return sender\n  } catch (e: any) {\n    const msg = errorMsg(tx, 'Invalid Signature')\n    throw new Error(msg)\n  }\n}\n","import { RLP } from '@ethereumjs/rlp'\nimport { BIGINT_0, BIGINT_1, concatBytes } from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak.js'\n\nimport { txTypeBytes } from '../util.js'\n\nimport { errorMsg } from './legacy.js'\n\nimport type { EIP2718CompatibleTx } from '../types'\nimport type { Input } from '@ethereumjs/rlp'\n\nexport function getHashedMessageToSign(tx: EIP2718CompatibleTx): Uint8Array {\n  return keccak256(tx.getMessageToSign())\n}\n\nexport function serialize(tx: EIP2718CompatibleTx, base?: Input): Uint8Array {\n  return concatBytes(txTypeBytes(tx.type), RLP.encode(base ?? tx.raw()))\n}\n\nexport function validateYParity(tx: EIP2718CompatibleTx) {\n  const { v } = tx\n  if (v !== undefined && v !== BIGINT_0 && v !== BIGINT_1) {\n    const msg = errorMsg(tx, 'The y-parity of the transaction should either be 0 or 1')\n    throw new Error(msg)\n  }\n}\n","import { AccessLists } from '../util.js'\n\nimport * as Legacy from './legacy.js'\n\nimport type { EIP2930CompatibleTx } from '../types.js'\n\n/**\n * The amount of gas paid for the data in this tx\n */\nexport function getDataFee(tx: EIP2930CompatibleTx): bigint {\n  return Legacy.getDataFee(tx, BigInt(AccessLists.getDataFeeEIP2930(tx.accessList, tx.common)))\n}\n","import { RLP } from '@ethereumjs/rlp'\nimport {\n  BIGINT_0,\n  BIGINT_27,\n  MAX_INTEGER,\n  bigIntToHex,\n  bigIntToUnpaddedBytes,\n  bytesToBigInt,\n  bytesToHex,\n  equalsBytes,\n  toBytes,\n  validateNoLeadingZeroes,\n} from '@ethereumjs/util'\n\nimport { BaseTransaction } from './baseTransaction.js'\nimport * as EIP1559 from './capabilities/eip1559.js'\nimport * as EIP2718 from './capabilities/eip2718.js'\nimport * as EIP2930 from './capabilities/eip2930.js'\nimport * as Legacy from './capabilities/legacy.js'\nimport { TransactionType } from './types.js'\nimport { AccessLists, txTypeBytes } from './util.js'\n\nimport type {\n  AccessList,\n  AccessListBytes,\n  TxData as AllTypesTxData,\n  TxValuesArray as AllTypesTxValuesArray,\n  JsonTx,\n  TxOptions,\n} from './types.js'\nimport type { Common } from '@ethereumjs/common'\n\ntype TxData = AllTypesTxData[TransactionType.FeeMarketEIP1559]\ntype TxValuesArray = AllTypesTxValuesArray[TransactionType.FeeMarketEIP1559]\n\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\nexport class FeeMarketEIP1559Transaction extends BaseTransaction<TransactionType.FeeMarketEIP1559> {\n  // implements EIP1559CompatibleTx<TransactionType.FeeMarketEIP1559>\n  public readonly chainId: bigint\n  public readonly accessList: AccessListBytes\n  public readonly AccessListJSON: AccessList\n  public readonly maxPriorityFeePerGas: bigint\n  public readonly maxFeePerGas: bigint\n\n  public readonly common: Common\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: TxData, opts: TxOptions = {}) {\n    return new FeeMarketEIP1559Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   */\n  public static fromSerializedTx(serialized: Uint8Array, opts: TxOptions = {}) {\n    if (\n      equalsBytes(serialized.subarray(0, 1), txTypeBytes(TransactionType.FeeMarketEIP1559)) ===\n      false\n    ) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${\n          TransactionType.FeeMarketEIP1559\n        }, received: ${bytesToHex(serialized.subarray(0, 1))}`\n      )\n    }\n\n    const values = RLP.decode(serialized.subarray(1))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return FeeMarketEIP1559Transaction.fromValuesArray(values as TxValuesArray, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   */\n  public static fromValuesArray(values: TxValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 9 && values.length !== 12) {\n      throw new Error(\n        'Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).'\n      )\n    }\n\n    const [\n      chainId,\n      nonce,\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      gasLimit,\n      to,\n      value,\n      data,\n      accessList,\n      v,\n      r,\n      s,\n    ] = values\n\n    this._validateNotArray({ chainId, v })\n    validateNoLeadingZeroes({ nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, value, v, r, s })\n\n    return new FeeMarketEIP1559Transaction(\n      {\n        chainId: bytesToBigInt(chainId),\n        nonce,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? [],\n        v: v !== undefined ? bytesToBigInt(v) : undefined, // EIP2930 supports v's with value 0 (empty Uint8Array)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TransactionType.FeeMarketEIP1559 }, opts)\n    const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainId()\n\n    if (this.common.isActivatedEIP(1559) === false) {\n      throw new Error('EIP-1559 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.maxFeePerGas = bytesToBigInt(toBytes(maxFeePerGas === '' ? '0x' : maxFeePerGas))\n    this.maxPriorityFeePerGas = bytesToBigInt(\n      toBytes(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas)\n    )\n\n    this._validateCannotExceedMaxInteger({\n      maxFeePerGas: this.maxFeePerGas,\n      maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n    })\n\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.gasLimit * this.maxFeePerGas > MAX_INTEGER) {\n      const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n\n    if (this.maxFeePerGas < this.maxPriorityFeePerGas) {\n      const msg = this._errorMsg(\n        'maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)'\n      )\n      throw new Error(msg)\n    }\n\n    EIP2718.validateYParity(this)\n    Legacy.validateHighS(this)\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    return EIP2930.getDataFee(this)\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   * @param baseFee The base fee of the block (will be set to 0 if not provided)\n   */\n  getUpfrontCost(baseFee: bigint = BIGINT_0): bigint {\n    return EIP1559.getUpfrontCost(this, baseFee)\n  }\n\n  /**\n   * Returns a Uint8Array Array of the raw Bytes of the EIP-1559 transaction, in order.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   *\n   * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Bytes values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n   */\n  raw(): TxValuesArray {\n    return [\n      bigIntToUnpaddedBytes(this.chainId),\n      bigIntToUnpaddedBytes(this.nonce),\n      bigIntToUnpaddedBytes(this.maxPriorityFeePerGas),\n      bigIntToUnpaddedBytes(this.maxFeePerGas),\n      bigIntToUnpaddedBytes(this.gasLimit),\n      this.to !== undefined ? this.to.bytes : new Uint8Array(0),\n      bigIntToUnpaddedBytes(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bigIntToUnpaddedBytes(this.v) : new Uint8Array(0),\n      this.r !== undefined ? bigIntToUnpaddedBytes(this.r) : new Uint8Array(0),\n      this.s !== undefined ? bigIntToUnpaddedBytes(this.s) : new Uint8Array(0),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-1559 transaction.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Uint8Array {\n    return EIP2718.serialize(this)\n  }\n\n  /**\n   * Returns the raw serialized unsigned tx, which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign() // use this for the HW wallet input\n   * ```\n   */\n  getMessageToSign(): Uint8Array {\n    return EIP2718.serialize(this, this.raw().slice(0, 9))\n  }\n\n  /**\n   * Returns the hashed serialized unsigned tx, which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   */\n  getHashedMessageToSign(): Uint8Array {\n    return EIP2718.getHashedMessageToSign(this)\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Uint8Array {\n    return Legacy.hash(this)\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Uint8Array {\n    return this.getHashedMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Uint8Array {\n    return Legacy.getSenderPublicKey(this)\n  }\n\n  protected _processSignature(v: bigint, r: Uint8Array, s: Uint8Array) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return FeeMarketEIP1559Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        maxFeePerGas: this.maxFeePerGas,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: v - BIGINT_27, // This looks extremely hacky: @ethereumjs/util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: bytesToBigInt(r),\n        s: bytesToBigInt(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n    const baseJson = super.toJSON()\n\n    return {\n      ...baseJson,\n      chainId: bigIntToHex(this.chainId),\n      maxPriorityFeePerGas: bigIntToHex(this.maxPriorityFeePerGas),\n      maxFeePerGas: bigIntToHex(this.maxFeePerGas),\n      accessList: accessListJSON,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return Legacy.errorMsg(this, msg)\n  }\n}\n","import { RLP } from '@ethereumjs/rlp'\nimport {\n  BIGINT_27,\n  MAX_INTEGER,\n  bigIntToHex,\n  bigIntToUnpaddedBytes,\n  bytesToBigInt,\n  bytesToHex,\n  equalsBytes,\n  toBytes,\n  validateNoLeadingZeroes,\n} from '@ethereumjs/util'\n\nimport { BaseTransaction } from './baseTransaction.js'\nimport * as EIP2718 from './capabilities/eip2718.js'\nimport * as EIP2930 from './capabilities/eip2930.js'\nimport * as Legacy from './capabilities/legacy.js'\nimport { TransactionType } from './types.js'\nimport { AccessLists, txTypeBytes } from './util.js'\n\nimport type {\n  AccessList,\n  AccessListBytes,\n  TxData as AllTypesTxData,\n  TxValuesArray as AllTypesTxValuesArray,\n  JsonTx,\n  TxOptions,\n} from './types.js'\nimport type { Common } from '@ethereumjs/common'\n\ntype TxData = AllTypesTxData[TransactionType.AccessListEIP2930]\ntype TxValuesArray = AllTypesTxValuesArray[TransactionType.AccessListEIP2930]\n\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nexport class AccessListEIP2930Transaction extends BaseTransaction<TransactionType.AccessListEIP2930> {\n  public readonly chainId: bigint\n  public readonly accessList: AccessListBytes\n  public readonly AccessListJSON: AccessList\n  public readonly gasPrice: bigint\n\n  public readonly common: Common\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: TxData, opts: TxOptions = {}) {\n    return new AccessListEIP2930Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   */\n  public static fromSerializedTx(serialized: Uint8Array, opts: TxOptions = {}) {\n    if (\n      equalsBytes(serialized.subarray(0, 1), txTypeBytes(TransactionType.AccessListEIP2930)) ===\n      false\n    ) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${\n          TransactionType.AccessListEIP2930\n        }, received: ${bytesToHex(serialized.subarray(0, 1))}`\n      )\n    }\n\n    const values = RLP.decode(Uint8Array.from(serialized.subarray(1)))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return AccessListEIP2930Transaction.fromValuesArray(values as TxValuesArray, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   */\n  public static fromValuesArray(values: TxValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 8 && values.length !== 11) {\n      throw new Error(\n        'Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).'\n      )\n    }\n\n    const [chainId, nonce, gasPrice, gasLimit, to, value, data, accessList, v, r, s] = values\n\n    this._validateNotArray({ chainId, v })\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    const emptyAccessList: AccessList = []\n\n    return new AccessListEIP2930Transaction(\n      {\n        chainId: bytesToBigInt(chainId),\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? emptyAccessList,\n        v: v !== undefined ? bytesToBigInt(v) : undefined, // EIP2930 supports v's with value 0 (empty Uint8Array)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TransactionType.AccessListEIP2930 }, opts)\n    const { chainId, accessList, gasPrice } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainId()\n\n    // EIP-2718 check is done in Common\n    if (!this.common.isActivatedEIP(2930)) {\n      throw new Error('EIP-2930 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.gasPrice = bytesToBigInt(toBytes(gasPrice === '' ? '0x' : gasPrice))\n\n    this._validateCannotExceedMaxInteger({\n      gasPrice: this.gasPrice,\n    })\n\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.gasPrice * this.gasLimit > MAX_INTEGER) {\n      const msg = this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER')\n      throw new Error(msg)\n    }\n\n    EIP2718.validateYParity(this)\n    Legacy.validateHighS(this)\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    return EIP2930.getDataFee(this)\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): bigint {\n    return this.gasLimit * this.gasPrice + this.value\n  }\n\n  /**\n   * Returns a Uint8Array Array of the raw Bytess of the EIP-2930 transaction, in order.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   *\n   * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Bytes values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n   */\n  raw(): TxValuesArray {\n    return [\n      bigIntToUnpaddedBytes(this.chainId),\n      bigIntToUnpaddedBytes(this.nonce),\n      bigIntToUnpaddedBytes(this.gasPrice),\n      bigIntToUnpaddedBytes(this.gasLimit),\n      this.to !== undefined ? this.to.bytes : new Uint8Array(0),\n      bigIntToUnpaddedBytes(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bigIntToUnpaddedBytes(this.v) : new Uint8Array(0),\n      this.r !== undefined ? bigIntToUnpaddedBytes(this.r) : new Uint8Array(0),\n      this.s !== undefined ? bigIntToUnpaddedBytes(this.s) : new Uint8Array(0),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-2930 transaction.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Uint8Array {\n    return EIP2718.serialize(this)\n  }\n\n  /**\n   * Returns the raw serialized unsigned tx, which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign() // use this for the HW wallet input\n   * ```\n   */\n  getMessageToSign(): Uint8Array {\n    return EIP2718.serialize(this, this.raw().slice(0, 8))\n  }\n\n  /**\n   * Returns the hashed serialized unsigned tx, which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   */\n  getHashedMessageToSign(): Uint8Array {\n    return EIP2718.getHashedMessageToSign(this)\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Uint8Array {\n    return Legacy.hash(this)\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Uint8Array {\n    return this.getHashedMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Uint8Array {\n    return Legacy.getSenderPublicKey(this)\n  }\n\n  protected _processSignature(v: bigint, r: Uint8Array, s: Uint8Array) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return AccessListEIP2930Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: v - BIGINT_27, // This looks extremely hacky: @ethereumjs/util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: bytesToBigInt(r),\n        s: bytesToBigInt(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n    const baseJson = super.toJSON()\n\n    return {\n      ...baseJson,\n      chainId: bigIntToHex(this.chainId),\n      gasPrice: bigIntToHex(this.gasPrice),\n      accessList: accessListJSON,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n    errorStr += ` gasPrice=${this.gasPrice} accessListCount=${this.accessList?.length ?? 0}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return Legacy.errorMsg(this, msg)\n  }\n}\n","/** EIP4844 constants */\n\nexport const MAX_CALLDATA_SIZE = 16777216 // 2 ** 24\nexport const MAX_ACCESS_LIST_SIZE = 16777216 // 2 ** 24\nexport const MAX_VERSIONED_HASHES_LIST_SIZE = 16777216 // 2 ** 24\nexport const LIMIT_BLOBS_PER_TX = 16777216 // 2 ** 24\nexport const MAX_TX_WRAP_KZG_COMMITMENTS = 16777216 // 2 ** 24\nexport const FIELD_ELEMENTS_PER_BLOB = 4096 // This is also in the Common 4844 parameters but needed here since types can't access Common params\nexport const BYTES_PER_FIELD_ELEMENT = 32\n","import { RLP } from '@ethereumjs/rlp'\nimport {\n  BIGINT_0,\n  BIGINT_27,\n  MAX_INTEGER,\n  bigIntToHex,\n  bigIntToUnpaddedBytes,\n  blobsToCommitments,\n  blobsToProofs,\n  bytesToBigInt,\n  bytesToHex,\n  commitmentsToVersionedHashes,\n  computeVersionedHash,\n  equalsBytes,\n  getBlobs,\n  kzg,\n  toBytes,\n  validateNoLeadingZeroes,\n} from '@ethereumjs/util'\n\nimport { BaseTransaction } from './baseTransaction.js'\nimport * as EIP1559 from './capabilities/eip1559.js'\nimport * as EIP2718 from './capabilities/eip2718.js'\nimport * as EIP2930 from './capabilities/eip2930.js'\nimport * as Legacy from './capabilities/legacy.js'\nimport { LIMIT_BLOBS_PER_TX } from './constants.js'\nimport { TransactionType } from './types.js'\nimport { AccessLists, txTypeBytes } from './util.js'\n\nimport type {\n  AccessList,\n  AccessListBytes,\n  TxData as AllTypesTxData,\n  TxValuesArray as AllTypesTxValuesArray,\n  BlobEIP4844NetworkValuesArray,\n  JsonTx,\n  TxOptions,\n} from './types.js'\nimport type { Common } from '@ethereumjs/common'\n\ntype TxData = AllTypesTxData[TransactionType.BlobEIP4844]\ntype TxValuesArray = AllTypesTxValuesArray[TransactionType.BlobEIP4844]\n\nconst validateBlobTransactionNetworkWrapper = (\n  blobVersionedHashes: Uint8Array[],\n  blobs: Uint8Array[],\n  commitments: Uint8Array[],\n  kzgProofs: Uint8Array[],\n  version: number\n) => {\n  if (!(blobVersionedHashes.length === blobs.length && blobs.length === commitments.length)) {\n    throw new Error('Number of blobVersionedHashes, blobs, and commitments not all equal')\n  }\n  if (blobVersionedHashes.length === 0) {\n    throw new Error('Invalid transaction with empty blobs')\n  }\n\n  let isValid\n  try {\n    isValid = kzg.verifyBlobKzgProofBatch(blobs, commitments, kzgProofs)\n  } catch (error) {\n    throw new Error(`KZG verification of blobs fail with error=${error}`)\n  }\n  if (!isValid) {\n    throw new Error('KZG proof cannot be verified from blobs/commitments')\n  }\n\n  for (let x = 0; x < blobVersionedHashes.length; x++) {\n    const computedVersionedHash = computeVersionedHash(commitments[x], version)\n    if (!equalsBytes(computedVersionedHash, blobVersionedHashes[x])) {\n      throw new Error(`commitment for blob at index ${x} does not match versionedHash`)\n    }\n  }\n}\n\n/**\n * Typed transaction with a new gas fee market mechanism for transactions that include \"blobs\" of data\n *\n * - TransactionType: 3\n * - EIP: [EIP-4844](https://eips.ethereum.org/EIPS/eip-4844)\n */\nexport class BlobEIP4844Transaction extends BaseTransaction<TransactionType.BlobEIP4844> {\n  public readonly chainId: bigint\n  public readonly accessList: AccessListBytes\n  public readonly AccessListJSON: AccessList\n  public readonly maxPriorityFeePerGas: bigint\n  public readonly maxFeePerGas: bigint\n  public readonly maxFeePerBlobGas: bigint\n\n  public readonly common: Common\n  public blobVersionedHashes: Uint8Array[]\n  blobs?: Uint8Array[] // This property should only be populated when the transaction is in the \"Network Wrapper\" format\n  kzgCommitments?: Uint8Array[] // This property should only be populated when the transaction is in the \"Network Wrapper\" format\n  kzgProofs?: Uint8Array[] // This property should only be populated when the transaction is in the \"Network Wrapper\" format\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static constructors or factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  constructor(txData: TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TransactionType.BlobEIP4844 }, opts)\n    const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas, maxFeePerBlobGas } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainId()\n\n    if (this.common.isActivatedEIP(1559) === false) {\n      throw new Error('EIP-1559 not enabled on Common')\n    }\n\n    if (this.common.isActivatedEIP(4844) === false) {\n      throw new Error('EIP-4844 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.maxFeePerGas = bytesToBigInt(toBytes(maxFeePerGas === '' ? '0x' : maxFeePerGas))\n    this.maxPriorityFeePerGas = bytesToBigInt(\n      toBytes(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas)\n    )\n\n    this._validateCannotExceedMaxInteger({\n      maxFeePerGas: this.maxFeePerGas,\n      maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n    })\n\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.gasLimit * this.maxFeePerGas > MAX_INTEGER) {\n      const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n\n    if (this.maxFeePerGas < this.maxPriorityFeePerGas) {\n      const msg = this._errorMsg(\n        'maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)'\n      )\n      throw new Error(msg)\n    }\n\n    this.maxFeePerBlobGas = bytesToBigInt(\n      toBytes((maxFeePerBlobGas ?? '') === '' ? '0x' : maxFeePerBlobGas)\n    )\n\n    this.blobVersionedHashes = (txData.blobVersionedHashes ?? []).map((vh) => toBytes(vh))\n    EIP2718.validateYParity(this)\n    Legacy.validateHighS(this)\n\n    for (const hash of this.blobVersionedHashes) {\n      if (hash.length !== 32) {\n        const msg = this._errorMsg('versioned hash is invalid length')\n        throw new Error(msg)\n      }\n      if (BigInt(hash[0]) !== this.common.param('sharding', 'blobCommitmentVersionKzg')) {\n        const msg = this._errorMsg('versioned hash does not start with KZG commitment version')\n        throw new Error(msg)\n      }\n    }\n    if (this.blobVersionedHashes.length > LIMIT_BLOBS_PER_TX) {\n      const msg = this._errorMsg(`tx can contain at most ${LIMIT_BLOBS_PER_TX} blobs`)\n      throw new Error(msg)\n    }\n\n    this.blobs = txData.blobs?.map((blob) => toBytes(blob))\n    this.kzgCommitments = txData.kzgCommitments?.map((commitment) => toBytes(commitment))\n    this.kzgProofs = txData.kzgProofs?.map((proof) => toBytes(proof))\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  public static fromTxData(txData: TxData, opts?: TxOptions) {\n    if (txData.blobsData !== undefined) {\n      if (txData.blobs !== undefined) {\n        throw new Error('cannot have both raw blobs data and encoded blobs in constructor')\n      }\n      if (txData.kzgCommitments !== undefined) {\n        throw new Error('cannot have both raw blobs data and KZG commitments in constructor')\n      }\n      if (txData.blobVersionedHashes !== undefined) {\n        throw new Error('cannot have both raw blobs data and versioned hashes in constructor')\n      }\n      if (txData.kzgProofs !== undefined) {\n        throw new Error('cannot have both raw blobs data and KZG proofs in constructor')\n      }\n      txData.blobs = getBlobs(txData.blobsData.reduce((acc, cur) => acc + cur))\n      txData.kzgCommitments = blobsToCommitments(txData.blobs as Uint8Array[])\n      txData.blobVersionedHashes = commitmentsToVersionedHashes(\n        txData.kzgCommitments as Uint8Array[]\n      )\n      txData.kzgProofs = blobsToProofs(\n        txData.blobs as Uint8Array[],\n        txData.kzgCommitments as Uint8Array[]\n      )\n    }\n\n    return new BlobEIP4844Transaction(txData, opts)\n  }\n\n  /**\n   * Creates the minimal representation of a blob transaction from the network wrapper version.\n   * The minimal representation is used when adding transactions to an execution payload/block\n   * @param txData a {@link BlobEIP4844Transaction} containing optional blobs/kzg commitments\n   * @param opts - dictionary of {@link TxOptions}\n   * @returns the \"minimal\" representation of a BlobEIP4844Transaction (i.e. transaction object minus blobs and kzg commitments)\n   */\n  public static minimalFromNetworkWrapper(\n    txData: BlobEIP4844Transaction,\n    opts?: TxOptions\n  ): BlobEIP4844Transaction {\n    const tx = BlobEIP4844Transaction.fromTxData(\n      {\n        ...txData,\n        ...{ blobs: undefined, kzgCommitments: undefined, kzgProofs: undefined },\n      },\n      opts\n    )\n    return tx\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x03 || rlp([chain_id, nonce, max_priority_fee_per_gas, max_fee_per_gas, gas_limit, to, value, data,\n   * access_list, max_fee_per_data_gas, blob_versioned_hashes, y_parity, r, s])`\n   */\n  public static fromSerializedTx(serialized: Uint8Array, opts: TxOptions = {}) {\n    if (\n      equalsBytes(serialized.subarray(0, 1), txTypeBytes(TransactionType.BlobEIP4844)) === false\n    ) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-4844 transaction (wrong tx type, expected: ${\n          TransactionType.BlobEIP4844\n        }, received: ${bytesToHex(serialized.subarray(0, 1))}`\n      )\n    }\n\n    const values = RLP.decode(serialized.subarray(1))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return BlobEIP4844Transaction.fromValuesArray(values as TxValuesArray, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   */\n  public static fromValuesArray(values: TxValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 11 && values.length !== 14) {\n      throw new Error(\n        'Invalid EIP-4844 transaction. Only expecting 11 values (for unsigned tx) or 14 values (for signed tx).'\n      )\n    }\n\n    const [\n      chainId,\n      nonce,\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      gasLimit,\n      to,\n      value,\n      data,\n      accessList,\n      maxFeePerBlobGas,\n      blobVersionedHashes,\n      v,\n      r,\n      s,\n    ] = values\n\n    this._validateNotArray({ chainId, v })\n    validateNoLeadingZeroes({\n      nonce,\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      gasLimit,\n      value,\n      maxFeePerBlobGas,\n      v,\n      r,\n      s,\n    })\n\n    return new BlobEIP4844Transaction(\n      {\n        chainId: bytesToBigInt(chainId),\n        nonce,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? [],\n        maxFeePerBlobGas,\n        blobVersionedHashes,\n        v: v !== undefined ? bytesToBigInt(v) : undefined, // EIP2930 supports v's with value 0 (empty Uint8Array)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * Creates a transaction from the network encoding of a blob transaction (with blobs/commitments/proof)\n   * @param serialized a buffer representing a serialized BlobTransactionNetworkWrapper\n   * @param opts any TxOptions defined\n   * @returns a BlobEIP4844Transaction\n   */\n\n  public static fromSerializedBlobTxNetworkWrapper(\n    serialized: Uint8Array,\n    opts?: TxOptions\n  ): BlobEIP4844Transaction {\n    if (!opts || !opts.common) {\n      throw new Error('common instance required to validate versioned hashes')\n    }\n\n    if (\n      equalsBytes(serialized.subarray(0, 1), txTypeBytes(TransactionType.BlobEIP4844)) === false\n    ) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-4844 transaction (wrong tx type, expected: ${\n          TransactionType.BlobEIP4844\n        }, received: ${bytesToHex(serialized.subarray(0, 1))}`\n      )\n    }\n\n    // Validate network wrapper\n    const networkTxValues = RLP.decode(serialized.subarray(1))\n    if (networkTxValues.length !== 4) {\n      throw Error(`Expected 4 values in the deserialized network transaction`)\n    }\n    const [txValues, blobs, kzgCommitments, kzgProofs] =\n      networkTxValues as BlobEIP4844NetworkValuesArray\n\n    // Construct the tx but don't freeze yet, we will assign blobs etc once validated\n    const decodedTx = BlobEIP4844Transaction.fromValuesArray(txValues, { ...opts, freeze: false })\n    if (decodedTx.to === undefined) {\n      throw Error('BlobEIP4844Transaction can not be send without a valid `to`')\n    }\n\n    const version = Number(opts.common.param('sharding', 'blobCommitmentVersionKzg'))\n    validateBlobTransactionNetworkWrapper(\n      decodedTx.blobVersionedHashes,\n      blobs,\n      kzgCommitments,\n      kzgProofs,\n      version\n    )\n\n    // set the network blob data on the tx\n    decodedTx.blobs = blobs\n    decodedTx.kzgCommitments = kzgCommitments\n    decodedTx.kzgProofs = kzgProofs\n\n    // freeze the tx\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(decodedTx)\n    }\n\n    return decodedTx\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    return EIP2930.getDataFee(this)\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   * @param baseFee The base fee of the block (will be set to 0 if not provided)\n   */\n  getUpfrontCost(baseFee: bigint = BIGINT_0): bigint {\n    return EIP1559.getUpfrontCost(this, baseFee)\n  }\n\n  /**\n   * Returns a Uint8Array Array of the raw Bytes of the EIP-4844 transaction, in order.\n   *\n   * Format: [chain_id, nonce, max_priority_fee_per_gas, max_fee_per_gas, gas_limit, to, value, data,\n   * access_list, max_fee_per_data_gas, blob_versioned_hashes, y_parity, r, s]`.\n   *\n   * Use {@link BlobEIP4844Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Bytes values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link BlobEIP4844Transaction.getMessageToSign}.\n   */\n  raw(): TxValuesArray {\n    return [\n      bigIntToUnpaddedBytes(this.chainId),\n      bigIntToUnpaddedBytes(this.nonce),\n      bigIntToUnpaddedBytes(this.maxPriorityFeePerGas),\n      bigIntToUnpaddedBytes(this.maxFeePerGas),\n      bigIntToUnpaddedBytes(this.gasLimit),\n      this.to !== undefined ? this.to.bytes : new Uint8Array(0),\n      bigIntToUnpaddedBytes(this.value),\n      this.data,\n      this.accessList,\n      bigIntToUnpaddedBytes(this.maxFeePerBlobGas),\n      this.blobVersionedHashes,\n      this.v !== undefined ? bigIntToUnpaddedBytes(this.v) : new Uint8Array(0),\n      this.r !== undefined ? bigIntToUnpaddedBytes(this.r) : new Uint8Array(0),\n      this.s !== undefined ? bigIntToUnpaddedBytes(this.s) : new Uint8Array(0),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-4844 transaction.\n   *\n   * Format: `0x03 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * access_list, max_fee_per_data_gas, blob_versioned_hashes, y_parity, r, s])`.\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Uint8Array {\n    return EIP2718.serialize(this)\n  }\n\n  /**\n   * @returns the serialized form of a blob transaction in the network wrapper format (used for gossipping mempool transactions over devp2p)\n   */\n  serializeNetworkWrapper(): Uint8Array {\n    if (\n      this.blobs === undefined ||\n      this.kzgCommitments === undefined ||\n      this.kzgProofs === undefined\n    ) {\n      throw new Error(\n        'cannot serialize network wrapper without blobs, KZG commitments and KZG proofs provided'\n      )\n    }\n\n    return EIP2718.serialize(this, [this.raw(), this.blobs, this.kzgCommitments, this.kzgProofs])\n  }\n\n  /**\n   * Returns the raw serialized unsigned tx, which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign() // use this for the HW wallet input\n   * ```\n   */\n  getMessageToSign(): Uint8Array {\n    return EIP2718.serialize(this, this.raw().slice(0, 11))\n  }\n\n  /**\n   * Returns the hashed serialized unsigned tx, which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   */\n  getHashedMessageToSign(): Uint8Array {\n    return EIP2718.getHashedMessageToSign(this)\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link BlobEIP4844Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Uint8Array {\n    return Legacy.hash(this)\n  }\n\n  getMessageToVerifySignature(): Uint8Array {\n    return this.getHashedMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Uint8Array {\n    return Legacy.getSenderPublicKey(this)\n  }\n\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n    const baseJson = super.toJSON()\n\n    return {\n      ...baseJson,\n      chainId: bigIntToHex(this.chainId),\n      maxPriorityFeePerGas: bigIntToHex(this.maxPriorityFeePerGas),\n      maxFeePerGas: bigIntToHex(this.maxFeePerGas),\n      accessList: accessListJSON,\n      maxFeePerBlobGas: bigIntToHex(this.maxFeePerBlobGas),\n      blobVersionedHashes: this.blobVersionedHashes.map((hash) => bytesToHex(hash)),\n    }\n  }\n\n  protected _processSignature(v: bigint, r: Uint8Array, s: Uint8Array): BlobEIP4844Transaction {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return BlobEIP4844Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        maxFeePerGas: this.maxFeePerGas,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: v - BIGINT_27, // This looks extremely hacky: @ethereumjs/util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: bytesToBigInt(r),\n        s: bytesToBigInt(s),\n        maxFeePerBlobGas: this.maxFeePerBlobGas,\n        blobVersionedHashes: this.blobVersionedHashes,\n        blobs: this.blobs,\n        kzgCommitments: this.kzgCommitments,\n        kzgProofs: this.kzgProofs,\n      },\n      opts\n    )\n  }\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return Legacy.errorMsg(this, msg)\n  }\n\n  /**\n   * @returns the number of blobs included with this transaction\n   */\n  public numBlobs(): number {\n    return this.blobVersionedHashes.length\n  }\n}\n","import { RLP } from '@ethereumjs/rlp'\nimport {\n  BIGINT_2,\n  BIGINT_8,\n  MAX_INTEGER,\n  bigIntToHex,\n  bigIntToUnpaddedBytes,\n  bytesToBigInt,\n  toBytes,\n  unpadBytes,\n  validateNoLeadingZeroes,\n} from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak.js'\n\nimport { BaseTransaction } from './baseTransaction.js'\nimport * as Legacy from './capabilities/legacy.js'\nimport { Capability, TransactionType } from './types.js'\n\nimport type {\n  TxData as AllTypesTxData,\n  TxValuesArray as AllTypesTxValuesArray,\n  JsonTx,\n  TxOptions,\n} from './types.js'\nimport type { Common } from '@ethereumjs/common'\n\ntype TxData = AllTypesTxData[TransactionType.Legacy]\ntype TxValuesArray = AllTypesTxValuesArray[TransactionType.Legacy]\n\nfunction meetsEIP155(_v: bigint, chainId: bigint) {\n  const v = Number(_v)\n  const chainIdDoubled = Number(chainId) * 2\n  return v === chainIdDoubled + 35 || v === chainIdDoubled + 36\n}\n\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nexport class LegacyTransaction extends BaseTransaction<TransactionType.Legacy> {\n  public readonly gasPrice: bigint\n\n  public readonly common: Common\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n   *\n   * Notes:\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: TxData, opts: TxOptions = {}) {\n    return new LegacyTransaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   */\n  public static fromSerializedTx(serialized: Uint8Array, opts: TxOptions = {}) {\n    const values = RLP.decode(serialized)\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input. Must be array')\n    }\n\n    return this.fromValuesArray(values as TxValuesArray, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   */\n  public static fromValuesArray(values: TxValuesArray, opts: TxOptions = {}) {\n    // If length is not 6, it has length 9. If v/r/s are empty Uint8Arrays, it is still an unsigned transaction\n    // This happens if you get the RLP data from `raw()`\n    if (values.length !== 6 && values.length !== 9) {\n      throw new Error(\n        'Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).'\n      )\n    }\n\n    const [nonce, gasPrice, gasLimit, to, value, data, v, r, s] = values\n\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    return new LegacyTransaction(\n      {\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        v,\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TransactionType.Legacy }, opts)\n\n    this.common = this._validateTxV(this.v, opts.common)\n\n    this.gasPrice = bytesToBigInt(toBytes(txData.gasPrice === '' ? '0x' : txData.gasPrice))\n\n    if (this.gasPrice * this.gasLimit > MAX_INTEGER) {\n      const msg = this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n\n    this._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice })\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.common.gteHardfork('spuriousDragon')) {\n      if (!this.isSigned()) {\n        this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      } else {\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n        // then when computing the hash of a transaction for purposes of signing or recovering\n        // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n        // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        // v and chain ID meet EIP-155 conditions\n        if (meetsEIP155(this.v!, this.common.chainId())) {\n          this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n        }\n      }\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * Returns a Uint8Array Array of the raw Bytes of the legacy transaction, in order.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   *\n   * For legacy txs this is also the correct format to add transactions\n   * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n   * for typed txs).\n   *\n   * For an unsigned tx this method returns the empty Bytes values\n   * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n   * representation have a look at {@link Transaction.getMessageToSign}.\n   */\n  raw(): TxValuesArray {\n    return [\n      bigIntToUnpaddedBytes(this.nonce),\n      bigIntToUnpaddedBytes(this.gasPrice),\n      bigIntToUnpaddedBytes(this.gasLimit),\n      this.to !== undefined ? this.to.bytes : new Uint8Array(0),\n      bigIntToUnpaddedBytes(this.value),\n      this.data,\n      this.v !== undefined ? bigIntToUnpaddedBytes(this.v) : new Uint8Array(0),\n      this.r !== undefined ? bigIntToUnpaddedBytes(this.r) : new Uint8Array(0),\n      this.s !== undefined ? bigIntToUnpaddedBytes(this.s) : new Uint8Array(0),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the legacy transaction.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   *\n   * For an unsigned tx this method uses the empty Uint8Array values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link Transaction.getMessageToSign}.\n   */\n  serialize(): Uint8Array {\n    return RLP.encode(this.raw())\n  }\n\n  /**\n   * Returns the raw unsigned tx, which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: the raw message message format for the legacy tx is not RLP encoded\n   * and you might need to do yourself with:\n   *\n   * ```javascript\n   * import { RLP } from '@ethereumjs/rlp'\n   * const message = tx.getMessageToSign()\n   * const serializedMessage = RLP.encode(message)) // use this for the HW wallet input\n   * ```\n   */\n  getMessageToSign(): Uint8Array[] {\n    const message = [\n      bigIntToUnpaddedBytes(this.nonce),\n      bigIntToUnpaddedBytes(this.gasPrice),\n      bigIntToUnpaddedBytes(this.gasLimit),\n      this.to !== undefined ? this.to.bytes : new Uint8Array(0),\n      bigIntToUnpaddedBytes(this.value),\n      this.data,\n    ]\n\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      message.push(bigIntToUnpaddedBytes(this.common.chainId()))\n      message.push(unpadBytes(toBytes(0)))\n      message.push(unpadBytes(toBytes(0)))\n    }\n\n    return message\n  }\n\n  /**\n   * Returns the hashed serialized unsigned tx, which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   */\n  getHashedMessageToSign() {\n    const message = this.getMessageToSign()\n    return keccak256(RLP.encode(message))\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    return Legacy.getDataFee(this)\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): bigint {\n    return this.gasLimit * this.gasPrice + this.value\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  hash(): Uint8Array {\n    return Legacy.hash(this)\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  getMessageToVerifySignature() {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('This transaction is not signed')\n      throw new Error(msg)\n    }\n    return this.getHashedMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  getSenderPublicKey(): Uint8Array {\n    return Legacy.getSenderPublicKey(this)\n  }\n\n  /**\n   * Process the v, r, s values from the `sign` method of the base transaction.\n   */\n  protected _processSignature(v: bigint, r: Uint8Array, s: Uint8Array) {\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      v += this.common.chainId() * BIGINT_2 + BIGINT_8\n    }\n\n    const opts = { ...this.txOptions, common: this.common }\n\n    return LegacyTransaction.fromTxData(\n      {\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        v,\n        r: bytesToBigInt(r),\n        s: bytesToBigInt(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction.\n   */\n  toJSON(): JsonTx {\n    const baseJson = super.toJSON()\n    return {\n      ...baseJson,\n      gasPrice: bigIntToHex(this.gasPrice),\n    }\n  }\n\n  /**\n   * Validates tx's `v` value\n   */\n  protected _validateTxV(_v?: bigint, common?: Common): Common {\n    let chainIdBigInt\n    const v = _v !== undefined ? Number(_v) : undefined\n    // Check for valid v values in the scope of a signed legacy tx\n    if (v !== undefined) {\n      // v is 1. not matching the EIP-155 chainId included case and...\n      // v is 2. not matching the classic v=27 or v=28 case\n      if (v < 37 && v !== 27 && v !== 28) {\n        throw new Error(\n          `Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${v}`\n        )\n      }\n    }\n\n    // No unsigned tx and EIP-155 activated and chain ID included\n    if (\n      v !== undefined &&\n      v !== 0 &&\n      (!common || common.gteHardfork('spuriousDragon')) &&\n      v !== 27 &&\n      v !== 28\n    ) {\n      if (common) {\n        if (!meetsEIP155(BigInt(v), common.chainId())) {\n          throw new Error(\n            `Incompatible EIP155-based V ${v} and chain id ${common.chainId()}. See the Common parameter of the Transaction constructor to set the chain id.`\n          )\n        }\n      } else {\n        // Derive the original chain ID\n        let numSub\n        if ((v - 35) % 2 === 0) {\n          numSub = 35\n        } else {\n          numSub = 36\n        }\n        // Use derived chain ID to create a proper Common\n        chainIdBigInt = BigInt(v - numSub) / BIGINT_2\n      }\n    }\n    return this._getCommon(common, chainIdBigInt)\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` gasPrice=${this.gasPrice}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return Legacy.errorMsg(this, msg)\n  }\n}\n","import { fetchFromProvider, getProvider } from '@ethereumjs/util'\n\nimport { FeeMarketEIP1559Transaction } from './eip1559Transaction.js'\nimport { AccessListEIP2930Transaction } from './eip2930Transaction.js'\nimport { BlobEIP4844Transaction } from './eip4844Transaction.js'\nimport { normalizeTxParams } from './fromRpc.js'\nimport { LegacyTransaction } from './legacyTransaction.js'\nimport {\n  TransactionType,\n  isAccessListEIP2930TxData,\n  isBlobEIP4844TxData,\n  isFeeMarketEIP1559TxData,\n  isLegacyTxData,\n} from './types.js'\n\nimport type { Transaction, TxData, TxOptions, TypedTxData } from './types.js'\nimport type { EthersProvider } from '@ethereumjs/util'\n\nexport class TransactionFactory {\n  // It is not possible to instantiate a TransactionFactory object.\n  private constructor() {}\n\n  /**\n   * Create a transaction from a `txData` object\n   *\n   * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n   * @param txOptions - Options to pass on to the constructor of the transaction\n   */\n  public static fromTxData<T extends TransactionType>(\n    txData: TypedTxData,\n    txOptions: TxOptions = {}\n  ): Transaction[T] {\n    if (!('type' in txData) || txData.type === undefined) {\n      // Assume legacy transaction\n      return LegacyTransaction.fromTxData(txData, txOptions) as Transaction[T]\n    } else {\n      if (isLegacyTxData(txData)) {\n        return LegacyTransaction.fromTxData(txData, txOptions) as Transaction[T]\n      } else if (isAccessListEIP2930TxData(txData)) {\n        return AccessListEIP2930Transaction.fromTxData(txData, txOptions) as Transaction[T]\n      } else if (isFeeMarketEIP1559TxData(txData)) {\n        return FeeMarketEIP1559Transaction.fromTxData(txData, txOptions) as Transaction[T]\n      } else if (isBlobEIP4844TxData(txData)) {\n        return BlobEIP4844Transaction.fromTxData(txData, txOptions) as Transaction[T]\n      } else {\n        throw new Error(`Tx instantiation with type ${(txData as TypedTxData)?.type} not supported`)\n      }\n    }\n  }\n\n  /**\n   * This method tries to decode serialized data.\n   *\n   * @param data - The data Uint8Array\n   * @param txOptions - The transaction options\n   */\n  public static fromSerializedData<T extends TransactionType>(\n    data: Uint8Array,\n    txOptions: TxOptions = {}\n  ): Transaction[T] {\n    if (data[0] <= 0x7f) {\n      // Determine the type.\n      switch (data[0]) {\n        case TransactionType.AccessListEIP2930:\n          return AccessListEIP2930Transaction.fromSerializedTx(data, txOptions) as Transaction[T]\n        case TransactionType.FeeMarketEIP1559:\n          return FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions) as Transaction[T]\n        case TransactionType.BlobEIP4844:\n          return BlobEIP4844Transaction.fromSerializedTx(data, txOptions) as Transaction[T]\n        default:\n          throw new Error(`TypedTransaction with ID ${data[0]} unknown`)\n      }\n    } else {\n      return LegacyTransaction.fromSerializedTx(data, txOptions) as Transaction[T]\n    }\n  }\n\n  /**\n   * When decoding a BlockBody, in the transactions field, a field is either:\n   * A Uint8Array (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n   * A Uint8Array[] (Legacy Transaction)\n   * This method returns the right transaction.\n   *\n   * @param data - A Uint8Array or Uint8Array[]\n   * @param txOptions - The transaction options\n   */\n  public static fromBlockBodyData(data: Uint8Array | Uint8Array[], txOptions: TxOptions = {}) {\n    if (data instanceof Uint8Array) {\n      return this.fromSerializedData(data, txOptions)\n    } else if (Array.isArray(data)) {\n      // It is a legacy transaction\n      return LegacyTransaction.fromValuesArray(data, txOptions)\n    } else {\n      throw new Error('Cannot decode transaction: unknown type input')\n    }\n  }\n\n  /**\n   *  Method to retrieve a transaction from the provider\n   * @param provider - a url string for a JSON-RPC provider or an Ethers JsonRPCProvider object\n   * @param txHash - Transaction hash\n   * @param txOptions - The transaction options\n   * @returns the transaction specified by `txHash`\n   */\n  public static async fromJsonRpcProvider(\n    provider: string | EthersProvider,\n    txHash: string,\n    txOptions?: TxOptions\n  ) {\n    const prov = getProvider(provider)\n    const txData = await fetchFromProvider(prov, {\n      method: 'eth_getTransactionByHash',\n      params: [txHash],\n    })\n    if (txData === null) {\n      throw new Error('No data returned from provider')\n    }\n    return TransactionFactory.fromRPC(txData, txOptions)\n  }\n\n  /**\n   * Method to decode data retrieved from RPC, such as `eth_getTransactionByHash`\n   * Note that this normalizes some of the parameters\n   * @param txData The RPC-encoded data\n   * @param txOptions The transaction options\n   * @returns\n   */\n  public static async fromRPC<T extends TransactionType>(\n    txData: TxData[T],\n    txOptions: TxOptions = {}\n  ): Promise<Transaction[T]> {\n    return TransactionFactory.fromTxData(normalizeTxParams(txData), txOptions)\n  }\n}\n","import { TypeOutput, setLengthLeft, toBytes, toType } from '@ethereumjs/util'\n\nimport type { TypedTxData } from './types.js'\n\nexport const normalizeTxParams = (_txParams: any): TypedTxData => {\n  const txParams = Object.assign({}, _txParams)\n\n  txParams.gasLimit = toType(txParams.gasLimit ?? txParams.gas, TypeOutput.BigInt)\n  txParams.data = txParams.data === undefined ? txParams.input : txParams.data\n\n  // check and convert gasPrice and value params\n  txParams.gasPrice = txParams.gasPrice !== undefined ? BigInt(txParams.gasPrice) : undefined\n  txParams.value = txParams.value !== undefined ? BigInt(txParams.value) : undefined\n\n  // strict byte length checking\n  txParams.to =\n    txParams.to !== null && txParams.to !== undefined\n      ? setLengthLeft(toBytes(txParams.to), 20)\n      : null\n\n  // Normalize the v/r/s values. If RPC returns '0x0', ensure v/r/s are set to `undefined` in the tx.\n  // If this is not done, then the transaction creation will throw, because `v` is `0`.\n  // Note: this still means that `isSigned` will return `false`.\n  // v/r/s values are `0x0` on networks like Optimism, where the tx is a system tx.\n  // For instance: https://optimistic.etherscan.io/tx/0xf4304cb09b3f58a8e5d20fec5f393c96ccffe0269aaf632cb2be7a8a0f0c91cc\n\n  txParams.v = txParams.v === '0x0' ? '0x' : txParams.v\n  txParams.r = txParams.r === '0x0' ? '0x' : txParams.r\n  txParams.s = txParams.s === '0x0' ? '0x' : txParams.s\n\n  if (txParams.v !== '0x' || txParams.r !== '0x' || txParams.s !== '0x') {\n    txParams.v = toType(txParams.v, TypeOutput.BigInt)\n  }\n\n  return txParams\n}\n","/* eslint-disable @typescript-eslint/no-throw-literal */\nimport type { SpanContext, TransactionContext } from \"@sentry/types\";\nimport merge from \"lodash.merge\";\nimport logLevel, { levels, LogLevelDesc } from \"loglevel\";\n\nconst log = logLevel.getLogger(\"http-helpers\");\nlog.setLevel(levels.INFO);\n\nexport interface CustomOptions {\n  [key: string]: unknown;\n  useAPIKey?: boolean;\n  isUrlEncodedData?: boolean;\n  timeout?: number;\n  logTracingHeader?: boolean;\n}\n\nexport interface Data {}\n\nlet apiKey = \"torus-default\";\nlet embedHost = \"\";\n\n// #region API Keys\nexport const gatewayAuthHeader = \"x-api-key\";\nexport const gatewayEmbedHostHeader = \"x-embed-host\";\n\ninterface Sentry {\n  startTransaction(_: TransactionContext): {\n    startChild(a: SpanContext): {\n      finish(): void;\n    };\n    finish(): void;\n  };\n}\n\nlet sentry: Sentry | null = null;\nconst tracingOrigins: string[] = [];\nconst tracingPaths: string[] = [];\n\nexport function enableSentryTracing(_sentry: Sentry, _tracingOrigins: string[], _tracingPaths: string[]) {\n  sentry = _sentry;\n  tracingOrigins.push(..._tracingOrigins);\n  tracingPaths.push(..._tracingPaths);\n}\n\nexport function setEmbedHost(embedHost_: string): void {\n  embedHost = embedHost_;\n}\n\nexport function clearEmbedHost(): void {\n  embedHost = \"\";\n}\n\nexport function getEmbedHost(): string {\n  return embedHost;\n}\n\nexport function setAPIKey(apiKey_: string): void {\n  apiKey = apiKey_;\n}\n\nexport function clearAPIKey(): void {\n  apiKey = \"torus-default\";\n}\n\nexport function getAPIKey(): string {\n  return apiKey;\n}\n\n// #endregion\n\nexport function setLogLevel(level: LogLevelDesc) {\n  log.setLevel(level);\n}\n\nasync function fetchAndTrace(url: string, init: RequestInit): Promise<Response> {\n  let _url: URL | null = null;\n  try {\n    _url = new URL(url);\n  } catch (error) {}\n  if (sentry && _url && (tracingOrigins.includes(_url.origin) || tracingPaths.includes(_url.pathname))) {\n    const transaction = sentry.startTransaction({\n      name: url,\n    });\n    const span = transaction.startChild({\n      op: \"http\",\n    }); // This function returns a Span\n\n    const response = await fetch(url, init);\n    span.finish(); // Remember that only finished spans will be sent with the transaction\n\n    transaction.finish(); // Finishing the transaction will send it to Sentry\n\n    return response;\n  }\n\n  return fetch(url, init);\n}\nfunction getApiKeyHeaders(): Record<string, string> {\n  const headers: Record<string, string> = {};\n  if (apiKey) headers[gatewayAuthHeader] = apiKey;\n  if (embedHost) headers[gatewayEmbedHostHeader] = embedHost;\n  return headers;\n}\n\nfunction debugLogResponse(response: Response) {\n  log.info(`Response: ${response.status} ${response.statusText}`);\n  log.info(`Url: ${response.url}`);\n}\n\nfunction logTracingHeader(response: Response) {\n  log.info(`Request tracing with traceID=${response.headers.get(\"x-web3-correlation-id\")}`);\n}\n\nexport const promiseTimeout = async <T>(ms: number, promise: Promise<T>): Promise<T> => {\n  let timeoutFunc: ReturnType<typeof setTimeout> | null = null;\n  try {\n    const timeout = new Promise<T>((_resolve, reject) => {\n      timeoutFunc = setTimeout(() => {\n        reject(new Error(`Timed out in ${ms}ms`));\n      }, ms);\n    });\n\n    const result = await Promise.race<T>([promise, timeout]);\n    // promise.race will return the first resolved promise\n    // then we clear the timeout\n    if (timeoutFunc != null) {\n      clearTimeout(timeoutFunc);\n    }\n    return result;\n  } catch (err) {\n    // clear the timeout\n    if (timeoutFunc != null) {\n      clearTimeout(timeoutFunc);\n    }\n    // rethrow the original error\n    throw err;\n  }\n};\n\nexport const get = async <T>(url: string, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {},\n  };\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"GET\" });\n  const response = await fetchAndTrace(url, options);\n  if (response.ok) {\n    const responseContentType = response.headers.get(\"content-type\");\n    if (responseContentType?.includes(\"application/json\")) {\n      return response.json() as Promise<T>;\n    }\n    return response.text() as Promise<T>;\n  }\n  debugLogResponse(response);\n  throw response;\n};\n\nexport const post = <T>(url: string, data: Data = {}, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"POST\" });\n\n  // deep merge changes the structure of form data and url encoded data ,\n  // so we should not deepmerge body data\n  if (customOptions.isUrlEncodedData) {\n    // for multipart request browser/client will add multipart content type\n    // along with multipart boundary , so for multipart request send\n    // content-type: undefined or send with multipart boundary if already known\n    options.body = data as string;\n    // If url encoded data, this must not be the content type\n    if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n  } else {\n    options.body = JSON.stringify(data);\n  }\n\n  return promiseTimeout<T>(\n    (customOptions.timeout as number) || 60000,\n    fetchAndTrace(url, options).then((response) => {\n      if (customOptions.logTracingHeader) {\n        logTracingHeader(response);\n      }\n      if (response.ok) {\n        const responseContentType = response.headers.get(\"content-type\");\n        if (responseContentType?.includes(\"application/json\")) {\n          return response.json() as Promise<T>;\n        }\n        return response.text() as Promise<T>;\n      }\n      debugLogResponse(response);\n      throw response;\n    })\n  );\n};\n\nexport const patch = async <T>(url: string, data: Data = {}, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n  // for multipart request browser/client will add multipart content type\n  // along with multipart boundary , so for multipart request send\n  // content-type: undefined or send with multipart boundary if already known\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"PATCH\" });\n  // deep merge changes the structure of form data and url encoded data ,\n  // so we should not deepmerge body data\n  if (customOptions.isUrlEncodedData) {\n    // for multipart request browser/client will add multipart content type\n    // along with multipart boundary , so for multipart request send\n    // content-type: undefined or send with multipart boundary if already known\n    options.body = data as string;\n    // If url encoded data, this must not be the content type\n    if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n  } else {\n    options.body = JSON.stringify(data);\n  }\n  const response = await fetchAndTrace(url, options);\n  if (response.ok) {\n    const responseContentType = response.headers.get(\"content-type\");\n    if (responseContentType?.includes(\"application/json\")) {\n      return response.json() as Promise<T>;\n    }\n    return response.text() as Promise<T>;\n  }\n  debugLogResponse(response);\n  throw response;\n};\n\nexport const put = async <T>(url: string, data: Data = {}, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n  // for multipart request browser/client will add multipart content type\n  // along with multipart boundary , so for multipart request send\n  // content-type: undefined or send with multipart boundary if already known\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"PUT\" });\n  // deep merge changes the structure of form data and url encoded data ,\n  // so we should not deepmerge body data\n  if (customOptions.isUrlEncodedData) {\n    // for multipart request browser/client will add multipart content type\n    // along with multipart boundary , so for multipart request send\n    // content-type: undefined or send with multipart boundary if already known\n    options.body = data as string;\n    // If url encoded data, this must not be the content type\n    if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n  } else {\n    options.body = JSON.stringify(data);\n  }\n  const response = await fetchAndTrace(url, options);\n  if (response.ok) {\n    const responseContentType = response.headers.get(\"content-type\");\n    if (responseContentType?.includes(\"application/json\")) {\n      return response.json() as Promise<T>;\n    }\n    return response.text() as Promise<T>;\n  }\n  debugLogResponse(response);\n  throw response;\n};\n\nexport const remove = async <T>(url: string, data: Data = {}, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n  // for multipart request browser/client will add multipart content type\n  // along with multipart boundary , so for multipart request send\n  // content-type: undefined or send with multipart boundary if already known\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"DELETE\" });\n  if (customOptions.isUrlEncodedData) {\n    // for multipart request browser/client will add multipart content type\n    // along with multipart boundary , so for multipart request send\n    // content-type: undefined or send with multipart boundary if already known\n    options.body = data as string;\n    // If url encoded data, this must not be the content type\n    if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n  } else {\n    options.body = JSON.stringify(data);\n  }\n  const response = await fetchAndTrace(url, options);\n  if (response.ok) {\n    const responseContentType = response.headers.get(\"content-type\");\n    if (responseContentType?.includes(\"application/json\")) {\n      return response.json() as Promise<T>;\n    }\n    return response.text() as Promise<T>;\n  }\n  debugLogResponse(response);\n  throw response;\n};\n\nexport const generateJsonRPCObject = (method: string, parameters: unknown) => ({\n  jsonrpc: \"2.0\",\n  method,\n  id: 10,\n  params: parameters,\n});\n\nexport const promiseRace = <T>(url: string, options: RequestInit, timeout = 60000) =>\n  Promise.race([\n    get<T>(url, options),\n    new Promise<T>((_resolve, reject) => {\n      setTimeout(() => {\n        reject(new Error(\"timed out\"));\n      }, timeout);\n    }),\n  ]);\n","import type { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { rpcErrors } from \"@metamask/rpc-errors\";\nimport { createAsyncMiddleware, createScaffoldMiddleware, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\n\nimport type { MessageParams, TransactionParams, TypedMessageParams, WalletMiddlewareOptions } from \"./interfaces\";\n\nfunction resemblesAddress(str: string): boolean {\n  // hex prefix 2 + 20 bytes\n  return str.length === 2 + 20 * 2;\n}\n\nexport function createWalletMiddleware({\n  getAccounts,\n  getPrivateKey,\n  processDecryptMessage,\n  processEncryptionPublicKey,\n  processEthSignMessage,\n  processPersonalMessage,\n  processTransaction,\n  processSignTransaction,\n  processTypedMessage,\n  processTypedMessageV3,\n  processTypedMessageV4,\n}: WalletMiddlewareOptions): JRPCMiddleware<string, unknown> {\n  if (!getAccounts) {\n    throw new Error(\"opts.getAccounts is required\");\n  }\n\n  //\n  // utility\n  //\n\n  /**\n   * Validates the keyholder address, and returns a normalized (i.e. lowercase)\n   * copy of it.\n   *\n   * an error\n   */\n  async function validateAndNormalizeKeyholder(address: string, req: JRPCRequest<unknown>): Promise<string> {\n    if (typeof address === \"string\" && address.length > 0) {\n      // ensure address is included in provided accounts\n      const accounts: string[] = await getAccounts(req);\n      const normalizedAccounts: string[] = accounts.map((_address) => _address.toLowerCase());\n      const normalizedAddress: string = address.toLowerCase();\n\n      if (normalizedAccounts.includes(normalizedAddress)) {\n        return normalizedAddress;\n      }\n    }\n    throw rpcErrors.invalidParams({\n      message: `Invalid parameters: must provide an Ethereum address.`,\n    });\n  }\n\n  //\n  // account lookups\n  //\n\n  async function lookupAccounts(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    res.result = await getAccounts(req);\n  }\n\n  async function lookupDefaultAccount(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const accounts = await getAccounts(req);\n    res.result = accounts[0] || null;\n  }\n\n  //\n  // transaction signatures\n  //\n\n  async function sendTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTransaction) {\n      throw rpcErrors.methodNotSupported();\n    }\n\n    const txParams: TransactionParams =\n      (req.params as TransactionParams[])[0] ||\n      ({\n        from: \"\",\n      } as TransactionParams);\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processTransaction(txParams, req);\n  }\n\n  async function signTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processSignTransaction) {\n      throw rpcErrors.methodNotSupported();\n    }\n\n    const txParams: TransactionParams =\n      (req.params as TransactionParams[])[0] ||\n      ({\n        from: \"\",\n      } as TransactionParams);\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processSignTransaction(txParams, req);\n  }\n\n  //\n  // message signatures\n  //\n\n  async function ethSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEthSignMessage) {\n      throw rpcErrors.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: string = (req.params as string[])[1];\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processEthSignMessage(msgParams, req);\n  }\n\n  async function signTypedData(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessage) {\n      throw rpcErrors.methodNotSupported();\n    }\n\n    const message: TypedDataV1 = (req.params as TypedDataV1[])[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[1], req);\n    const version = \"V1\";\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<TypedDataV1> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processTypedMessage(msgParams, req, version);\n  }\n\n  async function signTypedDataV3(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV3) {\n      throw rpcErrors.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V3\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV3(msgParams, req, version);\n  }\n\n  async function signTypedDataV4(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV4) {\n      throw rpcErrors.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V4\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV4(msgParams, req, version);\n  }\n\n  async function personalSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processPersonalMessage) {\n      throw rpcErrors.methodNotSupported();\n    }\n\n    // process normally\n    const firstParam: string = (req.params as string[])[0];\n    const secondParam: string = (req.params as string[])[1];\n    // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n\n    // We initially incorrectly ordered these parameters.\n    // To gracefully respect users who adopted this API early,\n    // we are currently gracefully recovering from the wrong param order\n    // when it is clearly identifiable.\n    //\n    // That means when the first param is definitely an address,\n    // and the second param is definitely not, but is hex.\n    let address: string, message: string;\n    if (resemblesAddress(firstParam) && !resemblesAddress(secondParam)) {\n      let warning = `The eth_personalSign method requires params ordered `;\n      warning += `[message, address]. This was previously handled incorrectly, `;\n      warning += `and has been corrected automatically. `;\n      warning += `Please switch this param order for smooth behavior in the future.`;\n      (res as { warning: string }).warning = warning;\n\n      address = firstParam;\n      message = secondParam;\n    } else {\n      message = firstParam;\n      address = secondParam;\n    }\n    address = await validateAndNormalizeKeyholder(address, req);\n\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    // eslint-disable-next-line require-atomic-updates\n    res.result = await processPersonalMessage(msgParams, req);\n  }\n\n  async function encryptionPublicKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEncryptionPublicKey) {\n      throw rpcErrors.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[0], req);\n\n    res.result = await processEncryptionPublicKey(address, req);\n  }\n\n  async function decryptMessage(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processDecryptMessage) {\n      throw rpcErrors.methodNotSupported();\n    }\n\n    const ciphertext: string = (req.params as string)[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[1], req);\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: ciphertext,\n    };\n\n    res.result = processDecryptMessage(msgParams, req);\n  }\n\n  async function fetchPrivateKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!getPrivateKey) {\n      throw rpcErrors.methodNotSupported();\n    }\n    res.result = getPrivateKey(req);\n  }\n\n  return createScaffoldMiddleware({\n    // account lookups\n    eth_accounts: createAsyncMiddleware(lookupAccounts),\n    eth_private_key: createAsyncMiddleware(fetchPrivateKey),\n    private_key: createAsyncMiddleware(fetchPrivateKey),\n    eth_coinbase: createAsyncMiddleware(lookupDefaultAccount),\n    // tx signatures\n    eth_sendTransaction: createAsyncMiddleware(sendTransaction),\n    eth_signTransaction: createAsyncMiddleware(signTransaction),\n    // message signatures\n    eth_sign: createAsyncMiddleware(ethSign),\n    eth_signTypedData: createAsyncMiddleware(signTypedData),\n    eth_signTypedData_v3: createAsyncMiddleware(signTypedDataV3),\n    eth_signTypedData_v4: createAsyncMiddleware(signTypedDataV4),\n    personal_sign: createAsyncMiddleware(personalSign),\n    eth_getEncryptionPublicKey: createAsyncMiddleware(encryptionPublicKey),\n    eth_decrypt: createAsyncMiddleware(decryptMessage),\n  });\n}\n","import { rpcErrors } from \"@metamask/rpc-errors\";\nimport {\n  createAsyncMiddleware,\n  createScaffoldMiddleware,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  mergeMiddleware,\n} from \"@toruslabs/openlogin-jrpc\";\n\nimport { AddEthereumChainParameter, IAccountHandlers, IChainSwitchHandlers, IProviderHandlers } from \"./interfaces\";\nimport { createWalletMiddleware } from \"./walletMidddleware\";\n\nexport function createEthMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const {\n    getAccounts,\n    getPrivateKey,\n    processTransaction,\n    processSignTransaction,\n    processEthSignMessage,\n    processTypedMessage,\n    processTypedMessageV3,\n    processTypedMessageV4,\n    processPersonalMessage,\n    processEncryptionPublicKey,\n    processDecryptMessage,\n  } = providerHandlers;\n  const ethMiddleware = mergeMiddleware([\n    createScaffoldMiddleware({\n      eth_syncing: false,\n    }),\n    createWalletMiddleware({\n      getAccounts,\n      getPrivateKey,\n      processTransaction,\n      processEthSignMessage,\n      processSignTransaction,\n      processTypedMessage,\n      processTypedMessageV3,\n      processTypedMessageV4,\n      processPersonalMessage,\n      processEncryptionPublicKey,\n      processDecryptMessage,\n    }) as JRPCMiddleware<unknown, unknown>,\n  ]);\n  return ethMiddleware;\n}\n\nexport function createChainSwitchMiddleware({ addChain, switchChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  async function addNewChain(req: JRPCRequest<AddEthereumChainParameter[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw rpcErrors.invalidParams(\"Missing chain params\");\n    if (!chainParams.chainId) throw rpcErrors.invalidParams(\"Missing chainId in chainParams\");\n    if (!chainParams.rpcUrls || chainParams.rpcUrls.length === 0) throw rpcErrors.invalidParams(\"Missing rpcUrls in chainParams\");\n    if (!chainParams.nativeCurrency) throw rpcErrors.invalidParams(\"Missing nativeCurrency in chainParams\");\n\n    res.result = await addChain(chainParams);\n  }\n  async function updateChain(req: JRPCRequest<{ chainId: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw rpcErrors.invalidParams(\"Missing chainId\");\n    res.result = await switchChain(chainParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_addEthereumChain: createAsyncMiddleware(addNewChain) as JRPCMiddleware<unknown, unknown>,\n    wallet_switchEthereumChain: createAsyncMiddleware(updateChain) as JRPCMiddleware<unknown, unknown>,\n  });\n}\n\n// #region account middlewares\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  async function updateAccount(req: JRPCRequest<{ privateKey: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const accountParams = req.params?.length ? req.params[0] : undefined;\n    if (!accountParams?.privateKey) throw rpcErrors.invalidParams(\"Missing privateKey\");\n    res.result = await updatePrivatekey(accountParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_updateAccount: createAsyncMiddleware(updateAccount) as JRPCMiddleware<unknown, unknown>,\n  });\n}\n\n// #endregion account middlewares\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport {\n  Block,\n  JRPCEngineEndCallback,\n  JRPCEngineNextCallback,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  mergeMiddleware,\n} from \"@toruslabs/openlogin-jrpc\";\nimport type { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, string> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: CustomChainConfig): JRPCMiddleware<unknown, CustomChainConfig> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<CustomChainConfig>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createJsonRpcClient(providerConfig: CustomChainConfig): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<string[], Block>;\n} {\n  const { chainId, rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([\n    createChainIdMiddleware(chainId) as JRPCMiddleware<unknown, unknown>,\n    createProviderConfigMiddleware(providerConfig) as JRPCMiddleware<unknown, unknown>,\n    fetchMiddleware as JRPCMiddleware<unknown, unknown>,\n  ]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { providerErrors, rpcErrors } from \"@metamask/rpc-errors\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport type { ISignClient, SessionTypes } from \"@walletconnect/types\";\nimport { getAccountsFromNamespaces, parseAccountId } from \"@walletconnect/utils\";\n\nimport { IProviderHandlers, MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/interfaces\";\n\nasync function getLastActiveSession(signClient: ISignClient): Promise<SessionTypes.Struct | null> {\n  if (signClient.session.length) {\n    const lastKeyIndex = signClient.session.keys.length - 1;\n    return signClient.session.get(signClient.session.keys[lastKeyIndex]);\n  }\n  return null;\n}\n\nexport async function sendJrpcRequest<T, U>(signClient: ISignClient, chainId: number, method: string, params: U): Promise<T> {\n  const session = await getLastActiveSession(signClient);\n  if (!session) {\n    throw providerErrors.disconnected();\n  }\n  return signClient.request<T>({\n    topic: session.topic,\n    chainId: `eip155:${chainId}`,\n    request: {\n      method,\n      params,\n    },\n  });\n}\n\nexport async function getAccounts(signClient: ISignClient): Promise<string[]> {\n  const session = await getLastActiveSession(signClient);\n  if (!session) {\n    throw providerErrors.disconnected();\n  }\n  const accounts = getAccountsFromNamespaces(session.namespaces);\n  if (accounts && accounts.length) {\n    return [\n      ...new Set(\n        accounts.map((add) => {\n          return parseAccountId(add).address;\n        })\n      ),\n    ];\n  }\n  throw new Error(\"Failed to get accounts\");\n}\n\nexport function getProviderHandlers({ connector, chainId }: { connector: ISignClient; chainId: number }): IProviderHandlers {\n  return {\n    getPrivateKey: async () => {\n      throw rpcErrors.methodNotSupported();\n    },\n    getAccounts: async (_: JRPCRequest<unknown>) => {\n      return getAccounts(connector);\n    },\n    processTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const methodRes = await sendJrpcRequest<string, TransactionParams[]>(connector, chainId, \"eth_sendTransaction\", [txParams]);\n      return methodRes;\n    },\n    processSignTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const methodRes = await sendJrpcRequest<string, TransactionParams[]>(connector, chainId, \"eth_signTransaction\", [txParams]);\n      return methodRes;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const methodRes = await sendJrpcRequest<string, string[]>(connector, chainId, \"eth_sign\", [msgParams.from, msgParams.data]);\n      return methodRes;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const methodRes = await sendJrpcRequest<string, string[]>(connector, chainId, \"personal_sign\", [msgParams.from, msgParams.data]);\n      return methodRes;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      const methodRes = await sendJrpcRequest<string, unknown[]>(connector, chainId, \"eth_signTypedData\", [msgParams.data, msgParams.from]);\n      return methodRes;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const methodRes = await sendJrpcRequest<string, unknown[]>(connector, chainId, \"eth_signTypedData_v3\", [msgParams.from, msgParams.data]);\n      return methodRes;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const methodRes = await sendJrpcRequest<string, unknown[]>(connector, chainId, \"eth_signTypedData_v4\", [msgParams.from, msgParams.data]);\n      return methodRes;\n    },\n    processEncryptionPublicKey: async (_: string): Promise<string> => {\n      throw rpcErrors.methodNotSupported();\n    },\n    processDecryptMessage: (_: MessageParams<string>): string => {\n      throw rpcErrors.methodNotSupported();\n    },\n  };\n}\n","import { providerErrors } from \"@metamask/rpc-errors\";\nimport { JRPCEngine, JRPCMiddleware, providerFromEngine } from \"@toruslabs/openlogin-jrpc\";\nimport type { ISignClient, SignClientTypes } from \"@walletconnect/types\";\nimport { getAccountsFromNamespaces, getChainsFromNamespaces, parseAccountId, parseChainId } from \"@walletconnect/utils\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, getChainConfig, log, WalletLoginError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\n\nimport { createChainSwitchMiddleware, createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { AddEthereumChainParameter, IChainSwitchHandlers } from \"../../rpc/interfaces\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getAccounts, getProviderHandlers } from \"./walletConnectV2Utils\";\n\nexport interface WalletConnectV2ProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface WalletConnectV2ProviderState extends BaseProviderState {\n  accounts: string[];\n}\n\nexport class WalletConnectV2Provider extends BaseProvider<BaseProviderConfig, WalletConnectV2ProviderState, ISignClient> {\n  private connector: ISignClient | null = null;\n\n  constructor({ config, state, connector }: { config: WalletConnectV2ProviderConfig; state?: BaseProviderState; connector?: ISignClient }) {\n    super({\n      config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 }, skipLookupNetwork: !!config.skipLookupNetwork },\n      state: { ...(state || {}), chainId: \"loading\", accounts: [] },\n    });\n    this.connector = connector || null;\n  }\n\n  public static getProviderInstance = async (params: {\n    connector: ISignClient;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n    skipLookupNetwork: boolean;\n  }): Promise<WalletConnectV2Provider> => {\n    const providerFactory = new WalletConnectV2Provider({ config: { chainConfig: params.chainConfig, skipLookupNetwork: params.skipLookupNetwork } });\n    await providerFactory.setupProvider(params.connector);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.connector)\n      throw providerErrors.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    await this.setupProvider(this.connector);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(connector: ISignClient): Promise<void> {\n    this.onConnectorStateUpdate(connector);\n    await this.setupEngine(connector);\n  }\n\n  public async switchChain({ chainId }: { chainId: string }): Promise<void> {\n    if (!this.connector)\n      throw providerErrors.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    const currentChainConfig = this.getChainConfig(chainId);\n    this.configure({ chainConfig: currentChainConfig });\n    await this.setupEngine(this.connector);\n    this.lookupNetwork(this.connector);\n  }\n\n  async addChain(chainConfig: CustomChainConfig): Promise<void> {\n    super.addChain(chainConfig);\n  }\n\n  // no need to implement this method in wallet connect v2.\n  protected async lookupNetwork(_: ISignClient): Promise<string> {\n    const newChainId = this.config.chainConfig.chainId;\n    this.update({ chainId: newChainId });\n    this.emit(\"chainChanged\", newChainId);\n    this.emit(\"connect\", { chainId: newChainId });\n    return this.config.chainConfig.chainId;\n  }\n\n  private async setupEngine(connector: ISignClient): Promise<void> {\n    const { chainId } = this.config.chainConfig;\n    const numChainId = parseInt(chainId, 16);\n    const providerHandlers = getProviderHandlers({ connector, chainId: numChainId });\n    const jrpcRes = await getAccounts(connector);\n\n    this.update({\n      accounts: jrpcRes || [],\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const chainSwitchMiddleware = this.getChainSwitchMiddleware();\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(chainSwitchMiddleware);\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addChain: async (params: AddEthereumChainParameter): Promise<void> => {\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = params;\n        this.addChain({\n          chainNamespace: CHAIN_NAMESPACES.EIP155,\n          chainId,\n          ticker: nativeCurrency?.symbol || \"ETH\",\n          tickerName: nativeCurrency?.name || \"Ether\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n          decimals: nativeCurrency?.decimals || 18,\n        });\n      },\n      switchChain: async (params: { chainId: string }): Promise<void> => {\n        const { chainId } = params;\n        await this.switchChain({ chainId });\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private connectedTopic() {\n    if (!this.connector) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n    if (this.connector?.session?.length) {\n      // currently we are supporting only 1 active session\n      const lastKeyIndex = this.connector.session.keys.length - 1;\n      return this.connector.session.get(this.connector.session.keys[lastKeyIndex])?.topic;\n    }\n    return undefined;\n  }\n\n  private checkIfChainIdAllowed(chainId: string) {\n    if (!this.connector || !this.connectedTopic()) return false;\n    const sessionData = this.connector.session.get(this.connectedTopic());\n    const allChains = getChainsFromNamespaces(sessionData.namespaces);\n\n    let chainAllowed = false;\n    for (const chain of allChains) {\n      const parsedId = parseChainId(chain);\n      if (Number.parseInt(parsedId.reference, 10) === Number.parseInt(chainId, 10)) {\n        chainAllowed = true;\n        break;\n      }\n    }\n    return chainAllowed;\n  }\n\n  private checkIfAccountAllowed(address: string) {\n    if (!this.connector || !this.connectedTopic()) return false;\n    const sessionData = this.connector.session.get(this.connectedTopic());\n    const allAccounts = getAccountsFromNamespaces(sessionData.namespaces);\n    let accountAllowed = false;\n    for (const account of allAccounts) {\n      const parsedAccount = parseAccountId(account);\n      if (parsedAccount.address?.toLowerCase() === address?.toLowerCase()) {\n        accountAllowed = true;\n        break;\n      }\n    }\n    return accountAllowed;\n  }\n\n  private async onConnectorStateUpdate(connector: ISignClient) {\n    connector.events.on(\"session_event\", async (payload: SignClientTypes.EventArguments[\"session_event\"]) => {\n      log.debug(\"session_event data\", payload);\n      if (!this.provider) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n      const { event } = payload.params;\n      const { name, data } = event || {};\n      // Check if accounts changed and trigger event\n      if (name === \"accountsChanged\" && data?.length && this.state.accounts[0] !== data[0] && this.checkIfAccountAllowed(data[0])) {\n        this.update({\n          accounts: data,\n        });\n        this.emit(\"accountsChanged\", data);\n      }\n\n      if (event.name === \"chainChanged\") {\n        const { chainId: connectedChainId, rpcUrl } = data;\n        const connectedHexChainId = `0x${connectedChainId.toString(16)}`;\n\n        if (!this.checkIfChainIdAllowed(connectedHexChainId)) return;\n        // Check if chainId changed and trigger event\n        if (connectedHexChainId && this.state.chainId !== connectedHexChainId) {\n          const maybeConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, connectedHexChainId) || {};\n          // Handle rpcUrl update\n          this.configure({\n            chainConfig: { ...maybeConfig, chainId: connectedHexChainId, rpcTarget: rpcUrl, chainNamespace: CHAIN_NAMESPACES.EIP155 },\n          });\n          await this.setupEngine(connector);\n        }\n      }\n    });\n  }\n}\n","import { stripHexPrefix } from \"@ethereumjs/util\";\nimport BigNumber from \"bignumber.js\";\n\ntype DenominationType = \"WEI\" | \"GWEI\" | \"ETH\";\ntype NumericBaseType = \"hex\" | \"dec\";\n\ntype ConverterInput = {\n  value: string | BigNumber;\n  fromNumericBase: NumericBaseType;\n  fromDenomination?: DenominationType;\n  toNumericBase?: NumericBaseType;\n  toDenomination?: DenominationType;\n  numberOfDecimals?: number;\n};\n// Big Number Constants\nconst BIG_NUMBER_WEI_MULTIPLIER = new BigNumber(\"1e18\");\nconst BIG_NUMBER_GWEI_MULTIPLIER = new BigNumber(\"1e9\");\nconst BIG_NUMBER_ETH_MULTIPLIER = new BigNumber(\"1\");\n\n// Setter Maps\nconst toBigNumber: Record<NumericBaseType, (n: string | BigNumber) => BigNumber> = {\n  hex: (n: string | BigNumber) => (typeof n === \"string\" ? new BigNumber(stripHexPrefix(n), 16) : new BigNumber(n, 16)),\n  dec: (n: string | BigNumber) => new BigNumber(n, 10),\n};\nconst toNormalizedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.div(BIG_NUMBER_WEI_MULTIPLIER),\n  GWEI: (bigNumber) => bigNumber.div(BIG_NUMBER_GWEI_MULTIPLIER),\n  ETH: (bigNumber) => bigNumber.div(BIG_NUMBER_ETH_MULTIPLIER),\n};\nconst toSpecifiedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.times(BIG_NUMBER_WEI_MULTIPLIER).dp(0, BigNumber.ROUND_HALF_UP),\n  GWEI: (bigNumber) => bigNumber.times(BIG_NUMBER_GWEI_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n  ETH: (bigNumber) => bigNumber.times(BIG_NUMBER_ETH_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n};\nconst baseChange: Record<string, (n: BigNumber) => string> = {\n  hex: (n) => n.toString(16),\n  dec: (n) => new BigNumber(n).toString(10),\n};\n\nconst converter = (params: ConverterInput): string | BigNumber => {\n  const { value, fromNumericBase, fromDenomination, toNumericBase, toDenomination, numberOfDecimals } = params;\n  let convertedValue: string | BigNumber = toBigNumber[fromNumericBase](value);\n\n  if (fromDenomination) {\n    convertedValue = toNormalizedDenomination[fromDenomination](convertedValue as BigNumber);\n  }\n\n  if (toDenomination) {\n    convertedValue = toSpecifiedDenomination[toDenomination](convertedValue as BigNumber);\n  }\n\n  if (numberOfDecimals) {\n    convertedValue = (convertedValue as BigNumber).dp(numberOfDecimals, BigNumber.ROUND_HALF_DOWN);\n  }\n\n  if (toNumericBase) {\n    convertedValue = baseChange[toNumericBase](convertedValue);\n  }\n  return convertedValue;\n};\n\nconst conversionUtil = (\n  value: string | BigNumber,\n  { fromNumericBase = \"hex\", toNumericBase, fromDenomination, toDenomination, numberOfDecimals }: Partial<ConverterInput>\n): BigNumber | string => {\n  return converter({\n    fromNumericBase,\n    toNumericBase,\n    fromDenomination,\n    toDenomination,\n    numberOfDecimals,\n    value: value || \"0\",\n  });\n};\n\nfunction decGWEIToHexWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"dec\",\n    toNumericBase: \"hex\",\n    fromDenomination: \"GWEI\",\n    toDenomination: \"WEI\",\n  }) as string;\n}\n\nfunction hexWEIToDecGWEI(decGWEI: string | BigNumber): string | BigNumber {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"hex\",\n    toNumericBase: \"dec\",\n    fromDenomination: \"WEI\",\n    toDenomination: \"GWEI\",\n  }) as string;\n}\n\nexport { conversionUtil, decGWEIToHexWEI, hexWEIToDecGWEI };\n","import { isValidAddress } from \"@ethereumjs/util\";\nimport {\n  MessageTypeProperty,\n  SignTypedDataVersion,\n  TYPED_MESSAGE_SCHEMA,\n  TypedDataV1Field,\n  TypedMessage,\n  typedSignatureHash,\n} from \"@metamask/eth-sig-util\";\nimport { rpcErrors } from \"@metamask/rpc-errors\";\nimport { get } from \"@toruslabs/http-helpers\";\nimport { isHexStrict } from \"@web3auth/base\";\nimport assert from \"assert\";\nimport { BigNumber } from \"bignumber.js\";\nimport jsonschema from \"jsonschema\";\n\nimport { TypedMessageParams } from \"../../../rpc/interfaces\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { EIP1159GasData, EthereumGasFeeEstimates, LegacyGasData } from \"./interfaces\";\n\nexport function normalizeGWEIDecimalNumbers(n: string | BigNumber): string {\n  const numberAsWEIHex = decGWEIToHexWEI(n);\n  const numberAsGWEI = hexWEIToDecGWEI(numberAsWEIHex).toString();\n  return numberAsGWEI;\n}\n\nexport async function fetchEip1159GasEstimates(url: string): Promise<EthereumGasFeeEstimates> {\n  const estimates = await get<EIP1159GasData>(url);\n  const normalizedEstimates: EthereumGasFeeEstimates = {\n    ...estimates,\n    estimatedBaseFee: normalizeGWEIDecimalNumbers(estimates.estimatedBaseFee),\n    low: {\n      ...estimates.low,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxFeePerGas),\n    },\n    medium: {\n      ...estimates.medium,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxFeePerGas),\n    },\n    high: {\n      ...estimates.high,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxFeePerGas),\n    },\n  };\n  return normalizedEstimates;\n}\n\n/**\n * Hit the legacy MetaSwaps gasPrices estimate api and return the low, medium\n * high values from that API.\n */\nexport async function fetchLegacyGasPriceEstimates(url: string): Promise<LegacyGasData> {\n  const result = await get<{\n    SafeGasPrice: string;\n    ProposeGasPrice: string;\n    FastGasPrice: string;\n  }>(url, {\n    referrer: url,\n    referrerPolicy: \"no-referrer-when-downgrade\",\n    method: \"GET\",\n    mode: \"cors\",\n  });\n  return {\n    low: result.SafeGasPrice,\n    medium: result.ProposeGasPrice,\n    high: result.FastGasPrice,\n  };\n}\n\nexport const validateTypedMessageParams = (parameters: TypedMessageParams<unknown>, activeChainId: number) => {\n  try {\n    assert.ok(parameters && typeof parameters === \"object\", \"Params must be an object.\");\n    assert.ok(\"data\" in parameters, 'Params must include a \"data\" field.');\n    assert.ok(\"from\" in parameters, 'Params must include a \"from\" field.');\n    assert.ok(\n      typeof parameters.from === \"string\" && isValidAddress(parameters.from),\n      '\"from\" field must be a valid, lowercase, hexadecimal Ethereum address string.'\n    );\n    let data: unknown = null;\n    let chainId = null;\n    switch ((parameters as TypedMessageParams<unknown>).version) {\n      case SignTypedDataVersion.V1:\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n        assert.ok(Array.isArray(data as unknown), \"params.data must be an array.\");\n        assert.doesNotThrow(() => {\n          typedSignatureHash(data as TypedDataV1Field[]);\n        }, \"Signing data must be valid EIP-712 typed data.\");\n        break;\n      case SignTypedDataVersion.V3:\n      case SignTypedDataVersion.V4: {\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n        const typedData = data as TypedMessage<{\n          EIP712Domain: MessageTypeProperty[];\n        }>;\n\n        assert.ok(typedData.primaryType in typedData.types, `Primary type of \"${typedData.primaryType}\" has no type definition.`);\n        const validation = jsonschema.validate(typedData, TYPED_MESSAGE_SCHEMA.properties);\n        assert.strictEqual(validation.errors.length, 0, \"Signing data must conform to EIP-712 schema. See https://git.io/fNtcx.\");\n        chainId = typedData.domain?.chainId;\n        if (chainId) {\n          assert.ok(!Number.isNaN(activeChainId), `Cannot sign messages for chainId \"${chainId}\", because Web3Auth is switching networks.`);\n          if (typeof chainId === \"string\") {\n            chainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n          }\n          assert.strictEqual(chainId, activeChainId, `Provided chainId \"${chainId}\" must match the active chainId \"${activeChainId}\"`);\n        }\n        break;\n      }\n      default:\n        assert.fail(`Unknown typed data version \"${(parameters as TypedMessageParams<unknown>).version}\"`);\n    }\n  } catch (error) {\n    throw rpcErrors.invalidInput({\n      message: (error as Error)?.message,\n    });\n  }\n};\n","import { TransactionFactory } from \"@ethereumjs/tx\";\nimport { privateToAddress, stripHexPrefix } from \"@ethereumjs/util\";\nimport {\n  decrypt,\n  EthEncryptedData,\n  getEncryptionPublicKey,\n  MessageTypes,\n  personalSign,\n  signTypedData,\n  SignTypedDataVersion,\n  TypedDataV1,\n  TypedMessage,\n} from \"@metamask/eth-sig-util\";\nimport { providerErrors } from \"@metamask/rpc-errors\";\nimport { signMessage } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { isHexStrict, log, SafeEventEmitterProvider } from \"@web3auth/base\";\n\nimport { IProviderHandlers, MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/interfaces\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\nimport { validateTypedMessageParams } from \"./TransactionFormatter/utils\";\n\nasync function signTx(txParams: TransactionParams & { gas?: string }, privKey: string, txFormatter: TransactionFormatter): Promise<Buffer> {\n  const finalTxParams = await txFormatter.formatTransaction(txParams);\n  const common = await txFormatter.getCommonConfiguration();\n  const unsignedEthTx = TransactionFactory.fromTxData(finalTxParams, {\n    common,\n  });\n  const signedTx = unsignedEthTx.sign(Buffer.from(privKey, \"hex\")).serialize();\n  return Buffer.from(signedTx);\n}\n\nexport function getProviderHandlers({\n  txFormatter,\n  privKey,\n  getProviderEngineProxy,\n}: {\n  txFormatter: TransactionFormatter;\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): IProviderHandlers {\n  return {\n    getAccounts: async (_: JRPCRequest<unknown>) => [`0x${Buffer.from(privateToAddress(Buffer.from(privKey, \"hex\"))).toString(\"hex\")}`],\n    getPrivateKey: async (_: JRPCRequest<unknown>) => privKey,\n    processTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw providerErrors.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      if (txParams.input && !txParams.data) txParams.data = txParams.input;\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      const txHash = await providerEngineProxy.request<[string], string>({\n        method: \"eth_sendRawTransaction\",\n        params: [\"0x\".concat(signedTx.toString(\"hex\"))],\n      });\n      return txHash;\n    },\n    processSignTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw providerErrors.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      if (txParams.input && !txParams.data) txParams.data = txParams.input;\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      return `0x${signedTx.toString(\"hex\")}`;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const rawMessageSig = signMessage(privKey, msgParams.data);\n      return rawMessageSig;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = personalSign({ privateKey: privKeyBuffer, data: msgParams.data });\n      return sig;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessage\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw providerErrors.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<never, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      const params = {\n        ...msgParams,\n        version: SignTypedDataVersion.V1,\n      };\n      validateTypedMessageParams(params, finalChainId);\n      const data = typeof params.data === \"string\" ? JSON.parse(params.data) : params.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V1 });\n      return sig;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV3\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw providerErrors.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<never, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V3 });\n      return sig;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV4\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw providerErrors.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<never, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V4 });\n      return sig;\n    },\n    processEncryptionPublicKey: async (address: string, _: JRPCRequest<unknown>): Promise<string> => {\n      log.info(\"processEncryptionPublicKey\", address);\n      return getEncryptionPublicKey(privKey);\n    },\n    processDecryptMessage: (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): string => {\n      log.info(\"processDecryptMessage\", msgParams);\n      const stripped = stripHexPrefix(msgParams.data);\n      const buff = Buffer.from(stripped, \"hex\");\n      const decrypted = decrypt({ encryptedData: JSON.parse(buff.toString(\"utf8\")) as EthEncryptedData, privateKey: privKey });\n      return decrypted;\n    },\n  };\n}\n","import { addHexPrefix, stripHexPrefix } from \"@ethereumjs/util\";\nimport { BigNumber } from \"bignumber.js\";\nimport BN from \"bn.js\";\n\nexport function bnLessThan(a: string | number, b: string | number) {\n  if (a === null || a === undefined || b === null || b === undefined) {\n    return null;\n  }\n  return new BigNumber(a, 10).lt(b, 10);\n}\n\nexport function bnToHex(inputBn: BN) {\n  return addHexPrefix(inputBn.toString(16));\n}\n\nexport function hexToBn(inputHex: string): BN {\n  if (BN.isBN(inputHex)) return inputHex;\n  return new BN(stripHexPrefix(inputHex), 16);\n}\n\nexport function BnMultiplyByFraction(targetBN: BN, numerator: number | string, denominator: number | string): BN {\n  const numberBN = new BN(numerator);\n  const denomBN = new BN(denominator);\n  return targetBN.mul(numberBN).div(denomBN);\n}\n","export const LegacyGasAPIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/gasPrices\";\nexport const EIP1559APIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/suggestedGasFees\";\nexport const TRANSACTION_ENVELOPE_TYPES = {\n  LEGACY: \"0x0\",\n  ACCESS_LIST: \"0x1\",\n  FEE_MARKET: \"0x2\",\n};\n\nexport const TRANSACTION_TYPES = {\n  SENT_ETHER: \"sentEther\",\n  CONTRACT_INTERACTION: \"contractInteraction\",\n  DEPLOY_CONTRACT: \"contractDeployment\",\n  STANDARD_TRANSACTION: \"transaction\",\n};\n\nexport const GAS_ESTIMATE_TYPES = {\n  FEE_MARKET: \"fee-market\",\n  LEGACY: \"legacy\",\n  ETH_GASPRICE: \"eth_gasPrice\",\n  NONE: \"none\",\n};\n","import { Common, Hardfork } from \"@ethereumjs/common\";\nimport { addHexPrefix, AddressLike, stripHexPrefix } from \"@ethereumjs/util\";\nimport { Block } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, log, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport BigNumber from \"bignumber.js\";\n\nimport { TransactionParams } from \"../../../rpc/interfaces\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { bnLessThan, BnMultiplyByFraction, bnToHex, hexToBn } from \"../../utils\";\nimport { EIP1559APIEndpoint, GAS_ESTIMATE_TYPES, LegacyGasAPIEndpoint, TRANSACTION_ENVELOPE_TYPES, TRANSACTION_TYPES } from \"./constants\";\nimport { EIP1159GasData, EthereumGasFeeEstimates, FallbackGasData, FeeHistoryResponse, GasData, LegacyGasData, TxType } from \"./interfaces\";\nimport { fetchEip1159GasEstimates, fetchLegacyGasPriceEstimates } from \"./utils\";\n\nexport class TransactionFormatter {\n  // https://0x.org/docs/introduction/0x-cheat-sheet#swap-api-endpoints\n  readonly API_SUPPORTED_CHAINIDS = new Set([\"0x1\", \"0x5\", \"0x13881\", \"0xa4b1\", \"0xa86a\", \"0x2105\", \"0x38\", \"0xfa\", \"0xa\", \"0x89\"]);\n\n  private chainConfig: CustomChainConfig | null = null;\n\n  private getProviderEngineProxy: () => SafeEventEmitterProvider;\n\n  private isEIP1559Compatible = false;\n\n  constructor({ getProviderEngineProxy }: { getProviderEngineProxy: () => SafeEventEmitterProvider }) {\n    this.getProviderEngineProxy = getProviderEngineProxy;\n  }\n\n  get providerProxy() {\n    return this.getProviderEngineProxy();\n  }\n\n  async init(): Promise<void> {\n    this.chainConfig = (await this.providerProxy.request<never, CustomChainConfig>({ method: \"eth_provider_config\" })) as CustomChainConfig;\n    this.isEIP1559Compatible = await this.getEIP1559Compatibility();\n  }\n\n  async getCommonConfiguration(): Promise<Common> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const { displayName: name, chainId } = this.chainConfig;\n    const hardfork = this.isEIP1559Compatible ? Hardfork.Paris : Hardfork.Berlin;\n    const customChainParams = {\n      name,\n      chainId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      networkId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      defaultHardfork: hardfork,\n    };\n    return Common.custom(customChainParams);\n  }\n\n  async formatTransaction(txParams: TransactionParams & { gas?: string }): Promise<TransactionParams & { gas?: string }> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n\n    const clonedTxParams = {\n      ...txParams,\n    };\n\n    if (clonedTxParams.nonce === undefined)\n      clonedTxParams.nonce = (await this.providerProxy.request<[string, string], number>({\n        method: \"eth_getTransactionCount\",\n        params: [txParams.from, \"latest\"],\n      })) as number;\n\n    if (!this.isEIP1559Compatible && clonedTxParams.gasPrice) {\n      if (clonedTxParams.maxFeePerGas) delete clonedTxParams.maxFeePerGas;\n      if (clonedTxParams.maxPriorityFeePerGas) delete clonedTxParams.maxPriorityFeePerGas;\n      // if user provides gas Limit, we should use it instead\n      // if gas is not provided explicitly, estimate it.\n      if (!clonedTxParams.gasLimit) {\n        if (!clonedTxParams.gas) {\n          const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n          if (defaultGasLimit) {\n            clonedTxParams.gasLimit = defaultGasLimit;\n          }\n        } else {\n          clonedTxParams.gasLimit = clonedTxParams.gas;\n        }\n      }\n      return clonedTxParams;\n    }\n\n    if (!clonedTxParams.gasLimit) {\n      if (!clonedTxParams.gas) {\n        const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n        if (defaultGasLimit) {\n          clonedTxParams.gasLimit = defaultGasLimit;\n        }\n      } else {\n        clonedTxParams.gasLimit = clonedTxParams.gas;\n      }\n    }\n\n    const {\n      gasPrice: defaultGasPrice,\n      maxFeePerGas: defaultMaxFeePerGas,\n      maxPriorityFeePerGas: defaultMaxPriorityFeePerGas,\n    } = await this.getDefaultGasFees(clonedTxParams);\n\n    if (this.isEIP1559Compatible) {\n      // If the dapp has suggested a gas price, but no maxFeePerGas or maxPriorityFeePerGas\n      //  then we set maxFeePerGas and maxPriorityFeePerGas to the suggested gasPrice.\n      if (clonedTxParams.gasPrice && !clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n        clonedTxParams.maxFeePerGas = clonedTxParams.gasPrice;\n\n        clonedTxParams.maxPriorityFeePerGas = bnLessThan(\n          typeof defaultMaxPriorityFeePerGas === \"string\" ? stripHexPrefix(defaultMaxPriorityFeePerGas) : defaultMaxPriorityFeePerGas,\n          typeof clonedTxParams.gasPrice === \"string\" ? stripHexPrefix(clonedTxParams.gasPrice) : clonedTxParams.gasPrice\n        )\n          ? defaultMaxPriorityFeePerGas\n          : clonedTxParams.gasPrice;\n      } else {\n        if (defaultMaxFeePerGas && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, then we set maxFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxFeePerGas = defaultMaxFeePerGas;\n        }\n\n        if (defaultMaxPriorityFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, then we set maxPriorityFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxPriorityFeePerGas = defaultMaxPriorityFeePerGas;\n        }\n\n        if (defaultGasPrice && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, and no maxFeePerGas is available\n          // then we set maxFeePerGas to the defaultGasPrice, assuming it is\n          // available.\n          clonedTxParams.maxFeePerGas = defaultGasPrice;\n        }\n\n        if (clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, and no maxPriorityFeePerGas is\n          // available  then we set maxPriorityFeePerGas to\n          // clonedTxParams.maxFeePerGas, which will either be the gasPrice from the controller, the maxFeePerGas\n          // set by the dapp, or the maxFeePerGas from the controller.\n          clonedTxParams.maxPriorityFeePerGas = clonedTxParams.maxFeePerGas;\n        }\n      }\n\n      // We remove the gasPrice param entirely when on an eip1559 compatible network\n\n      delete clonedTxParams.gasPrice;\n    } else {\n      // We ensure that maxFeePerGas and maxPriorityFeePerGas are not in the transaction params\n      // when not on a EIP1559 compatible network\n\n      delete clonedTxParams.maxPriorityFeePerGas;\n      delete clonedTxParams.maxFeePerGas;\n    }\n\n    // If we have gotten to this point, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas are\n    // set on txParams, it means that either we are on a non-EIP1559 network and the dapp didn't suggest\n    // a gas price, or we are on an EIP1559 network, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas\n    // were available from either the dapp or the network.\n    if (defaultGasPrice && !clonedTxParams.gasPrice && !clonedTxParams.maxPriorityFeePerGas && !clonedTxParams.maxFeePerGas) {\n      clonedTxParams.gasPrice = defaultGasPrice as never;\n    }\n\n    clonedTxParams.type = this.isEIP1559Compatible ? TRANSACTION_ENVELOPE_TYPES.FEE_MARKET : TRANSACTION_ENVELOPE_TYPES.LEGACY;\n    clonedTxParams.chainId = this.chainConfig.chainId;\n    return clonedTxParams;\n  }\n\n  private async fetchEthGasPriceEstimate(): Promise<{ gasPrice: string }> {\n    const gasPrice = (await this.providerProxy.request<[], string>({ method: \"eth_gasPrice\", params: [] })) as string;\n    return {\n      gasPrice: hexWEIToDecGWEI(gasPrice).toString(),\n    };\n  }\n\n  private async fetchGasEstimatesViaEthFeeHistory(): Promise<EthereumGasFeeEstimates> {\n    const noOfBlocks = 10;\n    const newestBlock = \"latest\";\n    // get the 10, 50 and 95th percentile of the tip fees from the last 10 blocks\n    const percentileValues = [10, 50, 95];\n    const feeHistory = await this.providerProxy.request<[number, string, number[]], FeeHistoryResponse>({\n      method: \"eth_feeHistory\",\n      params: [noOfBlocks, newestBlock, percentileValues],\n    });\n\n    // this is in hex wei\n    const finalBaseFeePerGas = feeHistory.baseFeePerGas[feeHistory.baseFeePerGas.length - 1];\n    // this is in hex wei\n    const priorityFeeCalcs = feeHistory.reward.reduce(\n      (acc, curr) => {\n        return {\n          slow: acc.slow.plus(new BigNumber(curr[0], 16)),\n          average: acc.average.plus(new BigNumber(curr[1], 16)),\n          fast: acc.fast.plus(new BigNumber(curr[2], 16)),\n        };\n      },\n      { slow: new BigNumber(0), average: new BigNumber(0), fast: new BigNumber(0) }\n    );\n    return {\n      estimatedBaseFee: hexWEIToDecGWEI(finalBaseFeePerGas).toString(),\n      high: {\n        maxWaitTimeEstimate: 30_000,\n        minWaitTimeEstimate: 15_000,\n        suggestedMaxFeePerGas: hexWEIToDecGWEI(priorityFeeCalcs.fast.plus(finalBaseFeePerGas).toString(16)).toString(),\n        suggestedMaxPriorityFeePerGas: hexWEIToDecGWEI(priorityFeeCalcs.fast.toString(16)).toString(),\n      },\n      medium: {\n        maxWaitTimeEstimate: 45_000,\n        minWaitTimeEstimate: 15_000,\n        suggestedMaxFeePerGas: hexWEIToDecGWEI(priorityFeeCalcs.average.plus(finalBaseFeePerGas).toString(16)).toString(),\n        suggestedMaxPriorityFeePerGas: hexWEIToDecGWEI(priorityFeeCalcs.average.toString(16)).toString(),\n      },\n      low: {\n        maxWaitTimeEstimate: 60_000,\n        minWaitTimeEstimate: 15_000,\n        suggestedMaxFeePerGas: hexWEIToDecGWEI(priorityFeeCalcs.slow.plus(finalBaseFeePerGas).toString(16)).toString(),\n        suggestedMaxPriorityFeePerGas: hexWEIToDecGWEI(priorityFeeCalcs.slow.toString(16)).toString(),\n      },\n    };\n  }\n\n  private async getEIP1559Compatibility(): Promise<boolean> {\n    const latestBlock = await this.providerProxy.request<[string, boolean], Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] });\n    const supportsEIP1559 = latestBlock && latestBlock.baseFeePerGas !== undefined;\n\n    return !!supportsEIP1559;\n  }\n\n  private async fetchGasFeeEstimateData(): Promise<GasData> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const isLegacyGasAPICompatible = this.chainConfig.chainId === \"0x1\";\n\n    const chainId = Number.parseInt(this.chainConfig.chainId, 16);\n\n    let gasData: GasData;\n\n    try {\n      if (this.isEIP1559Compatible) {\n        let estimates: EthereumGasFeeEstimates;\n        try {\n          if (this.API_SUPPORTED_CHAINIDS.has(this.chainConfig.chainId)) {\n            estimates = await fetchEip1159GasEstimates(EIP1559APIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n          } else {\n            throw new Error(\"Chain id not supported by api\");\n          }\n        } catch (error) {\n          estimates = await this.fetchGasEstimatesViaEthFeeHistory();\n        }\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.FEE_MARKET,\n        };\n      } else if (isLegacyGasAPICompatible) {\n        const estimates = await fetchLegacyGasPriceEstimates(LegacyGasAPIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.LEGACY,\n        };\n      } else {\n        throw new Error(\"Main gas fee/price estimation failed. Use fallback\");\n      }\n    } catch (e: unknown) {\n      try {\n        const estimates = await this.fetchEthGasPriceEstimate();\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.ETH_GASPRICE,\n        };\n      } catch (error: unknown) {\n        throw new Error(`Gas fee/price estimation failed. Message: ${(error as Error).message}`);\n      }\n    }\n    return gasData;\n  }\n\n  private async getDefaultGasFees(\n    txParams: TransactionParams & { gas?: string }\n  ): Promise<{ gasPrice?: string; maxFeePerGas?: string; maxPriorityFeePerGas?: string }> {\n    if ((!this.isEIP1559Compatible && txParams.gasPrice) || (this.isEIP1559Compatible && txParams.maxFeePerGas && txParams.maxPriorityFeePerGas)) {\n      return {};\n    }\n\n    try {\n      const { gasFeeEstimates, gasEstimateType } = await this.fetchGasFeeEstimateData();\n      if (this.isEIP1559Compatible && gasEstimateType === GAS_ESTIMATE_TYPES.FEE_MARKET) {\n        const { medium: { suggestedMaxPriorityFeePerGas, suggestedMaxFeePerGas } = {} } = gasFeeEstimates as EIP1159GasData;\n\n        if (suggestedMaxPriorityFeePerGas && suggestedMaxFeePerGas) {\n          return {\n            maxFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxFeePerGas)),\n            maxPriorityFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxPriorityFeePerGas)),\n          };\n        }\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.LEGACY) {\n        // The LEGACY type includes low, medium and high estimates of\n        // gas price values.\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as LegacyGasData).medium)),\n        };\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.ETH_GASPRICE) {\n        // The ETH_GASPRICE type just includes a single gas price property,\n        // which we can assume was retrieved from eth_gasPrice\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as FallbackGasData).gasPrice)),\n        };\n      }\n    } catch (error) {\n      log.error(error);\n    }\n\n    const { gasPrice } = await this.fetchEthGasPriceEstimate();\n\n    return { gasPrice: addHexPrefix(decGWEIToHexWEI(gasPrice)) };\n  }\n\n  private async estimateTxGas(txMeta: TransactionParams): Promise<string> {\n    const txParams = { ...txMeta };\n\n    // `eth_estimateGas` can fail if the user has insufficient balance for the\n    // value being sent, or for the gas cost. We don't want to check their\n    // balance here, we just want the gas estimate. The gas price is removed\n    // to skip those balance checks. We check balance elsewhere. We also delete\n    // maxFeePerGas and maxPriorityFeePerGas to support EIP-1559 txs.\n    delete txParams.gasPrice;\n    delete txParams.maxFeePerGas;\n    delete txParams.maxPriorityFeePerGas;\n    const gas = (await this.providerProxy.request<[TransactionParams], string>({ method: \"eth_estimateGas\", params: [txParams] })) as string;\n    return gas;\n  }\n\n  private async analyzeGasUsage(txMeta: TransactionParams): Promise<{\n    blockGasLimit: string;\n    estimatedGasHex: string;\n  }> {\n    const block = (await this.providerProxy.request<[string, boolean], Block>({\n      method: \"eth_getBlockByNumber\",\n      params: [\"latest\", false],\n    })) as Block;\n    // fallback to block gasLimit\n    const blockGasLimitBN = hexToBn(block.gasLimit as string);\n    const saferGasLimitBN = BnMultiplyByFraction(blockGasLimitBN, 19, 20);\n    let estimatedGasHex = bnToHex(saferGasLimitBN);\n\n    try {\n      estimatedGasHex = await this.estimateTxGas(txMeta);\n    } catch (error: unknown) {\n      log.warn(error);\n    }\n    return { blockGasLimit: block.gasLimit as string, estimatedGasHex };\n  }\n\n  private addGasBuffer(initialGasLimitHex: string, blockGasLimitHex: string, multiplier = 1.5): string {\n    const initialGasLimitBn = hexToBn(initialGasLimitHex);\n    const blockGasLimitBn = hexToBn(blockGasLimitHex);\n    const upperGasLimitBn = blockGasLimitBn.muln(0.9);\n    const bufferedGasLimitBn = initialGasLimitBn.muln(multiplier);\n\n    // if initialGasLimit is above blockGasLimit, dont modify it\n    if (initialGasLimitBn.gt(upperGasLimitBn)) return bnToHex(initialGasLimitBn);\n    // if bufferedGasLimit is below blockGasLimit, use bufferedGasLimit\n    if (bufferedGasLimitBn.lt(upperGasLimitBn)) return bnToHex(bufferedGasLimitBn);\n    // otherwise use blockGasLimit\n    return bnToHex(upperGasLimitBn);\n  }\n\n  private async determineTransactionCategory(txParameters: TransactionParams & { gas?: string }): Promise<{\n    transactionCategory: TxType | null;\n    code?: string;\n  }> {\n    const { data, to } = txParameters;\n    let code = \"\";\n\n    let txCategory: TxType | null;\n\n    if (data && !to) {\n      txCategory = TRANSACTION_TYPES.DEPLOY_CONTRACT;\n    } else {\n      try {\n        code = (await this.providerProxy.request<[AddressLike, string], string>({ method: \"eth_getCode\", params: [to, \"latest\"] })) as string;\n      } catch (error) {\n        log.warn(error);\n      }\n      const codeIsEmpty = !code || code === \"0x\" || code === \"0x0\";\n\n      txCategory = codeIsEmpty ? TRANSACTION_TYPES.SENT_ETHER : TRANSACTION_TYPES.CONTRACT_INTERACTION;\n    }\n\n    return { transactionCategory: txCategory, code };\n  }\n\n  private async getDefaultGasLimit(txParams: TransactionParams & { gas?: string }): Promise<string> {\n    const { transactionCategory } = await this.determineTransactionCategory({ ...txParams });\n\n    if (txParams.gas) {\n      return txParams.gas;\n    }\n\n    if (txParams.to && transactionCategory === TRANSACTION_TYPES.SENT_ETHER) {\n      // if there's data in the params, but there's no contract code, it's not a valid transaction\n      if (txParams.data) {\n        throw Error(\"TxGasUtil - Trying to call a function on a non-contract address\");\n      }\n\n      const TWENTY_ONE_THOUSAND = 21_000;\n\n      // This is a standard ether simple send, gas requirement is exactly 21k\n      return addHexPrefix(TWENTY_ONE_THOUSAND.toString(16));\n    }\n\n    const { blockGasLimit, estimatedGasHex } = await this.analyzeGasUsage(txParams);\n\n    // add additional gas buffer to our estimation for safety\n    const gasLimit = this.addGasBuffer(addHexPrefix(estimatedGasHex), blockGasLimit as string);\n    return gasLimit;\n  }\n}\n","import { providerErrors, rpcErrors } from \"@metamask/rpc-errors\";\nimport { JRPCEngine, JRPCMiddleware, providerFromEngine } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\n\nimport { createAccountMiddleware, createChainSwitchMiddleware, createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { AddEthereumChainParameter, IAccountHandlers, IChainSwitchHandlers } from \"../../rpc/interfaces\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./ethPrivatekeyUtils\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\n\nexport interface EthereumPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface EthereumPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\n\nexport class EthereumPrivateKeyProvider extends BaseProvider<BaseProviderConfig, EthereumPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: EthereumPrivKeyProviderConfig; state?: EthereumPrivKeyProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<EthereumPrivateKeyProvider> => {\n    const providerFactory = new EthereumPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw providerErrors.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const txFormatter = new TransactionFormatter({\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const providerHandlers = getProviderHandlers({\n      txFormatter,\n      privKey,\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const chainSwitchMiddleware = this.getChainSwitchMiddleware();\n    const engine = new JRPCEngine();\n    // Not a partial anymore because of checks in ctor\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(chainSwitchMiddleware);\n    engine.push(this.getAccountMiddleware());\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await txFormatter.init();\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw providerErrors.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<never, string>({ method: \"eth_private_key\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<never, string[]>({ method: \"eth_accounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw providerErrors.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<never, string>({ method: \"eth_private_key\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw providerErrors.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    if (!chainId) throw rpcErrors.invalidParams(\"chainId is required while lookupNetwork\");\n    const network = await this._providerEngineProxy.request<[], string>({\n      method: \"net_version\",\n      params: [],\n    });\n\n    if (parseInt(chainId, 16) !== parseInt(network, 10)) throw providerErrors.chainDisconnected(`Invalid network, net_version is: ${network}`);\n    if (this.state.chainId !== chainId) {\n      this.emit(\"chainChanged\", chainId);\n      this.emit(\"connect\", { chainId });\n    }\n    this.update({ chainId });\n    return network;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addChain: async (params: AddEthereumChainParameter): Promise<void> => {\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = params;\n        this.addChain({\n          chainNamespace: CHAIN_NAMESPACES.EIP155,\n          chainId,\n          ticker: nativeCurrency?.symbol || \"ETH\",\n          tickerName: nativeCurrency?.name || \"Ether\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n          decimals: nativeCurrency?.decimals || 18,\n        });\n      },\n      switchChain: async (params: { chainId: string }): Promise<void> => {\n        const { chainId } = params;\n        await this.switchChain({ chainId });\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (params: { privateKey: string }): Promise<void> => {\n        const { privateKey } = params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","// Currently in sync with Node.js lib/assert.js\n// https://github.com/nodejs/node/commit/2a51ae424a513ec9a6aa3466baa0cc1d55dd4f3b\n\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar _require = require('./internal/errors'),\n  _require$codes = _require.codes,\n  ERR_AMBIGUOUS_ARGUMENT = _require$codes.ERR_AMBIGUOUS_ARGUMENT,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_INVALID_ARG_VALUE = _require$codes.ERR_INVALID_ARG_VALUE,\n  ERR_INVALID_RETURN_VALUE = _require$codes.ERR_INVALID_RETURN_VALUE,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS;\nvar AssertionError = require('./internal/assert/assertion_error');\nvar _require2 = require('util/'),\n  inspect = _require2.inspect;\nvar _require$types = require('util/').types,\n  isPromise = _require$types.isPromise,\n  isRegExp = _require$types.isRegExp;\nvar objectAssign = require('object.assign/polyfill')();\nvar objectIs = require('object-is/polyfill')();\nvar RegExpPrototypeTest = require('call-bind/callBound')('RegExp.prototype.test');\nvar errorCache = new Map();\nvar isDeepEqual;\nvar isDeepStrictEqual;\nvar parseExpressionAt;\nvar findNodeAround;\nvar decoder;\nfunction lazyLoadComparison() {\n  var comparison = require('./internal/util/comparisons');\n  isDeepEqual = comparison.isDeepEqual;\n  isDeepStrictEqual = comparison.isDeepStrictEqual;\n}\n\n// Escape control characters but not \\n and \\t to keep the line breaks and\n// indentation intact.\n// eslint-disable-next-line no-control-regex\nvar escapeSequencesRegExp = /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f]/g;\nvar meta = [\"\\\\u0000\", \"\\\\u0001\", \"\\\\u0002\", \"\\\\u0003\", \"\\\\u0004\", \"\\\\u0005\", \"\\\\u0006\", \"\\\\u0007\", '\\\\b', '', '', \"\\\\u000b\", '\\\\f', '', \"\\\\u000e\", \"\\\\u000f\", \"\\\\u0010\", \"\\\\u0011\", \"\\\\u0012\", \"\\\\u0013\", \"\\\\u0014\", \"\\\\u0015\", \"\\\\u0016\", \"\\\\u0017\", \"\\\\u0018\", \"\\\\u0019\", \"\\\\u001a\", \"\\\\u001b\", \"\\\\u001c\", \"\\\\u001d\", \"\\\\u001e\", \"\\\\u001f\"];\nvar escapeFn = function escapeFn(str) {\n  return meta[str.charCodeAt(0)];\n};\nvar warned = false;\n\n// The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\nvar NO_EXCEPTION_SENTINEL = {};\n\n// All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided. All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction innerFail(obj) {\n  if (obj.message instanceof Error) throw obj.message;\n  throw new AssertionError(obj);\n}\nfunction fail(actual, expected, message, operator, stackStartFn) {\n  var argsLen = arguments.length;\n  var internalMessage;\n  if (argsLen === 0) {\n    internalMessage = 'Failed';\n  } else if (argsLen === 1) {\n    message = actual;\n    actual = undefined;\n  } else {\n    if (warned === false) {\n      warned = true;\n      var warn = process.emitWarning ? process.emitWarning : console.warn.bind(console);\n      warn('assert.fail() with more than one argument is deprecated. ' + 'Please use assert.strictEqual() instead or only pass a message.', 'DeprecationWarning', 'DEP0094');\n    }\n    if (argsLen === 2) operator = '!=';\n  }\n  if (message instanceof Error) throw message;\n  var errArgs = {\n    actual: actual,\n    expected: expected,\n    operator: operator === undefined ? 'fail' : operator,\n    stackStartFn: stackStartFn || fail\n  };\n  if (message !== undefined) {\n    errArgs.message = message;\n  }\n  var err = new AssertionError(errArgs);\n  if (internalMessage) {\n    err.message = internalMessage;\n    err.generatedMessage = true;\n  }\n  throw err;\n}\nassert.fail = fail;\n\n// The AssertionError is defined in internal/error.\nassert.AssertionError = AssertionError;\nfunction innerOk(fn, argLen, value, message) {\n  if (!value) {\n    var generatedMessage = false;\n    if (argLen === 0) {\n      generatedMessage = true;\n      message = 'No value argument passed to `assert.ok()`';\n    } else if (message instanceof Error) {\n      throw message;\n    }\n    var err = new AssertionError({\n      actual: value,\n      expected: true,\n      message: message,\n      operator: '==',\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n}\n\n// Pure assertion tests whether a value is truthy, as determined\n// by !!value.\nfunction ok() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  innerOk.apply(void 0, [ok, args.length].concat(args));\n}\nassert.ok = ok;\n\n// The equality assertion tests shallow, coercive equality with ==.\n/* eslint-disable no-restricted-properties */\nassert.equal = function equal(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  // eslint-disable-next-line eqeqeq\n  if (actual != expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '==',\n      stackStartFn: equal\n    });\n  }\n};\n\n// The non-equality assertion tests for whether two objects are not\n// equal with !=.\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  // eslint-disable-next-line eqeqeq\n  if (actual == expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '!=',\n      stackStartFn: notEqual\n    });\n  }\n};\n\n// The equivalence assertion tests a deep equality relation.\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (!isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepEqual',\n      stackStartFn: deepEqual\n    });\n  }\n};\n\n// The non-equivalence assertion tests for any deep inequality.\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepEqual',\n      stackStartFn: notDeepEqual\n    });\n  }\n};\n/* eslint-enable */\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (!isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepStrictEqual',\n      stackStartFn: deepStrictEqual\n    });\n  }\n};\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepStrictEqual',\n      stackStartFn: notDeepStrictEqual\n    });\n  }\n}\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (!objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'strictEqual',\n      stackStartFn: strictEqual\n    });\n  }\n};\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notStrictEqual',\n      stackStartFn: notStrictEqual\n    });\n  }\n};\nvar Comparison = /*#__PURE__*/_createClass(function Comparison(obj, keys, actual) {\n  var _this = this;\n  _classCallCheck(this, Comparison);\n  keys.forEach(function (key) {\n    if (key in obj) {\n      if (actual !== undefined && typeof actual[key] === 'string' && isRegExp(obj[key]) && RegExpPrototypeTest(obj[key], actual[key])) {\n        _this[key] = actual[key];\n      } else {\n        _this[key] = obj[key];\n      }\n    }\n  });\n});\nfunction compareExceptionKey(actual, expected, key, message, keys, fn) {\n  if (!(key in actual) || !isDeepStrictEqual(actual[key], expected[key])) {\n    if (!message) {\n      // Create placeholder objects to create a nice output.\n      var a = new Comparison(actual, keys);\n      var b = new Comparison(expected, keys, actual);\n      var err = new AssertionError({\n        actual: a,\n        expected: b,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.actual = actual;\n      err.expected = expected;\n      err.operator = fn.name;\n      throw err;\n    }\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: fn.name,\n      stackStartFn: fn\n    });\n  }\n}\nfunction expectedException(actual, expected, msg, fn) {\n  if (typeof expected !== 'function') {\n    if (isRegExp(expected)) return RegExpPrototypeTest(expected, actual);\n    // assert.doesNotThrow does not accept objects.\n    if (arguments.length === 2) {\n      throw new ERR_INVALID_ARG_TYPE('expected', ['Function', 'RegExp'], expected);\n    }\n\n    // Handle primitives properly.\n    if (_typeof(actual) !== 'object' || actual === null) {\n      var err = new AssertionError({\n        actual: actual,\n        expected: expected,\n        message: msg,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.operator = fn.name;\n      throw err;\n    }\n    var keys = Object.keys(expected);\n    // Special handle errors to make sure the name and the message are compared\n    // as well.\n    if (expected instanceof Error) {\n      keys.push('name', 'message');\n    } else if (keys.length === 0) {\n      throw new ERR_INVALID_ARG_VALUE('error', expected, 'may not be an empty object');\n    }\n    if (isDeepEqual === undefined) lazyLoadComparison();\n    keys.forEach(function (key) {\n      if (typeof actual[key] === 'string' && isRegExp(expected[key]) && RegExpPrototypeTest(expected[key], actual[key])) {\n        return;\n      }\n      compareExceptionKey(actual, expected, key, msg, keys, fn);\n    });\n    return true;\n  }\n  // Guard instanceof against arrow functions as they don't have a prototype.\n  if (expected.prototype !== undefined && actual instanceof expected) {\n    return true;\n  }\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n  return expected.call({}, actual) === true;\n}\nfunction getActual(fn) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', 'Function', fn);\n  }\n  try {\n    fn();\n  } catch (e) {\n    return e;\n  }\n  return NO_EXCEPTION_SENTINEL;\n}\nfunction checkIsPromise(obj) {\n  // Accept native ES6 promises and promises that are implemented in a similar\n  // way. Do not accept thenables that use a function as `obj` and that have no\n  // `catch` handler.\n\n  // TODO: thenables are checked up until they have the correct methods,\n  // but according to documentation, the `then` method should receive\n  // the `fulfill` and `reject` arguments as well or it may be never resolved.\n\n  return isPromise(obj) || obj !== null && _typeof(obj) === 'object' && typeof obj.then === 'function' && typeof obj.catch === 'function';\n}\nfunction waitForActual(promiseFn) {\n  return Promise.resolve().then(function () {\n    var resultPromise;\n    if (typeof promiseFn === 'function') {\n      // Return a rejected promise if `promiseFn` throws synchronously.\n      resultPromise = promiseFn();\n      // Fail in case no promise is returned.\n      if (!checkIsPromise(resultPromise)) {\n        throw new ERR_INVALID_RETURN_VALUE('instance of Promise', 'promiseFn', resultPromise);\n      }\n    } else if (checkIsPromise(promiseFn)) {\n      resultPromise = promiseFn;\n    } else {\n      throw new ERR_INVALID_ARG_TYPE('promiseFn', ['Function', 'Promise'], promiseFn);\n    }\n    return Promise.resolve().then(function () {\n      return resultPromise;\n    }).then(function () {\n      return NO_EXCEPTION_SENTINEL;\n    }).catch(function (e) {\n      return e;\n    });\n  });\n}\nfunction expectsError(stackStartFn, actual, error, message) {\n  if (typeof error === 'string') {\n    if (arguments.length === 4) {\n      throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n    }\n    if (_typeof(actual) === 'object' && actual !== null) {\n      if (actual.message === error) {\n        throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error message \\\"\".concat(actual.message, \"\\\" is identical to the message.\"));\n      }\n    } else if (actual === error) {\n      throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error \\\"\".concat(actual, \"\\\" is identical to the message.\"));\n    }\n    message = error;\n    error = undefined;\n  } else if (error != null && _typeof(error) !== 'object' && typeof error !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n  }\n  if (actual === NO_EXCEPTION_SENTINEL) {\n    var details = '';\n    if (error && error.name) {\n      details += \" (\".concat(error.name, \")\");\n    }\n    details += message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'rejects' ? 'rejection' : 'exception';\n    innerFail({\n      actual: undefined,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Missing expected \".concat(fnType).concat(details),\n      stackStartFn: stackStartFn\n    });\n  }\n  if (error && !expectedException(actual, error, message, stackStartFn)) {\n    throw actual;\n  }\n}\nfunction expectsNoError(stackStartFn, actual, error, message) {\n  if (actual === NO_EXCEPTION_SENTINEL) return;\n  if (typeof error === 'string') {\n    message = error;\n    error = undefined;\n  }\n  if (!error || expectedException(actual, error)) {\n    var details = message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'doesNotReject' ? 'rejection' : 'exception';\n    innerFail({\n      actual: actual,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Got unwanted \".concat(fnType).concat(details, \"\\n\") + \"Actual message: \\\"\".concat(actual && actual.message, \"\\\"\"),\n      stackStartFn: stackStartFn\n    });\n  }\n  throw actual;\n}\nassert.throws = function throws(promiseFn) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n  expectsError.apply(void 0, [throws, getActual(promiseFn)].concat(args));\n};\nassert.rejects = function rejects(promiseFn) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n  return waitForActual(promiseFn).then(function (result) {\n    return expectsError.apply(void 0, [rejects, result].concat(args));\n  });\n};\nassert.doesNotThrow = function doesNotThrow(fn) {\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n  expectsNoError.apply(void 0, [doesNotThrow, getActual(fn)].concat(args));\n};\nassert.doesNotReject = function doesNotReject(fn) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n  return waitForActual(fn).then(function (result) {\n    return expectsNoError.apply(void 0, [doesNotReject, result].concat(args));\n  });\n};\nassert.ifError = function ifError(err) {\n  if (err !== null && err !== undefined) {\n    var message = 'ifError got unwanted exception: ';\n    if (_typeof(err) === 'object' && typeof err.message === 'string') {\n      if (err.message.length === 0 && err.constructor) {\n        message += err.constructor.name;\n      } else {\n        message += err.message;\n      }\n    } else {\n      message += inspect(err);\n    }\n    var newErr = new AssertionError({\n      actual: err,\n      expected: null,\n      operator: 'ifError',\n      message: message,\n      stackStartFn: ifError\n    });\n\n    // Make sure we actually have a stack trace!\n    var origStack = err.stack;\n    if (typeof origStack === 'string') {\n      // This will remove any duplicated frames from the error frames taken\n      // from within `ifError` and add the original error frames to the newly\n      // created ones.\n      var tmp2 = origStack.split('\\n');\n      tmp2.shift();\n      // Filter all frames existing in err.stack.\n      var tmp1 = newErr.stack.split('\\n');\n      for (var i = 0; i < tmp2.length; i++) {\n        // Find the first occurrence of the frame.\n        var pos = tmp1.indexOf(tmp2[i]);\n        if (pos !== -1) {\n          // Only keep new frames.\n          tmp1 = tmp1.slice(0, pos);\n          break;\n        }\n      }\n      newErr.stack = \"\".concat(tmp1.join('\\n'), \"\\n\").concat(tmp2.join('\\n'));\n    }\n    throw newErr;\n  }\n};\n\n// Currently in sync with Node.js lib/assert.js\n// https://github.com/nodejs/node/commit/2a871df3dfb8ea663ef5e1f8f62701ec51384ecb\nfunction internalMatch(string, regexp, message, fn, fnName) {\n  if (!isRegExp(regexp)) {\n    throw new ERR_INVALID_ARG_TYPE('regexp', 'RegExp', regexp);\n  }\n  var match = fnName === 'match';\n  if (typeof string !== 'string' || RegExpPrototypeTest(regexp, string) !== match) {\n    if (message instanceof Error) {\n      throw message;\n    }\n    var generatedMessage = !message;\n\n    // 'The input was expected to not match the regular expression ' +\n    message = message || (typeof string !== 'string' ? 'The \"string\" argument must be of type string. Received type ' + \"\".concat(_typeof(string), \" (\").concat(inspect(string), \")\") : (match ? 'The input did not match the regular expression ' : 'The input was expected to not match the regular expression ') + \"\".concat(inspect(regexp), \". Input:\\n\\n\").concat(inspect(string), \"\\n\"));\n    var err = new AssertionError({\n      actual: string,\n      expected: regexp,\n      message: message,\n      operator: fnName,\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n}\nassert.match = function match(string, regexp, message) {\n  internalMatch(string, regexp, message, match, 'match');\n};\nassert.doesNotMatch = function doesNotMatch(string, regexp, message) {\n  internalMatch(string, regexp, message, doesNotMatch, 'doesNotMatch');\n};\n\n// Expose a strict only variant of assert\nfunction strict() {\n  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    args[_key6] = arguments[_key6];\n  }\n  innerOk.apply(void 0, [strict, args.length].concat(args));\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;","// Currently in sync with Node.js lib/internal/assert/assertion_error.js\n// https://github.com/nodejs/node/commit/0817840f775032169ddd70c85ac059f18ffcc81c\n\n'use strict';\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _require = require('util/'),\n  inspect = _require.inspect;\nvar _require2 = require('../errors'),\n  ERR_INVALID_ARG_TYPE = _require2.codes.ERR_INVALID_ARG_TYPE;\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n  return str.substring(this_len - search.length, this_len) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\nfunction repeat(str, count) {\n  count = Math.floor(count);\n  if (str.length == 0 || count == 0) return '';\n  var maxCount = str.length * count;\n  count = Math.floor(Math.log(count) / Math.log(2));\n  while (count) {\n    str += str;\n    count--;\n  }\n  str += str.substring(0, maxCount - str.length);\n  return str;\n}\nvar blue = '';\nvar green = '';\nvar red = '';\nvar white = '';\nvar kReadableOperator = {\n  deepStrictEqual: 'Expected values to be strictly deep-equal:',\n  strictEqual: 'Expected values to be strictly equal:',\n  strictEqualObject: 'Expected \"actual\" to be reference-equal to \"expected\":',\n  deepEqual: 'Expected values to be loosely deep-equal:',\n  equal: 'Expected values to be loosely equal:',\n  notDeepStrictEqual: 'Expected \"actual\" not to be strictly deep-equal to:',\n  notStrictEqual: 'Expected \"actual\" to be strictly unequal to:',\n  notStrictEqualObject: 'Expected \"actual\" not to be reference-equal to \"expected\":',\n  notDeepEqual: 'Expected \"actual\" not to be loosely deep-equal to:',\n  notEqual: 'Expected \"actual\" to be loosely unequal to:',\n  notIdentical: 'Values identical but not reference-equal:'\n};\n\n// Comparing short primitives should just show === / !== instead of using the\n// diff.\nvar kMaxShortLength = 10;\nfunction copyError(source) {\n  var keys = Object.keys(source);\n  var target = Object.create(Object.getPrototypeOf(source));\n  keys.forEach(function (key) {\n    target[key] = source[key];\n  });\n  Object.defineProperty(target, 'message', {\n    value: source.message\n  });\n  return target;\n}\nfunction inspectValue(val) {\n  // The util.inspect default values could be changed. This makes sure the\n  // error messages contain the necessary information nevertheless.\n  return inspect(val, {\n    compact: false,\n    customInspect: false,\n    depth: 1000,\n    maxArrayLength: Infinity,\n    // Assert compares only enumerable properties (with a few exceptions).\n    showHidden: false,\n    // Having a long line as error is better than wrapping the line for\n    // comparison for now.\n    // TODO(BridgeAR): `breakLength` should be limited as soon as soon as we\n    // have meta information about the inspected properties (i.e., know where\n    // in what line the property starts and ends).\n    breakLength: Infinity,\n    // Assert does not detect proxies currently.\n    showProxy: false,\n    sorted: true,\n    // Inspect getters as we also check them when comparing entries.\n    getters: true\n  });\n}\nfunction createErrDiff(actual, expected, operator) {\n  var other = '';\n  var res = '';\n  var lastPos = 0;\n  var end = '';\n  var skipped = false;\n  var actualInspected = inspectValue(actual);\n  var actualLines = actualInspected.split('\\n');\n  var expectedLines = inspectValue(expected).split('\\n');\n  var i = 0;\n  var indicator = '';\n\n  // In case both values are objects explicitly mark them as not reference equal\n  // for the `strictEqual` operator.\n  if (operator === 'strictEqual' && _typeof(actual) === 'object' && _typeof(expected) === 'object' && actual !== null && expected !== null) {\n    operator = 'strictEqualObject';\n  }\n\n  // If \"actual\" and \"expected\" fit on a single line and they are not strictly\n  // equal, check further special handling.\n  if (actualLines.length === 1 && expectedLines.length === 1 && actualLines[0] !== expectedLines[0]) {\n    var inputLength = actualLines[0].length + expectedLines[0].length;\n    // If the character length of \"actual\" and \"expected\" together is less than\n    // kMaxShortLength and if neither is an object and at least one of them is\n    // not `zero`, use the strict equal comparison to visualize the output.\n    if (inputLength <= kMaxShortLength) {\n      if ((_typeof(actual) !== 'object' || actual === null) && (_typeof(expected) !== 'object' || expected === null) && (actual !== 0 || expected !== 0)) {\n        // -0 === +0\n        return \"\".concat(kReadableOperator[operator], \"\\n\\n\") + \"\".concat(actualLines[0], \" !== \").concat(expectedLines[0], \"\\n\");\n      }\n    } else if (operator !== 'strictEqualObject') {\n      // If the stderr is a tty and the input length is lower than the current\n      // columns per line, add a mismatch indicator below the output. If it is\n      // not a tty, use a default value of 80 characters.\n      var maxLength = process.stderr && process.stderr.isTTY ? process.stderr.columns : 80;\n      if (inputLength < maxLength) {\n        while (actualLines[0][i] === expectedLines[0][i]) {\n          i++;\n        }\n        // Ignore the first characters.\n        if (i > 2) {\n          // Add position indicator for the first mismatch in case it is a\n          // single line and the input length is less than the column length.\n          indicator = \"\\n  \".concat(repeat(' ', i), \"^\");\n          i = 0;\n        }\n      }\n    }\n  }\n\n  // Remove all ending lines that match (this optimizes the output for\n  // readability by reducing the number of total changed lines).\n  var a = actualLines[actualLines.length - 1];\n  var b = expectedLines[expectedLines.length - 1];\n  while (a === b) {\n    if (i++ < 2) {\n      end = \"\\n  \".concat(a).concat(end);\n    } else {\n      other = a;\n    }\n    actualLines.pop();\n    expectedLines.pop();\n    if (actualLines.length === 0 || expectedLines.length === 0) break;\n    a = actualLines[actualLines.length - 1];\n    b = expectedLines[expectedLines.length - 1];\n  }\n  var maxLines = Math.max(actualLines.length, expectedLines.length);\n  // Strict equal with identical objects that are not identical by reference.\n  // E.g., assert.deepStrictEqual({ a: Symbol() }, { a: Symbol() })\n  if (maxLines === 0) {\n    // We have to get the result again. The lines were all removed before.\n    var _actualLines = actualInspected.split('\\n');\n\n    // Only remove lines in case it makes sense to collapse those.\n    // TODO: Accept env to always show the full error.\n    if (_actualLines.length > 30) {\n      _actualLines[26] = \"\".concat(blue, \"...\").concat(white);\n      while (_actualLines.length > 27) {\n        _actualLines.pop();\n      }\n    }\n    return \"\".concat(kReadableOperator.notIdentical, \"\\n\\n\").concat(_actualLines.join('\\n'), \"\\n\");\n  }\n  if (i > 3) {\n    end = \"\\n\".concat(blue, \"...\").concat(white).concat(end);\n    skipped = true;\n  }\n  if (other !== '') {\n    end = \"\\n  \".concat(other).concat(end);\n    other = '';\n  }\n  var printedLines = 0;\n  var msg = kReadableOperator[operator] + \"\\n\".concat(green, \"+ actual\").concat(white, \" \").concat(red, \"- expected\").concat(white);\n  var skippedMsg = \" \".concat(blue, \"...\").concat(white, \" Lines skipped\");\n  for (i = 0; i < maxLines; i++) {\n    // Only extra expected lines exist\n    var cur = i - lastPos;\n    if (actualLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(expectedLines[i - 2]);\n          printedLines++;\n        }\n        res += \"\\n  \".concat(expectedLines[i - 1]);\n        printedLines++;\n      }\n      // Mark the current line as the last diverging one.\n      lastPos = i;\n      // Add the expected line to the cache.\n      other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLines[i]);\n      printedLines++;\n      // Only extra actual lines exist\n    } else if (expectedLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(actualLines[i - 2]);\n          printedLines++;\n        }\n        res += \"\\n  \".concat(actualLines[i - 1]);\n        printedLines++;\n      }\n      // Mark the current line as the last diverging one.\n      lastPos = i;\n      // Add the actual line to the result.\n      res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLines[i]);\n      printedLines++;\n      // Lines diverge\n    } else {\n      var expectedLine = expectedLines[i];\n      var actualLine = actualLines[i];\n      // If the lines diverge, specifically check for lines that only diverge by\n      // a trailing comma. In that case it is actually identical and we should\n      // mark it as such.\n      var divergingLines = actualLine !== expectedLine && (!endsWith(actualLine, ',') || actualLine.slice(0, -1) !== expectedLine);\n      // If the expected line has a trailing comma but is otherwise identical,\n      // add a comma at the end of the actual line. Otherwise the output could\n      // look weird as in:\n      //\n      //   [\n      //     1         // No comma at the end!\n      // +   2\n      //   ]\n      //\n      if (divergingLines && endsWith(expectedLine, ',') && expectedLine.slice(0, -1) === actualLine) {\n        divergingLines = false;\n        actualLine += ',';\n      }\n      if (divergingLines) {\n        // If the last diverging line is more than one line above and the\n        // current line is at least line three, add some of the former lines and\n        // also add dots to indicate skipped entries.\n        if (cur > 1 && i > 2) {\n          if (cur > 4) {\n            res += \"\\n\".concat(blue, \"...\").concat(white);\n            skipped = true;\n          } else if (cur > 3) {\n            res += \"\\n  \".concat(actualLines[i - 2]);\n            printedLines++;\n          }\n          res += \"\\n  \".concat(actualLines[i - 1]);\n          printedLines++;\n        }\n        // Mark the current line as the last diverging one.\n        lastPos = i;\n        // Add the actual line to the result and cache the expected diverging\n        // line so consecutive diverging lines show up as +++--- and not +-+-+-.\n        res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLine);\n        other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLine);\n        printedLines += 2;\n        // Lines are identical\n      } else {\n        // Add all cached information to the result before adding other things\n        // and reset the cache.\n        res += other;\n        other = '';\n        // If the last diverging line is exactly one line above or if it is the\n        // very first line, add the line to the result.\n        if (cur === 1 || i === 0) {\n          res += \"\\n  \".concat(actualLine);\n          printedLines++;\n        }\n      }\n    }\n    // Inspected object to big (Show ~20 rows max)\n    if (printedLines > 20 && i < maxLines - 2) {\n      return \"\".concat(msg).concat(skippedMsg, \"\\n\").concat(res, \"\\n\").concat(blue, \"...\").concat(white).concat(other, \"\\n\") + \"\".concat(blue, \"...\").concat(white);\n    }\n  }\n  return \"\".concat(msg).concat(skipped ? skippedMsg : '', \"\\n\").concat(res).concat(other).concat(end).concat(indicator);\n}\nvar AssertionError = /*#__PURE__*/function (_Error, _inspect$custom) {\n  _inherits(AssertionError, _Error);\n  var _super = _createSuper(AssertionError);\n  function AssertionError(options) {\n    var _this;\n    _classCallCheck(this, AssertionError);\n    if (_typeof(options) !== 'object' || options === null) {\n      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);\n    }\n    var message = options.message,\n      operator = options.operator,\n      stackStartFn = options.stackStartFn;\n    var actual = options.actual,\n      expected = options.expected;\n    var limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n    if (message != null) {\n      _this = _super.call(this, String(message));\n    } else {\n      if (process.stderr && process.stderr.isTTY) {\n        // Reset on each call to make sure we handle dynamically set environment\n        // variables correct.\n        if (process.stderr && process.stderr.getColorDepth && process.stderr.getColorDepth() !== 1) {\n          blue = \"\\x1B[34m\";\n          green = \"\\x1B[32m\";\n          white = \"\\x1B[39m\";\n          red = \"\\x1B[31m\";\n        } else {\n          blue = '';\n          green = '';\n          white = '';\n          red = '';\n        }\n      }\n      // Prevent the error stack from being visible by duplicating the error\n      // in a very close way to the original in case both sides are actually\n      // instances of Error.\n      if (_typeof(actual) === 'object' && actual !== null && _typeof(expected) === 'object' && expected !== null && 'stack' in actual && actual instanceof Error && 'stack' in expected && expected instanceof Error) {\n        actual = copyError(actual);\n        expected = copyError(expected);\n      }\n      if (operator === 'deepStrictEqual' || operator === 'strictEqual') {\n        _this = _super.call(this, createErrDiff(actual, expected, operator));\n      } else if (operator === 'notDeepStrictEqual' || operator === 'notStrictEqual') {\n        // In case the objects are equal but the operator requires unequal, show\n        // the first object and say A equals B\n        var base = kReadableOperator[operator];\n        var res = inspectValue(actual).split('\\n');\n\n        // In case \"actual\" is an object, it should not be reference equal.\n        if (operator === 'notStrictEqual' && _typeof(actual) === 'object' && actual !== null) {\n          base = kReadableOperator.notStrictEqualObject;\n        }\n\n        // Only remove lines in case it makes sense to collapse those.\n        // TODO: Accept env to always show the full error.\n        if (res.length > 30) {\n          res[26] = \"\".concat(blue, \"...\").concat(white);\n          while (res.length > 27) {\n            res.pop();\n          }\n        }\n\n        // Only print a single input.\n        if (res.length === 1) {\n          _this = _super.call(this, \"\".concat(base, \" \").concat(res[0]));\n        } else {\n          _this = _super.call(this, \"\".concat(base, \"\\n\\n\").concat(res.join('\\n'), \"\\n\"));\n        }\n      } else {\n        var _res = inspectValue(actual);\n        var other = '';\n        var knownOperators = kReadableOperator[operator];\n        if (operator === 'notDeepEqual' || operator === 'notEqual') {\n          _res = \"\".concat(kReadableOperator[operator], \"\\n\\n\").concat(_res);\n          if (_res.length > 1024) {\n            _res = \"\".concat(_res.slice(0, 1021), \"...\");\n          }\n        } else {\n          other = \"\".concat(inspectValue(expected));\n          if (_res.length > 512) {\n            _res = \"\".concat(_res.slice(0, 509), \"...\");\n          }\n          if (other.length > 512) {\n            other = \"\".concat(other.slice(0, 509), \"...\");\n          }\n          if (operator === 'deepEqual' || operator === 'equal') {\n            _res = \"\".concat(knownOperators, \"\\n\\n\").concat(_res, \"\\n\\nshould equal\\n\\n\");\n          } else {\n            other = \" \".concat(operator, \" \").concat(other);\n          }\n        }\n        _this = _super.call(this, \"\".concat(_res).concat(other));\n      }\n    }\n    Error.stackTraceLimit = limit;\n    _this.generatedMessage = !message;\n    Object.defineProperty(_assertThisInitialized(_this), 'name', {\n      value: 'AssertionError [ERR_ASSERTION]',\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n    _this.code = 'ERR_ASSERTION';\n    _this.actual = actual;\n    _this.expected = expected;\n    _this.operator = operator;\n    if (Error.captureStackTrace) {\n      // eslint-disable-next-line no-restricted-syntax\n      Error.captureStackTrace(_assertThisInitialized(_this), stackStartFn);\n    }\n    // Create error message including the error code in the name.\n    _this.stack;\n    // Reset the name.\n    _this.name = 'AssertionError';\n    return _possibleConstructorReturn(_this);\n  }\n  _createClass(AssertionError, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.name, \" [\").concat(this.code, \"]: \").concat(this.message);\n    }\n  }, {\n    key: _inspect$custom,\n    value: function value(recurseTimes, ctx) {\n      // This limits the `actual` and `expected` property default inspection to\n      // the minimum depth. Otherwise those values would be too verbose compared\n      // to the actual error message which contains a combined view of these two\n      // input values.\n      return inspect(this, _objectSpread(_objectSpread({}, ctx), {}, {\n        customInspect: false,\n        depth: 0\n      }));\n    }\n  }]);\n  return AssertionError;\n}( /*#__PURE__*/_wrapNativeSuper(Error), inspect.custom);\nmodule.exports = AssertionError;","// Currently in sync with Node.js lib/internal/errors.js\n// https://github.com/nodejs/node/commit/3b044962c48fe313905877a96b5d0894a5404f6f\n\n/* eslint node-core/documented-errors: \"error\" */\n/* eslint node-core/alphabetize-errors: \"error\" */\n/* eslint node-core/prefer-util-format-errors: \"error\" */\n\n'use strict';\n\n// The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change, the code should not.\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nvar codes = {};\n\n// Lazy loaded\nvar assert;\nvar util;\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n  var NodeError = /*#__PURE__*/function (_Base) {\n    _inherits(NodeError, _Base);\n    var _super = _createSuper(NodeError);\n    function NodeError(arg1, arg2, arg3) {\n      var _this;\n      _classCallCheck(this, NodeError);\n      _this = _super.call(this, getMessage(arg1, arg2, arg3));\n      _this.code = code;\n      return _this;\n    }\n    return _createClass(NodeError);\n  }(Base);\n  codes[code] = NodeError;\n}\n\n// https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n  return str.substring(this_len - search.length, this_len) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\ncreateErrorType('ERR_AMBIGUOUS_ARGUMENT', 'The \"%s\" argument is ambiguous. %s', TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  if (assert === undefined) assert = require('../assert');\n  assert(typeof name === 'string', \"'name' must be a string\");\n\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n  var msg;\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  // TODO(BridgeAR): Improve the output by showing `null` and similar.\n  msg += \". Received type \".concat(_typeof(actual));\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_VALUE', function (name, value) {\n  var reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'is invalid';\n  if (util === undefined) util = require('util/');\n  var inspected = util.inspect(value);\n  if (inspected.length > 128) {\n    inspected = \"\".concat(inspected.slice(0, 128), \"...\");\n  }\n  return \"The argument '\".concat(name, \"' \").concat(reason, \". Received \").concat(inspected);\n}, TypeError, RangeError);\ncreateErrorType('ERR_INVALID_RETURN_VALUE', function (input, name, value) {\n  var type;\n  if (value && value.constructor && value.constructor.name) {\n    type = \"instance of \".concat(value.constructor.name);\n  } else {\n    type = \"type \".concat(_typeof(value));\n  }\n  return \"Expected \".concat(input, \" to be returned from the \\\"\").concat(name, \"\\\"\") + \" function but got \".concat(type, \".\");\n}, TypeError);\ncreateErrorType('ERR_MISSING_ARGS', function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  if (assert === undefined) assert = require('../assert');\n  assert(args.length > 0, 'At least one arg needs to be specified');\n  var msg = 'The ';\n  var len = args.length;\n  args = args.map(function (a) {\n    return \"\\\"\".concat(a, \"\\\"\");\n  });\n  switch (len) {\n    case 1:\n      msg += \"\".concat(args[0], \" argument\");\n      break;\n    case 2:\n      msg += \"\".concat(args[0], \" and \").concat(args[1], \" arguments\");\n      break;\n    default:\n      msg += args.slice(0, len - 1).join(', ');\n      msg += \", and \".concat(args[len - 1], \" arguments\");\n      break;\n  }\n  return \"\".concat(msg, \" must be specified\");\n}, TypeError);\nmodule.exports.codes = codes;","// Currently in sync with Node.js lib/internal/util/comparisons.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar regexFlagsSupported = /a/g.flags !== undefined;\nvar arrayFromSet = function arrayFromSet(set) {\n  var array = [];\n  set.forEach(function (value) {\n    return array.push(value);\n  });\n  return array;\n};\nvar arrayFromMap = function arrayFromMap(map) {\n  var array = [];\n  map.forEach(function (value, key) {\n    return array.push([key, value]);\n  });\n  return array;\n};\nvar objectIs = Object.is ? Object.is : require('object-is');\nvar objectGetOwnPropertySymbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function () {\n  return [];\n};\nvar numberIsNaN = Number.isNaN ? Number.isNaN : require('is-nan');\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\nvar hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\nvar propertyIsEnumerable = uncurryThis(Object.prototype.propertyIsEnumerable);\nvar objectToString = uncurryThis(Object.prototype.toString);\nvar _require$types = require('util/').types,\n  isAnyArrayBuffer = _require$types.isAnyArrayBuffer,\n  isArrayBufferView = _require$types.isArrayBufferView,\n  isDate = _require$types.isDate,\n  isMap = _require$types.isMap,\n  isRegExp = _require$types.isRegExp,\n  isSet = _require$types.isSet,\n  isNativeError = _require$types.isNativeError,\n  isBoxedPrimitive = _require$types.isBoxedPrimitive,\n  isNumberObject = _require$types.isNumberObject,\n  isStringObject = _require$types.isStringObject,\n  isBooleanObject = _require$types.isBooleanObject,\n  isBigIntObject = _require$types.isBigIntObject,\n  isSymbolObject = _require$types.isSymbolObject,\n  isFloat32Array = _require$types.isFloat32Array,\n  isFloat64Array = _require$types.isFloat64Array;\nfunction isNonIndex(key) {\n  if (key.length === 0 || key.length > 10) return true;\n  for (var i = 0; i < key.length; i++) {\n    var code = key.charCodeAt(i);\n    if (code < 48 || code > 57) return true;\n  }\n  // The maximum size for an array is 2 ** 32 -1.\n  return key.length === 10 && key >= Math.pow(2, 32);\n}\nfunction getOwnNonIndexProperties(value) {\n  return Object.keys(value).filter(isNonIndex).concat(objectGetOwnPropertySymbols(value).filter(Object.prototype.propertyIsEnumerable.bind(value)));\n}\n\n// Taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n  var x = a.length;\n  var y = b.length;\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nvar ONLY_ENUMERABLE = undefined;\nvar kStrict = true;\nvar kLoose = false;\nvar kNoIterator = 0;\nvar kIsArray = 1;\nvar kIsSet = 2;\nvar kIsMap = 3;\n\n// Check if they have the same source and flags\nfunction areSimilarRegExps(a, b) {\n  return regexFlagsSupported ? a.source === b.source && a.flags === b.flags : RegExp.prototype.toString.call(a) === RegExp.prototype.toString.call(b);\n}\nfunction areSimilarFloatArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (var offset = 0; offset < a.byteLength; offset++) {\n    if (a[offset] !== b[offset]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction areSimilarTypedArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  return compare(new Uint8Array(a.buffer, a.byteOffset, a.byteLength), new Uint8Array(b.buffer, b.byteOffset, b.byteLength)) === 0;\n}\nfunction areEqualArrayBuffers(buf1, buf2) {\n  return buf1.byteLength === buf2.byteLength && compare(new Uint8Array(buf1), new Uint8Array(buf2)) === 0;\n}\nfunction isEqualBoxedPrimitive(val1, val2) {\n  if (isNumberObject(val1)) {\n    return isNumberObject(val2) && objectIs(Number.prototype.valueOf.call(val1), Number.prototype.valueOf.call(val2));\n  }\n  if (isStringObject(val1)) {\n    return isStringObject(val2) && String.prototype.valueOf.call(val1) === String.prototype.valueOf.call(val2);\n  }\n  if (isBooleanObject(val1)) {\n    return isBooleanObject(val2) && Boolean.prototype.valueOf.call(val1) === Boolean.prototype.valueOf.call(val2);\n  }\n  if (isBigIntObject(val1)) {\n    return isBigIntObject(val2) && BigInt.prototype.valueOf.call(val1) === BigInt.prototype.valueOf.call(val2);\n  }\n  return isSymbolObject(val2) && Symbol.prototype.valueOf.call(val1) === Symbol.prototype.valueOf.call(val2);\n}\n\n// Notes: Type tags are historical [[Class]] properties that can be set by\n// FunctionTemplate::SetClassName() in C++ or Symbol.toStringTag in JS\n// and retrieved using Object.prototype.toString.call(obj) in JS\n// See https://tc39.github.io/ecma262/#sec-object.prototype.tostring\n// for a list of tags pre-defined in the spec.\n// There are some unspecified tags in the wild too (e.g. typed array tags).\n// Since tags can be altered, they only serve fast failures\n//\n// Typed arrays and buffers are checked by comparing the content in their\n// underlying ArrayBuffer. This optimization requires that it's\n// reasonable to interpret their underlying memory in the same way,\n// which is checked by comparing their type tags.\n// (e.g. a Uint8Array and a Uint16Array with the same memory content\n// could still be different because they will be interpreted differently).\n//\n// For strict comparison, objects should have\n// a) The same built-in type tags\n// b) The same prototypes.\n\nfunction innerDeepEqual(val1, val2, strict, memos) {\n  // All identical values are equivalent, as determined by ===.\n  if (val1 === val2) {\n    if (val1 !== 0) return true;\n    return strict ? objectIs(val1, val2) : true;\n  }\n\n  // Check more closely if val1 and val2 are equal.\n  if (strict) {\n    if (_typeof(val1) !== 'object') {\n      return typeof val1 === 'number' && numberIsNaN(val1) && numberIsNaN(val2);\n    }\n    if (_typeof(val2) !== 'object' || val1 === null || val2 === null) {\n      return false;\n    }\n    if (Object.getPrototypeOf(val1) !== Object.getPrototypeOf(val2)) {\n      return false;\n    }\n  } else {\n    if (val1 === null || _typeof(val1) !== 'object') {\n      if (val2 === null || _typeof(val2) !== 'object') {\n        // eslint-disable-next-line eqeqeq\n        return val1 == val2;\n      }\n      return false;\n    }\n    if (val2 === null || _typeof(val2) !== 'object') {\n      return false;\n    }\n  }\n  var val1Tag = objectToString(val1);\n  var val2Tag = objectToString(val2);\n  if (val1Tag !== val2Tag) {\n    return false;\n  }\n  if (Array.isArray(val1)) {\n    // Check for sparse arrays and general fast path\n    if (val1.length !== val2.length) {\n      return false;\n    }\n    var keys1 = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n    var keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kIsArray, keys1);\n  }\n  // [browserify] This triggers on certain types in IE (Map/Set) so we don't\n  // wan't to early return out of the rest of the checks. However we can check\n  // if the second value is one of these values and the first isn't.\n  if (val1Tag === '[object Object]') {\n    // return keyCheck(val1, val2, strict, memos, kNoIterator);\n    if (!isMap(val1) && isMap(val2) || !isSet(val1) && isSet(val2)) {\n      return false;\n    }\n  }\n  if (isDate(val1)) {\n    if (!isDate(val2) || Date.prototype.getTime.call(val1) !== Date.prototype.getTime.call(val2)) {\n      return false;\n    }\n  } else if (isRegExp(val1)) {\n    if (!isRegExp(val2) || !areSimilarRegExps(val1, val2)) {\n      return false;\n    }\n  } else if (isNativeError(val1) || val1 instanceof Error) {\n    // Do not compare the stack as it might differ even though the error itself\n    // is otherwise identical.\n    if (val1.message !== val2.message || val1.name !== val2.name) {\n      return false;\n    }\n  } else if (isArrayBufferView(val1)) {\n    if (!strict && (isFloat32Array(val1) || isFloat64Array(val1))) {\n      if (!areSimilarFloatArrays(val1, val2)) {\n        return false;\n      }\n    } else if (!areSimilarTypedArrays(val1, val2)) {\n      return false;\n    }\n    // Buffer.compare returns true, so val1.length === val2.length. If they both\n    // only contain numeric keys, we don't need to exam further than checking\n    // the symbols.\n    var _keys = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n    var _keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n    if (_keys.length !== _keys2.length) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kNoIterator, _keys);\n  } else if (isSet(val1)) {\n    if (!isSet(val2) || val1.size !== val2.size) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kIsSet);\n  } else if (isMap(val1)) {\n    if (!isMap(val2) || val1.size !== val2.size) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kIsMap);\n  } else if (isAnyArrayBuffer(val1)) {\n    if (!areEqualArrayBuffers(val1, val2)) {\n      return false;\n    }\n  } else if (isBoxedPrimitive(val1) && !isEqualBoxedPrimitive(val1, val2)) {\n    return false;\n  }\n  return keyCheck(val1, val2, strict, memos, kNoIterator);\n}\nfunction getEnumerables(val, keys) {\n  return keys.filter(function (k) {\n    return propertyIsEnumerable(val, k);\n  });\n}\nfunction keyCheck(val1, val2, strict, memos, iterationType, aKeys) {\n  // For all remaining Object pairs, including Array, objects and Maps,\n  // equivalence is determined by having:\n  // a) The same number of owned enumerable properties\n  // b) The same set of keys/indexes (although not necessarily the same order)\n  // c) Equivalent values for every corresponding key/index\n  // d) For Sets and Maps, equal contents\n  // Note: this accounts for both named and indexed properties on Arrays.\n  if (arguments.length === 5) {\n    aKeys = Object.keys(val1);\n    var bKeys = Object.keys(val2);\n\n    // The pair must have the same number of owned properties.\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n  }\n\n  // Cheap key test\n  var i = 0;\n  for (; i < aKeys.length; i++) {\n    if (!hasOwnProperty(val2, aKeys[i])) {\n      return false;\n    }\n  }\n  if (strict && arguments.length === 5) {\n    var symbolKeysA = objectGetOwnPropertySymbols(val1);\n    if (symbolKeysA.length !== 0) {\n      var count = 0;\n      for (i = 0; i < symbolKeysA.length; i++) {\n        var key = symbolKeysA[i];\n        if (propertyIsEnumerable(val1, key)) {\n          if (!propertyIsEnumerable(val2, key)) {\n            return false;\n          }\n          aKeys.push(key);\n          count++;\n        } else if (propertyIsEnumerable(val2, key)) {\n          return false;\n        }\n      }\n      var symbolKeysB = objectGetOwnPropertySymbols(val2);\n      if (symbolKeysA.length !== symbolKeysB.length && getEnumerables(val2, symbolKeysB).length !== count) {\n        return false;\n      }\n    } else {\n      var _symbolKeysB = objectGetOwnPropertySymbols(val2);\n      if (_symbolKeysB.length !== 0 && getEnumerables(val2, _symbolKeysB).length !== 0) {\n        return false;\n      }\n    }\n  }\n  if (aKeys.length === 0 && (iterationType === kNoIterator || iterationType === kIsArray && val1.length === 0 || val1.size === 0)) {\n    return true;\n  }\n\n  // Use memos to handle cycles.\n  if (memos === undefined) {\n    memos = {\n      val1: new Map(),\n      val2: new Map(),\n      position: 0\n    };\n  } else {\n    // We prevent up to two map.has(x) calls by directly retrieving the value\n    // and checking for undefined. The map can only contain numbers, so it is\n    // safe to check for undefined only.\n    var val2MemoA = memos.val1.get(val1);\n    if (val2MemoA !== undefined) {\n      var val2MemoB = memos.val2.get(val2);\n      if (val2MemoB !== undefined) {\n        return val2MemoA === val2MemoB;\n      }\n    }\n    memos.position++;\n  }\n  memos.val1.set(val1, memos.position);\n  memos.val2.set(val2, memos.position);\n  var areEq = objEquiv(val1, val2, strict, aKeys, memos, iterationType);\n  memos.val1.delete(val1);\n  memos.val2.delete(val2);\n  return areEq;\n}\nfunction setHasEqualElement(set, val1, strict, memo) {\n  // Go looking.\n  var setValues = arrayFromSet(set);\n  for (var i = 0; i < setValues.length; i++) {\n    var val2 = setValues[i];\n    if (innerDeepEqual(val1, val2, strict, memo)) {\n      // Remove the matching element to make sure we do not check that again.\n      set.delete(val2);\n      return true;\n    }\n  }\n  return false;\n}\n\n// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Loose_equality_using\n// Sadly it is not possible to detect corresponding values properly in case the\n// type is a string, number, bigint or boolean. The reason is that those values\n// can match lots of different string values (e.g., 1n == '+00001').\nfunction findLooseMatchingPrimitives(prim) {\n  switch (_typeof(prim)) {\n    case 'undefined':\n      return null;\n    case 'object':\n      // Only pass in null as object!\n      return undefined;\n    case 'symbol':\n      return false;\n    case 'string':\n      prim = +prim;\n    // Loose equal entries exist only if the string is possible to convert to\n    // a regular number and not NaN.\n    // Fall through\n    case 'number':\n      if (numberIsNaN(prim)) {\n        return false;\n      }\n  }\n  return true;\n}\nfunction setMightHaveLoosePrim(a, b, prim) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) return altValue;\n  return b.has(altValue) && !a.has(altValue);\n}\nfunction mapMightHaveLoosePrim(a, b, prim, item, memo) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) {\n    return altValue;\n  }\n  var curB = b.get(altValue);\n  if (curB === undefined && !b.has(altValue) || !innerDeepEqual(item, curB, false, memo)) {\n    return false;\n  }\n  return !a.has(altValue) && innerDeepEqual(item, curB, false, memo);\n}\nfunction setEquiv(a, b, strict, memo) {\n  // This is a lazily initiated Set of entries which have to be compared\n  // pairwise.\n  var set = null;\n  var aValues = arrayFromSet(a);\n  for (var i = 0; i < aValues.length; i++) {\n    var val = aValues[i];\n    // Note: Checking for the objects first improves the performance for object\n    // heavy sets but it is a minor slow down for primitives. As they are fast\n    // to check this improves the worst case scenario instead.\n    if (_typeof(val) === 'object' && val !== null) {\n      if (set === null) {\n        set = new Set();\n      }\n      // If the specified value doesn't exist in the second set its an not null\n      // object (or non strict only: a not matching primitive) we'll need to go\n      // hunting for something thats deep-(strict-)equal to it. To make this\n      // O(n log n) complexity we have to copy these values in a new set first.\n      set.add(val);\n    } else if (!b.has(val)) {\n      if (strict) return false;\n\n      // Fast path to detect missing string, symbol, undefined and null values.\n      if (!setMightHaveLoosePrim(a, b, val)) {\n        return false;\n      }\n      if (set === null) {\n        set = new Set();\n      }\n      set.add(val);\n    }\n  }\n  if (set !== null) {\n    var bValues = arrayFromSet(b);\n    for (var _i = 0; _i < bValues.length; _i++) {\n      var _val = bValues[_i];\n      // We have to check if a primitive value is already\n      // matching and only if it's not, go hunting for it.\n      if (_typeof(_val) === 'object' && _val !== null) {\n        if (!setHasEqualElement(set, _val, strict, memo)) return false;\n      } else if (!strict && !a.has(_val) && !setHasEqualElement(set, _val, strict, memo)) {\n        return false;\n      }\n    }\n    return set.size === 0;\n  }\n  return true;\n}\nfunction mapHasEqualEntry(set, map, key1, item1, strict, memo) {\n  // To be able to handle cases like:\n  //   Map([[{}, 'a'], [{}, 'b']]) vs Map([[{}, 'b'], [{}, 'a']])\n  // ... we need to consider *all* matching keys, not just the first we find.\n  var setValues = arrayFromSet(set);\n  for (var i = 0; i < setValues.length; i++) {\n    var key2 = setValues[i];\n    if (innerDeepEqual(key1, key2, strict, memo) && innerDeepEqual(item1, map.get(key2), strict, memo)) {\n      set.delete(key2);\n      return true;\n    }\n  }\n  return false;\n}\nfunction mapEquiv(a, b, strict, memo) {\n  var set = null;\n  var aEntries = arrayFromMap(a);\n  for (var i = 0; i < aEntries.length; i++) {\n    var _aEntries$i = _slicedToArray(aEntries[i], 2),\n      key = _aEntries$i[0],\n      item1 = _aEntries$i[1];\n    if (_typeof(key) === 'object' && key !== null) {\n      if (set === null) {\n        set = new Set();\n      }\n      set.add(key);\n    } else {\n      // By directly retrieving the value we prevent another b.has(key) check in\n      // almost all possible cases.\n      var item2 = b.get(key);\n      if (item2 === undefined && !b.has(key) || !innerDeepEqual(item1, item2, strict, memo)) {\n        if (strict) return false;\n        // Fast path to detect missing string, symbol, undefined and null\n        // keys.\n        if (!mapMightHaveLoosePrim(a, b, key, item1, memo)) return false;\n        if (set === null) {\n          set = new Set();\n        }\n        set.add(key);\n      }\n    }\n  }\n  if (set !== null) {\n    var bEntries = arrayFromMap(b);\n    for (var _i2 = 0; _i2 < bEntries.length; _i2++) {\n      var _bEntries$_i = _slicedToArray(bEntries[_i2], 2),\n        _key = _bEntries$_i[0],\n        item = _bEntries$_i[1];\n      if (_typeof(_key) === 'object' && _key !== null) {\n        if (!mapHasEqualEntry(set, a, _key, item, strict, memo)) return false;\n      } else if (!strict && (!a.has(_key) || !innerDeepEqual(a.get(_key), item, false, memo)) && !mapHasEqualEntry(set, a, _key, item, false, memo)) {\n        return false;\n      }\n    }\n    return set.size === 0;\n  }\n  return true;\n}\nfunction objEquiv(a, b, strict, keys, memos, iterationType) {\n  // Sets and maps don't have their entries accessible via normal object\n  // properties.\n  var i = 0;\n  if (iterationType === kIsSet) {\n    if (!setEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsMap) {\n    if (!mapEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsArray) {\n    for (; i < a.length; i++) {\n      if (hasOwnProperty(a, i)) {\n        if (!hasOwnProperty(b, i) || !innerDeepEqual(a[i], b[i], strict, memos)) {\n          return false;\n        }\n      } else if (hasOwnProperty(b, i)) {\n        return false;\n      } else {\n        // Array is sparse.\n        var keysA = Object.keys(a);\n        for (; i < keysA.length; i++) {\n          var key = keysA[i];\n          if (!hasOwnProperty(b, key) || !innerDeepEqual(a[key], b[key], strict, memos)) {\n            return false;\n          }\n        }\n        if (keysA.length !== Object.keys(b).length) {\n          return false;\n        }\n        return true;\n      }\n    }\n  }\n\n  // The pair must have equivalent values for every corresponding key.\n  // Possibly expensive deep test:\n  for (i = 0; i < keys.length; i++) {\n    var _key2 = keys[i];\n    if (!innerDeepEqual(a[_key2], b[_key2], strict, memos)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isDeepEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kLoose);\n}\nfunction isDeepStrictEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kStrict);\n}\nmodule.exports = {\n  isDeepEqual: isDeepEqual,\n  isDeepStrictEqual: isDeepStrictEqual\n};","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher) || [];\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar hasPropertyDescriptors = require('has-property-descriptors')();\n\nvar supportsDescriptors = origDefineProperty && hasPropertyDescriptors;\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object) {\n\t\tif (predicate === true) {\n\t\t\tif (object[name] === value) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (!isFunction(predicate) || !predicate()) {\n\t\t\treturn;\n\t\t}\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value; // eslint-disable-line no-param-reassign\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak512 = exports.keccak384 = exports.keccak256 = exports.keccak224 = void 0;\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst utils_js_1 = require(\"./utils.js\");\nexports.keccak224 = (0, utils_js_1.wrapHash)(sha3_1.keccak_224);\nexports.keccak256 = (() => {\n    const k = (0, utils_js_1.wrapHash)(sha3_1.keccak_256);\n    k.create = sha3_1.keccak_256.create;\n    return k;\n})();\nexports.keccak384 = (0, utils_js_1.wrapHash)(sha3_1.keccak_384);\nexports.keccak512 = (0, utils_js_1.wrapHash)(sha3_1.keccak_512);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.secp256k1 = void 0;\nvar secp256k1_1 = require(\"@noble/curves/secp256k1\");\nObject.defineProperty(exports, \"secp256k1\", { enumerable: true, get: function () { return secp256k1_1.secp256k1; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = exports.wrapHash = exports.equalsBytes = exports.hexToBytes = exports.bytesToUtf8 = exports.utf8ToBytes = exports.createView = exports.concatBytes = exports.toHex = exports.bytesToHex = exports.assertBytes = exports.assertBool = void 0;\nconst _assert_1 = __importDefault(require(\"@noble/hashes/_assert\"));\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst assertBool = _assert_1.default.bool;\nexports.assertBool = assertBool;\nconst assertBytes = _assert_1.default.bytes;\nexports.assertBytes = assertBytes;\nvar utils_2 = require(\"@noble/hashes/utils\");\nObject.defineProperty(exports, \"bytesToHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"toHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"concatBytes\", { enumerable: true, get: function () { return utils_2.concatBytes; } });\nObject.defineProperty(exports, \"createView\", { enumerable: true, get: function () { return utils_2.createView; } });\nObject.defineProperty(exports, \"utf8ToBytes\", { enumerable: true, get: function () { return utils_2.utf8ToBytes; } });\n// buf.toString('utf8') -> bytesToUtf8(buf)\nfunction bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nexports.bytesToUtf8 = bytesToUtf8;\nfunction hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return (0, utils_1.hexToBytes)(sliced);\n}\nexports.hexToBytes = hexToBytes;\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nfunction equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.equalsBytes = equalsBytes;\n// Internal utils\nfunction wrapHash(hash) {\n    return (msg) => {\n        _assert_1.default.bytes(msg);\n        return hash(msg);\n    };\n}\nexports.wrapHash = wrapHash;\n// TODO(v3): switch away from node crypto, remove this unnecessary variable.\nexports.crypto = (() => {\n    const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n","'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\ttry {\n\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\tget: function () {\n\t\t\t\tthrow isCallableMarker;\n\t\t\t}\n\t\t});\n\t\tisCallableMarker = {};\n\t\t// eslint-disable-next-line no-throw-literal\n\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t} catch (_) {\n\t\tif (_ !== isCallableMarker) {\n\t\t\treflectApply = null;\n\t\t}\n\t}\n} else {\n\treflectApply = null;\n}\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar objectClass = '[object Object]';\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar ddaClass = '[object HTMLAllCollection]'; // IE 11\nvar ddaClass2 = '[object HTML document.all class]';\nvar ddaClass3 = '[object HTMLCollection]'; // IE 9-10\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n\nvar isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing\n\nvar isDDA = function isDocumentDotAll() { return false; };\nif (typeof document === 'object') {\n\t// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n\tvar all = document.all;\n\tif (toStr.call(all) === toStr.call(document.all)) {\n\t\tisDDA = function isDocumentDotAll(value) {\n\t\t\t/* globals document: false */\n\t\t\t// in IE 6-8, typeof document.all is \"object\" and it's truthy\n\t\t\tif ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {\n\t\t\t\ttry {\n\t\t\t\t\tvar str = toStr.call(value);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tstr === ddaClass\n\t\t\t\t\t\t|| str === ddaClass2\n\t\t\t\t\t\t|| str === ddaClass3 // opera 12.16\n\t\t\t\t\t\t|| str === objectClass // IE 6-8\n\t\t\t\t\t) && value('') == null; // eslint-disable-line eqeqeq\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t}\n}\n\nmodule.exports = reflectApply\n\t? function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\ttry {\n\t\t\treflectApply(value, null, badArrayLike);\n\t\t} catch (e) {\n\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t}\n\t\treturn !isES6ClassFn(value) && tryFunctionObject(value);\n\t}\n\t: function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\tif (strClass !== fnClass && strClass !== genClass && !(/^\\[object HTML/).test(strClass)) { return false; }\n\t\treturn tryFunctionObject(value);\n\t};\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n","'use strict';\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function isNaN(value) {\n\treturn value !== value;\n};\n","'use strict';\n\nvar callBind = require('call-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Number);\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (Number.isNaN && Number.isNaN(NaN) && !Number.isNaN('a')) {\n\t\treturn Number.isNaN;\n\t}\n\treturn implementation;\n};\n","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function shimNumberIsNaN() {\n\tvar polyfill = getPolyfill();\n\tdefine(Number, { isNaN: polyfill }, {\n\t\tisNaN: function testIsNaN() {\n\t\t\treturn Number.isNaN !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar gOPD = require('gopd');\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar anyTrue = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!anyTrue) {\n\t\t\ttry {\n\t\t\t\tanyTrue = getter.call(value) === typedArray;\n\t\t\t} catch (e) { /**/ }\n\t\t}\n\t});\n\treturn anyTrue;\n};\n\nmodule.exports = function isTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) {\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\treturn $indexOf(typedArrays, tag) > -1;\n\t}\n\tif (!gOPD) { return false; }\n\treturn tryTypedArrays(value);\n};\n","'use strict';\n\nvar helpers = require('./helpers');\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'additionalItems': true,\n  'then': true,\n  'else': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true,\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      if(!v) return;\n      var id = v.$id || v.id;\n      return id ? ('<' + id + '>') : (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchemaNoThrow(instance, options, ctx, callback, schema){\n  var throwError = options.throwError;\n  var throwAll = options.throwAll;\n  options.throwError = false;\n  options.throwAll = false;\n  var res = this.validateSchema(instance, schema, options, ctx);\n  options.throwError = throwError;\n  options.throwAll = throwAll;\n\n  if (!res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n    ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      var id = v.$id || v.id;\n      if(id) return '<' + id + '>';\n      return(v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var id = v.$id || v.id;\n      var msg = id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n    ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    var id = v.$id || v.id;\n    return id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates \"then\" or \"else\" depending on the result of validating \"if\"\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.if = function validateIf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) return null;\n  if (!helpers.isSchema(schema.if)) throw new Error('Expected \"if\" keyword to be a schema');\n  var ifValid = testSchemaNoThrow.call(this, instance, options, ctx, null, schema.if);\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var res;\n  if(ifValid){\n    if (schema.then === undefined) return;\n    if (!helpers.isSchema(schema.then)) throw new Error('Expected \"then\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.then, options, ctx.makeChild(schema.then));\n    result.importErrors(res);\n  }else{\n    if (schema.else === undefined) return;\n    if (!helpers.isSchema(schema.else)) throw new Error('Expected \"else\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.else, options, ctx.makeChild(schema.else));\n    result.importErrors(res);\n  }\n  return result;\n};\n\nfunction getEnumerableProperty(object, key){\n  // Determine if `key` shows up in `for(var key in object)`\n  // First test Object.hasOwnProperty.call as an optimization: that guarantees it does\n  if(Object.hasOwnProperty.call(object, key)) return object[key];\n  // Test `key in object` as an optimization; false means it won't\n  if(!(key in object)) return;\n  while( (object = Object.getPrototypeOf(object)) ){\n    if(Object.propertyIsEnumerable.call(object, key)) return object[key];\n  }\n}\n\n/**\n * Validates propertyNames\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.propertyNames = function validatePropertyNames (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var subschema = schema.propertyNames!==undefined ? schema.propertyNames : {};\n  if(!helpers.isSchema(subschema)) throw new SchemaError('Expected \"propertyNames\" to be a schema (object or boolean)');\n\n  for (var property in instance) {\n    if(getEnumerableProperty(instance, property) !== undefined){\n      var res = this.validateSchema(property, subschema, options, ctx.makeChild(subschema));\n      result.importErrors(res);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    var subschema = properties[property];\n    if(subschema===undefined){\n      continue;\n    }else if(subschema===null){\n      throw new SchemaError('Unexpected null, expected schema in \"properties\"');\n    }\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, subschema, options, ctx);\n    }\n    var prop = getEnumerableProperty(instance, property);\n    var res = this.validateSchema(prop, subschema, options, ctx.makeChild(subschema, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existence tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if(!this.types.object(instance)) return;\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"is not allowed to have the additional property \" + JSON.stringify(property),\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var subschema = patternProperties[pattern];\n      if(subschema===undefined){\n        continue;\n      }else if(subschema===null){\n        throw new SchemaError('Unexpected null, expected schema in \"patternProperties\"');\n      }\n      try {\n        var regexp = new RegExp(pattern, 'u');\n      } catch(_e) {\n        // In the event the stricter handling causes an error, fall back on the forgiving handling\n        // DEPRECATED\n        regexp = new RegExp(pattern);\n      }\n      if (!regexp.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, subschema, options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], subschema, options, ctx.makeChild(subschema, property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.items===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  instance.every(function (value, i) {\n    if(Array.isArray(schema.items)){\n      var items =  schema.items[i]===undefined ? schema.additionalItems : schema.items[i];\n    }else{\n      var items = schema.items;\n    }\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates the \"contains\" keyword\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.contains = function validateContains (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.contains===undefined) return;\n  if (!helpers.isSchema(schema.contains)) throw new Error('Expected \"contains\" keyword to be a schema');\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var count = instance.some(function (value, i) {\n    var res = self.validateSchema(value, schema.contains, options, ctx.makeChild(schema.contains, i));\n    return res.errors.length===0;\n  });\n  if(count===false){\n    result.addError({\n      name: 'contains',\n      argument: schema.contains,\n      message: \"must contain an item matching given schema\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    if(!(instance > schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than \" + schema.minimum,\n      });\n    }\n  } else {\n    if(!(instance >= schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than or equal to \" + schema.minimum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    if(!(instance < schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than \" + schema.maximum,\n      });\n    }\n  } else {\n    if(!(instance <= schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than or equal to \" + schema.maximum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMinimum = function validateExclusiveMinimum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMinimum, which is handled by the \"minimum\" keyword.\n  if(typeof schema.exclusiveMinimum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance > schema.exclusiveMinimum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMinimum',\n      argument: schema.exclusiveMinimum,\n      message: \"must be strictly greater than \" + schema.exclusiveMinimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMaximum = function validateExclusiveMaximum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMaximum, which is handled by the \"maximum\" keyword.\n  if(typeof schema.exclusiveMaximum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance < schema.exclusiveMaximum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMaximum',\n      argument: schema.exclusiveMaximum,\n      message: \"must be strictly less than \" + schema.exclusiveMaximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (!this.types.number(instance)) return;\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument),\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatibility with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\",\n    });\n  } else if (this.types.object(instance) && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(getEnumerableProperty(instance, n)===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var pattern = schema.pattern;\n  try {\n    var regexp = new RegExp(pattern, 'u');\n  } catch(_e) {\n    // In the event the stricter handling causes an error, fall back on the forgiving handling\n    // DEPRECATED\n    regexp = new RegExp(pattern);\n  }\n  if (!instance.match(regexp)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern.toString()),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  if (instance===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  // TODO if this was already computed in \"minLength\", use that value instead of re-computing\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (schema.uniqueItems!==true) return;\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].map(String).join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var id = type && (type.$id || type.id);\n      var schemaId = id || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n","'use strict';\n\nvar uri = require('url');\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, path, name, argument) {\n  if(Array.isArray(path)){\n    this.path = path;\n    this.property = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else if(path !== undefined){\n    this.property = path;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    var id = schema.$id || schema.id;\n    this.schema = id || schema;\n  }\n  if (instance !== undefined) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.options = options;\n  this.path = ctx.path;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.throwFirst = options && options.throwFirst;\n  this.throwAll = options && options.throwAll;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.path);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.path, detail.name, detail.argument);\n  }\n\n  this.errors.push(err);\n  if (this.throwFirst) {\n    throw new ValidatorResultError(this);\n  }else if(this.throwError){\n    throw err;\n  }\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    this.errors = this.errors.concat(res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\nmodule.exports.ValidatorResultError = ValidatorResultError;\nfunction ValidatorResultError(result) {\n  if(Error.captureStackTrace){\n    Error.captureStackTrace(this, ValidatorResultError);\n  }\n  this.instance = result.instance;\n  this.schema = result.schema;\n  this.options = result.options;\n  this.errors = result.errors;\n}\nValidatorResultError.prototype = new Error();\nValidatorResultError.prototype.constructor = ValidatorResultError;\nValidatorResultError.prototype.name = \"Validation Error\";\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  Error.captureStackTrace(this, SchemaError);\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  {\n    constructor: {value: SchemaError, enumerable: false},\n    name: {value: 'SchemaError', enumerable: false},\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, path, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  if(Array.isArray(path)){\n    this.path = path;\n    this.propertyPath = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else{\n    this.propertyPath = path;\n  }\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return uri.resolve(this.base, target);\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var path = (propertyName===undefined) ? this.path : this.path.concat([propertyName]);\n  var id = schema.$id || schema.id;\n  var base = uri.resolve(this.base, id||'');\n  var ctx = new SchemaContext(schema, this.options, path, base, Object.create(this.schemas));\n  if(id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n};\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  // 7.3.1. Dates, Times, and Duration\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n  'duration': /P(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S)|\\d+(D|M(\\d+D)?|Y(\\d+M(\\d+D)?)?)(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S))?|\\d+W)/i,\n\n  // 7.3.2. Email Addresses\n  // TODO: fix the email production\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'idn-email': /^(\"(?:[!#-\\[\\]-\\u{10FFFF}]|\\\\[\\t -\\u{10FFFF}])*\"|[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*)@([!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*|\\[[!-Z\\^-\\u{10FFFF}]*\\])$/u,\n\n  // 7.3.3. Hostnames\n\n  // 7.3.4. IP Addresses\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  // FIXME whitespace is invalid\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n\n  // 7.3.5. Resource Identifiers\n  // TODO: A more accurate regular expression for \"uri\" goes:\n  // [A-Za-z][+\\-.0-9A-Za-z]*:((/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?)?#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])|/?%[0-9A-Fa-f]{2}|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*(#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?)?\n  'uri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'uri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/,\n  'iri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'iri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~-\\u{10FFFF}]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~-\\u{10FFFF}])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/u,\n  'uuid': /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n\n  // 7.3.6. uri-template\n  'uri-template': /(%[0-9a-f]{2}|[!#$&(-;=?@\\[\\]_a-z~]|\\{[!#&+,./;=?@|]?(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?(,(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?)*\\})*/iu,\n\n  // 7.3.7. JSON Pointers\n  'json-pointer': /^(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*$/iu,\n  'relative-json-pointer': /^\\d+(#|(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*)$/iu,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n\n  // 7.3.8. regex\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n\n  // Other definitions\n  // \"style\" was removed from JSON Schema in draft-4 and is deprecated\n  'style': /[\\r\\n\\t ]*[^\\r\\n\\t ][^:]*:[\\r\\n\\t ]*[^\\r\\n\\t ;]*[\\r\\n\\t ]*;?/,\n  // \"color\" was removed from JSON Schema in draft-4 and is deprecated\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/,\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e);\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e);\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key]);\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n}\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n  // ~ must be encoded explicitly because hacks\n  // the slash is encoded by encodeURIComponent\n  return a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\nexports.isSchema = function isSchema(val){\n  return (typeof val === 'object' && val) || (typeof val === 'boolean');\n};\n\n","'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidatorResultError = require('./helpers').ValidatorResultError;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\nmodule.exports.SchemaScanResult = require('./scan').SchemaScanResult;\nmodule.exports.scan = require('./scan').scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n","\"use strict\";\n\nvar urilib = require('url');\nvar helpers = require('./helpers');\n\nmodule.exports.SchemaScanResult = SchemaScanResult;\nfunction SchemaScanResult(found, ref){\n  this.id = found;\n  this.ref = ref;\n}\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param string uri\n * @param object schema\n * @return {Object}\n */\nmodule.exports.scan = function scan(base, schema){\n  function scanSchema(baseuri, schema){\n    if(!schema || typeof schema!='object') return;\n    // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n    if(schema.$ref){\n      var resolvedUri = urilib.resolve(baseuri, schema.$ref);\n      ref[resolvedUri] = ref[resolvedUri] ? ref[resolvedUri]+1 : 0;\n      return;\n    }\n    var id = schema.$id || schema.id;\n    var ourBase = id ? urilib.resolve(baseuri, id) : baseuri;\n    if (ourBase) {\n      // If there's no fragment, append an empty one\n      if(ourBase.indexOf('#')<0) ourBase += '#';\n      if(found[ourBase]){\n        if(!helpers.deepCompareStrict(found[ourBase], schema)){\n          throw new Error('Schema <'+ourBase+'> already exists with different definition');\n        }\n        return found[ourBase];\n      }\n      found[ourBase] = schema;\n      // strip trailing fragment\n      if(ourBase[ourBase.length-1]=='#'){\n        found[ourBase.substring(0, ourBase.length-1)] = schema;\n      }\n    }\n    scanArray(ourBase+'/items', (Array.isArray(schema.items)?schema.items:[schema.items]));\n    scanArray(ourBase+'/extends', (Array.isArray(schema.extends)?schema.extends:[schema.extends]));\n    scanSchema(ourBase+'/additionalItems', schema.additionalItems);\n    scanObject(ourBase+'/properties', schema.properties);\n    scanSchema(ourBase+'/additionalProperties', schema.additionalProperties);\n    scanObject(ourBase+'/definitions', schema.definitions);\n    scanObject(ourBase+'/patternProperties', schema.patternProperties);\n    scanObject(ourBase+'/dependencies', schema.dependencies);\n    scanArray(ourBase+'/disallow', schema.disallow);\n    scanArray(ourBase+'/allOf', schema.allOf);\n    scanArray(ourBase+'/anyOf', schema.anyOf);\n    scanArray(ourBase+'/oneOf', schema.oneOf);\n    scanSchema(ourBase+'/not', schema.not);\n  }\n  function scanArray(baseuri, schemas){\n    if(!Array.isArray(schemas)) return;\n    for(var i=0; i<schemas.length; i++){\n      scanSchema(baseuri+'/'+i, schemas[i]);\n    }\n  }\n  function scanObject(baseuri, schemas){\n    if(!schemas || typeof schemas!='object') return;\n    for(var p in schemas){\n      scanSchema(baseuri+'/'+p, schemas[p]);\n    }\n  }\n\n  var found = {};\n  var ref = {};\n  scanSchema(base, schema);\n  return new SchemaScanResult(found, ref);\n};\n","'use strict';\n\nvar urilib = require('url');\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar scanSchema = require('./scan').scan;\nvar ValidatorResult = helpers.ValidatorResult;\nvar ValidatorResultError = helpers.ValidatorResultError;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.$id || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    // If this schema is already defined, it will be filtered out by the next step\n    this.unresolvedRefs.push(uri);\n  }\n  // Remove newly defined schemas from unresolvedRefs\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!Array.isArray(schemas)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if((typeof schema !== 'boolean' && typeof schema !== 'object') || schema === null){\n    throw new SchemaError('Expected `schema` to be an object or boolean');\n  }\n  if (!options) {\n    options = {};\n  }\n  // This section indexes subschemas in the provided schema, so they don't need to be added with Validator#addSchema\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var id = schema.$id || schema.id;\n  var base = urilib.resolve(options.base||anonymousBase, id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, [], base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if(options.required && instance===undefined){\n    var result = new ValidatorResult(instance, schema, options, ctx);\n    result.addError('is required, but is undefined');\n    return result;\n  }\n  var result = this.validateSchema(instance, schema, options, ctx);\n  if (!result) {\n    throw new Error('Result undefined');\n  }else if(options.throwAll && result.errors.length){\n    throw new ValidatorResultError(result);\n  }\n  return result;\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (Array.isArray(schema['extends'])) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema = shouldResolve(schema);\n  if (switchSchema) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.path, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref = shouldResolve(schema);\n  if(ref) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n};\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if(type===undefined){\n    return;\n  }else if(type===null){\n    throw new SchemaError('Unexpected null in \"type\" keyword');\n  }\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance === 'object') && !(Array.isArray(instance)) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvalidStatusCodeError = exports.InvalidCertError = void 0;\nconst DEFAULT_OPT = Object.freeze({\n    redirect: true,\n    expectStatusCode: 200,\n    headers: {},\n    full: false,\n    keepAlive: true,\n    cors: false,\n    referrer: false,\n    sslAllowSelfSigned: false,\n    _redirectCount: 0,\n});\nclass InvalidCertError extends Error {\n    constructor(msg, fingerprint256) {\n        super(msg);\n        this.fingerprint256 = fingerprint256;\n    }\n}\nexports.InvalidCertError = InvalidCertError;\nclass InvalidStatusCodeError extends Error {\n    constructor(statusCode) {\n        super(`Request Failed. Status Code: ${statusCode}`);\n        this.statusCode = statusCode;\n    }\n}\nexports.InvalidStatusCodeError = InvalidStatusCodeError;\nfunction detectType(b, type) {\n    if (!type || type === 'text' || type === 'json') {\n        try {\n            let text = new TextDecoder('utf8', { fatal: true }).decode(b);\n            if (type === 'text')\n                return text;\n            try {\n                return JSON.parse(text);\n            }\n            catch (err) {\n                if (type === 'json')\n                    throw err;\n                return text;\n            }\n        }\n        catch (err) {\n            if (type === 'text' || type === 'json')\n                throw err;\n        }\n    }\n    return b;\n}\nlet agents = {};\nfunction fetchNode(url, _options) {\n    let options = { ...DEFAULT_OPT, ..._options };\n    const http = require('http');\n    const https = require('https');\n    const zlib = require('zlib');\n    const { promisify } = require('util');\n    const { resolve: urlResolve } = require('url');\n    const isSecure = !!/^https/.test(url);\n    let opts = {\n        method: options.method || 'GET',\n        headers: { 'Accept-Encoding': 'gzip, deflate, br' },\n    };\n    const compactFP = (s) => s.replace(/:| /g, '').toLowerCase();\n    if (options.keepAlive) {\n        const agentOpt = {\n            keepAlive: true,\n            keepAliveMsecs: 30 * 1000,\n            maxFreeSockets: 1024,\n            maxCachedSessions: 1024,\n        };\n        const agentKey = [\n            isSecure,\n            isSecure && options.sslPinnedCertificates?.map((i) => compactFP(i)).sort(),\n        ].join();\n        opts.agent =\n            agents[agentKey] || (agents[agentKey] = new (isSecure ? https : http).Agent(agentOpt));\n    }\n    if (options.type === 'json')\n        opts.headers['Content-Type'] = 'application/json';\n    if (options.data) {\n        if (!options.method)\n            opts.method = 'POST';\n        opts.body = options.type === 'json' ? JSON.stringify(options.data) : options.data;\n    }\n    opts.headers = { ...opts.headers, ...options.headers };\n    if (options.sslAllowSelfSigned)\n        opts.rejectUnauthorized = false;\n    const handleRes = async (res) => {\n        const status = res.statusCode;\n        if (options.redirect && 300 <= status && status < 400 && res.headers['location']) {\n            if (options._redirectCount == 10)\n                throw new Error('Request failed. Too much redirects.');\n            options._redirectCount += 1;\n            return await fetchNode(urlResolve(url, res.headers['location']), options);\n        }\n        if (options.expectStatusCode && status !== options.expectStatusCode) {\n            res.resume();\n            throw new InvalidStatusCodeError(status);\n        }\n        let buf = [];\n        for await (const chunk of res)\n            buf.push(chunk);\n        let bytes = Buffer.concat(buf);\n        const encoding = res.headers['content-encoding'];\n        if (encoding === 'br')\n            bytes = await promisify(zlib.brotliDecompress)(bytes);\n        if (encoding === 'gzip' || encoding === 'deflate')\n            bytes = await promisify(zlib.unzip)(bytes);\n        const body = detectType(bytes, options.type);\n        if (options.full)\n            return { headers: res.headers, status, body };\n        return body;\n    };\n    return new Promise((resolve, reject) => {\n        const handleError = async (err) => {\n            if (err && err.code === 'DEPTH_ZERO_SELF_SIGNED_CERT') {\n                try {\n                    await fetchNode(url, { ...options, sslAllowSelfSigned: true, sslPinnedCertificates: [] });\n                }\n                catch (e) {\n                    if (e && e.fingerprint256) {\n                        err = new InvalidCertError(`Self-signed SSL certificate: ${e.fingerprint256}`, e.fingerprint256);\n                    }\n                }\n            }\n            reject(err);\n        };\n        const req = (isSecure ? https : http).request(url, opts, (res) => {\n            res.on('error', handleError);\n            (async () => {\n                try {\n                    resolve(await handleRes(res));\n                }\n                catch (error) {\n                    reject(error);\n                }\n            })();\n        });\n        req.on('error', handleError);\n        const pinned = options.sslPinnedCertificates?.map((i) => compactFP(i));\n        const mfetchSecureConnect = (socket) => {\n            const fp256 = compactFP(socket.getPeerCertificate()?.fingerprint256 || '');\n            if (!fp256 && socket.isSessionReused())\n                return;\n            if (pinned.includes(fp256))\n                return;\n            req.emit('error', new InvalidCertError(`Invalid SSL certificate: ${fp256} Expected: ${pinned}`, fp256));\n            return req.abort();\n        };\n        if (options.sslPinnedCertificates) {\n            req.on('socket', (socket) => {\n                const hasListeners = socket\n                    .listeners('secureConnect')\n                    .map((i) => (i.name || '').replace('bound ', ''))\n                    .includes('mfetchSecureConnect');\n                if (hasListeners)\n                    return;\n                socket.on('secureConnect', mfetchSecureConnect.bind(null, socket));\n            });\n        }\n        if (options.keepAlive)\n            req.setNoDelay(true);\n        if (opts.body)\n            req.write(opts.body);\n        req.end();\n    });\n}\nconst SAFE_HEADERS = new Set(['Accept', 'Accept-Language', 'Content-Language', 'Content-Type'].map((i) => i.toLowerCase()));\nconst FORBIDDEN_HEADERS = new Set(['Accept-Charset', 'Accept-Encoding', 'Access-Control-Request-Headers', 'Access-Control-Request-Method',\n    'Connection', 'Content-Length', 'Cookie', 'Cookie2', 'Date', 'DNT', 'Expect', 'Host', 'Keep-Alive', 'Origin', 'Referer', 'TE', 'Trailer',\n    'Transfer-Encoding', 'Upgrade', 'Via'].map((i) => i.toLowerCase()));\nasync function fetchBrowser(url, _options) {\n    let options = { ...DEFAULT_OPT, ..._options };\n    const headers = new Headers();\n    if (options.type === 'json')\n        headers.set('Content-Type', 'application/json');\n    let parsed = new URL(url);\n    if (parsed.username) {\n        const auth = btoa(`${parsed.username}:${parsed.password}`);\n        headers.set('Authorization', `Basic ${auth}`);\n        parsed.username = '';\n        parsed.password = '';\n    }\n    url = '' + parsed;\n    for (let k in options.headers) {\n        const name = k.toLowerCase();\n        if (SAFE_HEADERS.has(name) || (options.cors && !FORBIDDEN_HEADERS.has(name)))\n            headers.set(k, options.headers[k]);\n    }\n    let opts = { headers, redirect: options.redirect ? 'follow' : 'manual' };\n    if (!options.referrer)\n        opts.referrerPolicy = 'no-referrer';\n    if (options.cors)\n        opts.mode = 'cors';\n    if (options.data) {\n        if (!options.method)\n            opts.method = 'POST';\n        opts.body = options.type === 'json' ? JSON.stringify(options.data) : options.data;\n    }\n    const res = await fetch(url, opts);\n    if (options.expectStatusCode && res.status !== options.expectStatusCode)\n        throw new InvalidStatusCodeError(res.status);\n    const body = detectType(new Uint8Array(await res.arrayBuffer()), options.type);\n    if (options.full)\n        return { headers: Object.fromEntries(res.headers.entries()), status: res.status, body };\n    return body;\n}\nconst IS_NODE = !!(typeof process == 'object' &&\n    process.versions &&\n    process.versions.node &&\n    process.versions.v8);\nfunction fetchUrl(url, options) {\n    const fn = IS_NODE ? fetchNode : fetchBrowser;\n    return fn(url, options);\n}\nexports.default = fetchUrl;\n","'use strict';\n\nvar numberIsNaN = function (value) {\n\treturn value !== value;\n};\n\nmodule.exports = function is(a, b) {\n\tif (a === 0 && b === 0) {\n\t\treturn 1 / a === 1 / b;\n\t}\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (numberIsNaN(a) && numberIsNaN(b)) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n","'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Object);\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.is === 'function' ? Object.is : implementation;\n};\n","'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimObjectIs() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { is: polyfill }, {\n\t\tis: function testObjectIs() {\n\t\t\treturn Object.is !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","'use strict';\n\n// modified from https://github.com/es-shims/es6-shim\nvar objectKeys = require('object-keys');\nvar hasSymbols = require('has-symbols/shams')();\nvar callBound = require('call-bind/callBound');\nvar toObject = Object;\nvar $push = callBound('Array.prototype.push');\nvar $propIsEnumerable = callBound('Object.prototype.propertyIsEnumerable');\nvar originalGetSymbols = hasSymbols ? Object.getOwnPropertySymbols : null;\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function assign(target, source1) {\n\tif (target == null) { throw new TypeError('target must be an object'); }\n\tvar to = toObject(target); // step 1\n\tif (arguments.length === 1) {\n\t\treturn to; // step 2\n\t}\n\tfor (var s = 1; s < arguments.length; ++s) {\n\t\tvar from = toObject(arguments[s]); // step 3.a.i\n\n\t\t// step 3.a.ii:\n\t\tvar keys = objectKeys(from);\n\t\tvar getSymbols = hasSymbols && (Object.getOwnPropertySymbols || originalGetSymbols);\n\t\tif (getSymbols) {\n\t\t\tvar syms = getSymbols(from);\n\t\t\tfor (var j = 0; j < syms.length; ++j) {\n\t\t\t\tvar key = syms[j];\n\t\t\t\tif ($propIsEnumerable(from, key)) {\n\t\t\t\t\t$push(keys, key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// step 3.a.iii:\n\t\tfor (var i = 0; i < keys.length; ++i) {\n\t\t\tvar nextKey = keys[i];\n\t\t\tif ($propIsEnumerable(from, nextKey)) { // step 3.a.iii.2\n\t\t\t\tvar propValue = from[nextKey]; // step 3.a.iii.2.a\n\t\t\t\tto[nextKey] = propValue; // step 3.a.iii.2.b\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to; // step 4\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nvar lacksProperEnumerationOrder = function () {\n\tif (!Object.assign) {\n\t\treturn false;\n\t}\n\t/*\n\t * v8, specifically in node 4.x, has a bug with incorrect property enumeration order\n\t * note: this does not detect the bug unless there's 20 characters\n\t */\n\tvar str = 'abcdefghijklmnopqrst';\n\tvar letters = str.split('');\n\tvar map = {};\n\tfor (var i = 0; i < letters.length; ++i) {\n\t\tmap[letters[i]] = letters[i];\n\t}\n\tvar obj = Object.assign({}, map);\n\tvar actual = '';\n\tfor (var k in obj) {\n\t\tactual += k;\n\t}\n\treturn str !== actual;\n};\n\nvar assignHasPendingExceptions = function () {\n\tif (!Object.assign || !Object.preventExtensions) {\n\t\treturn false;\n\t}\n\t/*\n\t * Firefox 37 still has \"pending exception\" logic in its Object.assign implementation,\n\t * which is 72% slower than our shim, and Firefox 40's native implementation.\n\t */\n\tvar thrower = Object.preventExtensions({ 1: 2 });\n\ttry {\n\t\tObject.assign(thrower, 'xy');\n\t} catch (e) {\n\t\treturn thrower[1] === 'y';\n\t}\n\treturn false;\n};\n\nmodule.exports = function getPolyfill() {\n\tif (!Object.assign) {\n\t\treturn implementation;\n\t}\n\tif (lacksProperEnumerationOrder()) {\n\t\treturn implementation;\n\t}\n\tif (assignHasPendingExceptions()) {\n\t\treturn implementation;\n\t}\n\treturn Object.assign;\n};\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), ':list='].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), ':list=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator' ?\n\t\t\t\t'[]=' :\n\t\t\t\t'=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tcase 'bracket-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[\\])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null ?\n\t\t\t\t\t[] :\n\t\t\t\t\tvalue.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], arrayValue);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\nvar whichTypedArray = require('which-typed-array');\nvar isTypedArray = require('is-typed-array');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').slice(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.slice(1, -1);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = require('./support/types');\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBind = require('call-bind');\nvar callBound = require('call-bind/callBound');\nvar gOPD = require('gopd');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = { __proto__: null };\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tif (typeof g[typedArray] === 'function') {\n\t\t\tvar arr = new g[typedArray]();\n\t\t\tif (Symbol.toStringTag in arr) {\n\t\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\t\tif (!descriptor) {\n\t\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t\t}\n\t\t\t\ttoStrTags[typedArray] = callBind(descriptor.get);\n\t\t\t}\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar foundName = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!foundName) {\n\t\t\ttry {\n\t\t\t\tvar name = getter(value);\n\t\t\t\tif (name === typedArray) {\n\t\t\t\t\tfoundName = name;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t}\n\t});\n\treturn foundName;\n};\n\nvar isTypedArray = require('is-typed-array');\n\nmodule.exports = function whichTypedArray(value) {\n\tif (!isTypedArray(value)) { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) { return $slice($toString(value), 8, -1); }\n\treturn tryTypedArrays(value);\n};\n","'use strict';\n\nvar possibleNames = [\n\t'BigInt64Array',\n\t'BigUint64Array',\n\t'Float32Array',\n\t'Float64Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Int8Array',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray'\n];\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\n\nmodule.exports = function availableTypedArrays() {\n\tvar out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n",null,null,null,null,null,null,null,"import { asUint8Array } from './util/as-uint8array.js';\nexport function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return asUint8Array(globalThis.Buffer.alloc(size));\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n  }\n  return new Uint8Array(size);\n}","import { allocUnsafe } from './alloc.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = allocUnsafe(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return asUint8Array(output);\n}","import bases from './util/bases.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return asUint8Array(globalThis.Buffer.from(string, 'utf-8'));\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}","import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}","export function asUint8Array(buf) {\n  if (globalThis.Buffer != null) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n  return buf;\n}","function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});","import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});","import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});","import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});","import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});","import { from } from './base.js';\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nexport const base256emoji = from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}","import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});","import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};","import { coerce } from '../bytes.js';\nexport const name = 'raw';\nexport const code = 85;\nexport const encode = node => coerce(node);\nexport const decode = data => coerce(data);","const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));","import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;","import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;"],"names":["rlp_1","require","keccak_1","secp256k1_1","utils_1","bytes_1","constants_1","helpers_1","internal_1","_0n","BigInt","Account","constructor","nonce","arguments","length","undefined","balance","storageRoot","KECCAK256_RLP","codeHash","KECCAK256_NULL","this","_validate","static","accountData","bufferToBigInt","toBuffer","serialized","values","arrToBufArr","RLP","decode","Uint8Array","from","Array","isArray","Error","fromValuesArray","raw","bigIntToUnpaddedBuffer","serialize","Buffer","encode","bufArrToArr","isContract","equals","isEmpty","exports","hexAddress","assertIsString","e","test","eip1191ChainId","assertIsHexString","address","stripHexPrefix","toLowerCase","prefix","toString","buf","hash","bytesToHex","keccak256","ret","i","parseInt","toUpperCase","isValidAddress","toChecksumAddress","assertIsBuffer","slice","salt","initCode","concat","privateKey","secp256k1","utils","isValidPrivateKey","publicKey","sanitize","ProjectivePoint","fromHex","pubKey","toRawBytes","pubToAddress","fromPrivateKey","publicToAddress","privateToPublic","addr","zeros","bufferToHex","accountBodyFromSlim","body","zeroAddress","emptyUint8Arr","accountBody","account_1","Address","str","isBuffer","privateToAddress","generateAddress","bigIntToBuffer","generateAddress2","isZero","zero","isPrecompileOrSystemAddress","rangeMin","rangeMax","events_1","AsyncEventEmitter","EventEmitter","emit","event","_self$_events$event","_len","args","_key","data","callback","self","listeners","_events","fn","async","context","tasks","error","task","call","Promise","resolve","reject","runInSeries","then","catch","listenerCount","once","listener","g","TypeError","next","removeListener","on","first","_this$_events$event","unshift","before","target","beforeOrAfter","after","_this$_events$event2","index","add","splice","super","addListener","prependListener","prependOnceListener","removeAllListeners","eventNames","getMaxListeners","setMaxListeners","maxListeners","Number","isSafeInteger","hex","intToHex","padToEven","bytes","allocUnsafe","fill","setLength","msg","right","copy","stripZeros","a","assertIsArray","v","isHexString","intToBuffer","n","toArray","num","res","asIntN","asUintN","isHexPrefixed","buffer","maxLength","bufferStr","replace","ba","array","push","baToJSON","k","Object","entries","arr","map","value","unpadBuffer","buffer_1","CURVE","KECCAK256_NULL_S","KECCAK256_RLP_ARRAY_S","KECCAK256_RLP_S","nibbles","nibblesToBytes","bi","ni","terminator","hasTerminator","subarray","l","b","compact","base","bytesToNibbles","chop","input","__exportStar","enumerable","get","arrayContainsArray","fromAscii","fromUtf8","getBinarySize","getKeys","toAscii","byteLength","superset","subset","some","indexOf","substring","code","substr","String","fromCharCode","stringValue","charCodeAt","params","key","allowEmpty","result","match","permits","promiseResolverQueue","resolver","release","console","warn","nextResolver","shift","micro_ftch_1","url","default","headers","type","method","jsonrpc","id","provider","_provider$connection","connection","calculateSigRecovery","chainId","isValidSigRecovery","recovery","msgHash","sig","sign","toCompactRawBytes","r","s","signature","setLengthLeft","senderPubKey","Signature","fromCompact","addRecoveryBit","recoverPublicKey","ss","bufferToInt","homesteadOrLater","rBigInt","sBigInt","SECP256K1_ORDER","SECP256K1_ORDER_DIV_2","message","TypeOutput","outputType","output","bigInt","MAX_SAFE_INTEGER","PrefixedHexString","address_1","types_1","Withdrawal","validatorIndex","amount","withdrawalData","indexData","validatorIndexData","addressData","amountData","toType","withdrawalArray","fromWithdrawalData","withdrawal","indexBuffer","alloc","validatorIndexBuffer","addressBuffer","toBufferArray","toValue","toJSON","bigIntToHex","errors_1","packer_1","types","packed","tight","pack","ParserError","getErrorMessage","encodeSingle","encodePacked","createBytes","unpack","decodeSingle","assert","isObject","hasProperty","stack","originalError","name","originalStack","getErrorStack","size","pointer","skip","iterator_1","parsers_1","utils_2","parsers","bool","fixedBytes","function","number","string","tuple","staticParser","parser","find","isType","isDynamicParser","isDynamic","_ref","arrayPacked","byteArray","staticBuffer","dynamicBuffer","pointers","reduce","_ref2","getParser","concatBytes","position","dynamicStart","updatedBuffer","_ref3","offset","padStart","numberToBytes","set","iterator","iterate","done","bytesToNumber","bytesValue","getByteLength","addressValue","getAddress","add0x","fixed_bytes_1","tuple_1","ARRAY_REGEX","_wrapRegExp","_match$groups","groups","getTupleType","innerType","join","getArrayType","isArrayType","arrayType","fixedLength","arrayLength","rest","superstruct_1","number_1","BooleanCoercer","coerce","boolean","union","literal","create","booleanValue","getBooleanValue","bigIntToBytes","bufferValue","paddedSize","Math","ceil","padEnd","BYTES_REGEX","_type$match","FunctionStruct","object","StrictHexStruct","selector","instance","hexToBytes","fnValue","getFunction","NUMBER_REGEX","startsWith","assertNumberLength","getLength","maxValue","isSigned","createBigInt","bigIntValue","getBigInt","signedBigIntToBytes","numberValue","bytesToSignedBigInt","bytesToBigInt","stringToBytes","bytesToString","TUPLE_REGEX","endsWith","elements","current","depth","char","trim","getTupleElements","element","isTupleType","total","padding","max","nacl","__importStar","naclUtil","encrypt","version","isNullish","ephemeralKeyPair","box","keyPair","pubKeyUInt8Array","decodeBase64","err","msgParamsUInt8Array","decodeUTF8","randomBytes","nonceLength","encryptedMessage","secretKey","encodeBase64","ephemPublicKey","ciphertext","decrypt","encryptedData","receiverPrivateKeyUint8Array","naclDecodeHex","receiverEncryptionPrivateKey","fromSecretKey","decryptedMessage","open","encodeUTF8","msgHex","msgBase64","dataWithPadding","modVal","JSON","stringify","padLength","repeat","_ref4","parse","privateKeyUint8Array","encryptionPublicKey","concatSig","normalize","util_1","getPublicKeyFor","messageHash","hashPersonalMessage","legacyToBuffer","ecsign","sender","abi_utils_1","utils_3","SignTypedDataVersion","validateVersion","allowedVersions","keys","includes","parseNumber","reallyStrangeAddressToBytes","character","encodeField","V3","V4","encodeData","isStrictHexString","Boolean","parsedType","lastIndexOf","typeValuePairs","item","t","primaryType","encodedTypes","encodedValues","hashType","field","encodeType","unsortedDeps","findTypeDependencies","delete","deps","sort","results","Set","has","hashStruct","encoded","hashed","encodedHashType","sanitizeData","sanitizedData","TYPED_MESSAGE_SCHEMA","properties","assign","EIP712Domain","eip712DomainHash","typedData","domain","normalizeValue","abs","normalizeIntegers","_typedSignatureHash","normalizedData","schema","additionalProperties","items","required","eip712Hash","parts","hashBuffer","_ref5","V1","TypedDataUtils","_ref6","padWithZeroes","hexString","targetLength","prototype","rSig","fromSigned","sSig","vSig","rStr","toUnsigned","sStr","vStr","remove0x","numberToHex","sigParams","fromRpcSig","ecrecover","hmac_1","weierstrass_js_1","getHash","hmac","msgs","curveDef","defHash","weierstrass","freeze","modular_js_1","utils_js_1","_1n","c","bits","constTimeNegate","condition","neg","negate","opts","W","windows","windowSize","unsafeLadder","elm","p","ZERO","d","double","precomputeWindow","points","window","wNAF","precomputes","f","BASE","mask","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","wNAFCached","P","precomputesMap","transform","_WINDOW_SIZE","comp","curve","validateField","Fp","validateObject","h","Gx","Gy","nBitLength","nByteLength","nLength","ORDER","os2ip","bytesToNumberBE","i2osp","strxor","isBytes","isNum","expand_message_xmd","DST","lenInBytes","H","utf8ToBytes","outputLen","b_in_bytes","blockLen","r_in_bytes","ell","DST_prime","Z_pad","l_i_b_str","b_0","expand_message_xof","dkLen","update","digest","hash_to_field","count","options","m","expand","_DST","dst","validateDST","log2p","L","len_in_bytes","prb","u","j","elm_offset","tv","mod","COEFF","reverse","x","y","xNum","xDen","yNum","yDen","val","acc","mul","div","Point","mapToCurve","def","hashToCurve","u0","fromAffine","u1","clearCofactor","assertValidity","encodeToCurve","encodeDST","_2n","_3n","_4n","_5n","_8n","pow","power","modulo","invert","q","tonelliShanks","legendreC","Q","S","Z","p1div4","root","eql","sqr","Q1div2","ONE","t2","ge","FpSqrt","c1","n2","nv","sub","isNegativeLE","FIELD_FIELDS","FpPow","FpInvertBatch","nums","tmp","lastMultiplied","is0","inverted","inv","reduceRight","_nBitLength","MASK","BYTES","BITS","lhs","rhs","legendreConst","bitLen","isLE","redef","sqrtP","bitMask","isValid","isOdd","sqrN","addN","subN","mulN","sqrt","invertBatch","lst","cmov","toBytes","numberToBytesLE","numberToBytesBE","fromBytes","bytesToNumberLE","groupOrder","hashLen","ensureBytes","minLen","u8a","hexes","numberToHexUnpadded","hexToNumber","len","hexByte","byte","isNaN","arrays","sum","pad","forEach","title","expectedLength","b1","b2","TextEncoder","pos","bitSet","u8n","u8fr","qByteLen","hmacFn","reset","_len2","_key2","reseed","seed","gen","out","sl","genUntil","pred","validatorFns","bigint","validators","optValidators","checkField","fieldName","isOptional","checkVal","ut","curve_js_1","b2n","h2b","Err","_parseInt","E","DER","toSig","sBytes","rBytesLeft","hexFromSig","shl","rhl","rl","weierstrassPoints","validateBasic","allowedPrivateKeyLengths","wrapPrivateKey","isTorsionFree","allowInfinityPoint","endo","beta","splitScalar","validatePointOpts","point","isCompressed","toAffine","tail","weierstrassEquation","x2","x3","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","lengths","pointPrecomputes","Map","assertPrjPoint","other","px","py","pz","toInv","multiply","_setWindowSize","left","hasEvenY","X1","Y1","Z1","X2","Y2","Z2","U1","U2","b3","X3","Y3","Z3","t0","t1","t3","t4","t5","subtract","wnaf","multiplyUnsafe","I","k1neg","k1","k2neg","k2","k1p","k2p","scalar","fake","f1p","f2p","normalizeZ","multiplyAndAddUnsafe","G","iz","z","ax","ay","zz","cofactor","toHex","_bits","SWUFpSqrtRatio","o","_2n_pow_c1_1","_2n_pow_c1","c2","c3","c4","c5","c6","c7","sqrtRatio","tv1","tv2","tv3","tv5","tv4","isQR","tvv5","e1","y1","y2","bits2int","bits2int_modN","lowS","validateOpts","CURVE_ORDER","compressedLen","uncompressedLen","modN","invN","cat","head","numToNByteStr","isBiggerThanHalfOrder","slcNum","to","rec","radj","R","ir","u2","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactHex","randomPrivateKey","rand","hashToPrivateScalar","precompute","isProbPub","delta","ORDER_MASK","int2octets","prepSig","defaultSigOpts","prehash","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","ik","normS","defaultVerOpts","getPublicKey","getSharedSecret","privateA","publicB","privKey","C","createHmacDrbg","drbg","verify","_Point$BASE$multiplyA","sg","_sig","fromDER","derError","is","A","B","tv6","sha256_1","hash_to_curve_js_1","_shortw_utils_js_1","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b6","pow2","b9","b11","b22","b44","b88","b176","b220","b223","Field","createCurve","a1","a2","POW_2_128","sha256","fe","TAGGED_HASH_PREFIXES","taggedHash","tag","tagP","tagH","messages","pointToBytes","numTo32b","modP","GmulAdd","schnorrGetExtPubKey","priv","d_","lift_x","xx","challenge","schnorrGetPublicKey","schnorrSign","auxRand","k_","rx","schnorrVerify","pub","isoMap","isogenyMap","mapSWU","mapToCurveSimpleSWU","htf","createHasher","scalars","_assert_js_1","SHA2","Hash","padOffset","finished","destroyed","view","createView","exists","take","min","process","dataView","roundClean","digestInto","byteOffset","setBigUint64","_32n","_u32_max","wh","wl","setUint32","oview","outLen","state","destroy","_cloneInto","HMAC","iHash","oHash","getPrototypeOf","_sha2_js_1","Maj","SHA256_K","Uint32Array","IV","SHA256_W","SHA256","D","F","getUint32","W15","W2","s0","rotr","s1","T1","T2","Chi","SHA224","wrapConstructor","int_1","writeUint16BE","writeUint16LE","readInt32BE","readUint32BE","readInt32LE","readUint32LE","writeUint32BE","writeUint32LE","writeUint64BE","writeUint64LE","hi","lo","bitLength","DataView","getFloat32","getFloat64","setFloat32","setFloat64","chacha_1","poly1305_1","wipe_1","binary_1","constant_time_1","ZEROS","ChaCha20Poly1305","tagLength","seal","plaintext","associatedData","counter","authKey","stream","resultLength","streamXOR","_authenticate","wipe","sealed","calculatedTag","equal","clean","tagOut","Poly1305","ROUNDS","core","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","src","nonceInplaceCounterLength","nc","counterLength","block","incrementCounter","carry","compare","subject","resultIfOne","resultIfZero","saveState","restoreState","cleanSavedState","HKDF","info","_counter","_hash","_info","okm","_hmac","_buffer","digestLength","_bufpos","_fillBuffer","ctr","finish","hash_1","_finished","_inner","_outer","blockSize","isSerializableHash","_innerKeyedState","_outerKeyedState","savedState","imul","al","bl","isInteger","isFinite","floor","DIGEST_LENGTH","_r","Uint16Array","_h","_pad","_leftover","_fin","t6","t7","_blocks","mpos","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","mac","macpos","want","system_1","defaultRandomSource","SystemRandomSource","ALPHANUMERIC","randomString","charset","prng","charsLen","maxByte","randomByte","charAt","log","LN2","isAvailable","isInstantiated","browserCrypto","crypto","msCrypto","getRandomValues","_crypto","nodeCrypto","browser_1","node_1","_source","BrowserRandomSource","NodeRandomSource","_state","Int32Array","_temp","_bufferLength","_bytesHashed","_initState","dataLength","dataPos","hashBlocks","bytesHashed","bitLenHi","bitLenLo","bufferLength","K","w","random_1","gf","init","Float64Array","_9","_121665","car25519","sel25519","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b4","b5","b7","b8","b10","b12","b13","b14","b15","square","scalarMult","unpack25519","x32","x16","inp","inv25519","pack25519","scalarMultBase","generateKeyPairFromSeed","mySecretKey","theirPublicKey","rejectZero","tslib_1","SIXTY_SECONDS","ONE_MINUTE","SIXTY_MINUTES","ONE_HOUR","TWENTY_FOUR_HOURS","ONE_DAY","SEVEN_DAYS","ONE_WEEK","seconds","ONE_THOUSAND","miliseconds","timeout","setTimeout","Watch","timestamps","start","label","started","Date","now","stop","timestamp","elapsed","__spreadArray","ar","BrowserInfo","os","NodeInfo","platform","SearchBotDeviceInfo","bot","BotInfo","ReactNativeInfo","SEARCHBOT_OS_REGEX","REQUIRED_VERSION_PARTS","userAgentRules","operatingSystemRules","detect","userAgent","parseUserAgent","document","navigator","product","matchUserAgent","ua","matched","_a","browser","regex","uaMatch","exec","matchedRule","versionParts","split","ii","createVersionParts","detectOS","searchBotMatch","RELAY_JSONRPC","waku","publish","batchPublish","subscribe","batchSubscribe","subscription","unsubscribe","batchUnsubscribe","irn","iridium","getFromWindow","getFromWindowOrThrow","window_getters_1","doc","loc","getDocumentOrThrow","getLocationOrThrow","getWindowMetadataOfAny","metaTags","getElementsByTagName","attributes","getAttribute","filter","attr","content","getName","description","origin","icons","links","link","rel","href","absoluteHref","protocol","host","path","pathname","pop","absoluteUrl","getIcons","safeSlice","end","decodeLength","parseHexByte","encodeLength","hexLength","firstByte","_decode","llength","innerRemainder","decoded","remainder","totalLength","cachedHexes","_v","uint8a","utf","integer","outputLength","inputBuf","assertIsBytes","BIGINT_0","hexByByte","BIGINT_CACHE","byteLen","intToBytes","unpadBytes","_unprefixedHexToBytes","unprefixedHexToBytes","addHexPrefix","validateNoLeadingZeroes","bigIntToUnpaddedBytes","MAX_UINT64","MAX_INTEGER","BIGINT_1","BIGINT_2","BIGINT_8","BIGINT_27","equalsBytes","KeyEncoding","ValueEncoding","kzgNotLoaded","kzg","loadTrustedSetup","blobToKzgCommitment","computeBlobKzgProof","verifyKzgProof","verifyBlobKzgProofBatch","FIELD_ELEMENTS_PER_BLOB","USEFUL_BYTES_PER_BLOB","get_blob","blob","BYTES_PER_FIELD_ELEMENT","chunk","getBlobs","blobs_len","pdata","get_padded","blobs","computeVersionedHash","commitment","blobCommitmentVersion","computedVersionedHash","crc","accum","createBuffer","encoding","defineCrc","model","calculator","previous","signed","unsigned","crc1","TABLE","crc16ccitt","crc16modbus","crc16xmodem","crc16kermit","crc24","crc32","crc32mpeg2","chains","mainnet","networkId","defaultHardfork","consensus","algorithm","ethash","comment","genesis","gasLimit","difficulty","extraData","hardforks","forkHash","ttd","bootstrapNodes","ip","port","location","dnsNetworks","goerli","clique","period","epoch","sepolia","holesky","baseFeePerGas","Chain","Mainnet","Goerli","Sepolia","Holesky","Hardfork","ConsensusType","ConsensusAlgorithm","CustomChain","Status","EIPs","status","Review","minimumHardfork","Chainstart","requiredEIPs","gasPrices","tstore","tload","Final","Berlin","gasConfig","baseFeeMaxChangeDenominator","elasticityMultiplier","initialBaseFee","Draft","Istanbul","beginsub","returnsub","jumpsub","Byzantium","modexpGquaddivisor","coldsload","coldaccountaccess","warmstorageread","sstoreCleanGasEIP2200","sstoreNoopGasEIP2200","sstoreDirtyGasEIP2200","sstoreInitRefundEIP2200","sstoreCleanRefundEIP2200","callcode","delegatecall","staticcall","extcodesize","extcodecopy","extcodehash","sload","sstore","accessListStorageKeyCost","accessListAddressCost","London","auth","authcall","authcallValueTransfer","basefee","maxRefundQuotient","selfdestructRefund","sstoreClearRefundEIP2200","MuirGlacier","difficultyBombDelay","vm","push0","SpuriousDragon","initCodeWordCost","maxInitCodeSize","prevrandao","Cancun","historicalRootsLength","Paris","blobGasPerBlob","targetBlobGasPerBlock","maxblobGasPerBlock","blobGasPriceUpdateFraction","simpleGasPerBlob","minBlobGasPrice","kzgPointEvaluationGasPrecompilePrice","blobhash","sharding","blobCommitmentVersionKzg","fieldElementsPerBlob","GrayGlacier","Shanghai","mcopy","blobbasefee","chainstart","minGasLimit","gasLimitBoundDivisor","exp","expByte","keccak256Word","sstoreSet","sstoreReset","sstoreRefund","jumpdest","logData","logTopic","callStipend","callValueTransfer","callNewAccount","memory","quadCoeffDiv","createData","tx","txCreation","txDataZero","txDataNonZero","ecRecover","sha256Word","ripemd160","ripemd160Word","identity","identityWord","sdiv","smod","addmod","mulmod","signextend","lt","gt","slt","sgt","eq","iszero","and","or","xor","not","caller","callvalue","calldataload","calldatasize","calldatacopy","codesize","codecopy","gasprice","blockhash","coinbase","gaslimit","mload","mstore","mstore8","jump","jumpi","pc","msize","gas","dup","swap","return","invalid","selfdestruct","stackLimit","callCreateDepth","maxExtraDataSize","minimumDifficulty","difficultyBoundDivisor","durationLimit","epochDuration","timebombPeriod","minerReward","homestead","dao","tangerineWhistle","spuriousDragon","maxCodeSize","byzantium","ecAdd","ecMul","ecPairing","ecPairingWord","revert","returndatasize","returndatacopy","constantinople","netSstoreNoopGas","netSstoreInitGas","netSstoreCleanGas","netSstoreDirtyGas","netSstoreClearRefund","netSstoreResetRefund","netSstoreResetClearRefund","shr","sar","create2","petersburg","istanbul","blake2Round","sstoreSentryGasEIP2200","sstoreInitGasEIP2200","chainid","selfbalance","muirGlacier","berlin","eips","london","arrowGlacier","grayGlacier","paris","casper","mergeForkIdTransition","shanghai","cancun","parseGethParams","json","_config$clique$period","_config$clique$epoch","mergeForkIdPostMerge","config","mixHash","excessBlobGas","genesisTimestamp","formatNonce","eip155Block","eip158Block","hardfork","blockperiodseconds","epochlength","forkMap","Homestead","Dao","TangerineWhistle","Constantinople","Petersburg","MergeForkIdTransition","postMerge","isTimestamp","forkMapRev","elem","configHardforkNames","nameBlock","fork","hf","_a$block","_b$block","Infinity","_a$timestamp","_b$timestamp","terminalTotalDifficulty","mergeConfig","postMergeIndex","findIndex","_forkMap$hf$name","latestHardfork","Common","_opts$customChains","_this$_chainParams$de","_eips","_paramsCache","_activatedEIPsCache","events","_customChains","customChains","_chainParams","setChain","chain","DEFAULT_HARDFORK","HARDFORK_CHANGES","HARDFORK_SPECS","_hardfork","setHardfork","setEIPs","_buildParamsCache","_buildActivatedEIPsCache","chainParamsOrName","_opts$baseChain","baseChain","standardChainParams","_getChainParams","PolygonMainnet","custom","PolygonMumbai","ArbitrumOne","xDaiChain","OptimisticKovan","OptimisticEthereum","genesisJson","_genesisParams$name","genesisHash","genesisParams","missingField","parseGethGenesis","common","setForkHashes","initializedChains","getInitializedChains","param","existing","hfChanges","getHardforkBy","blockNumber","td","hfs","mergeIndex","hfIndex","hfStartIndex","_hf$timestamp","_hf$timestamp2","setHardforkBy","_getHardfork","eip","minHF","gteHardfork","isActivatedEIP","_mergeWithParamsCache","hfEIPs","topic","_value","paramByHardfork","_value2","valueEIP","paramByEIP","eipParams","paramByBlock","hardforkIsActiveOnBlock","hfBlock","hardforkBlock","activeOnBlock","hardforkGteHardfork","hardfork1","hardfork2","_hardfork2","posHf1","posHf2","_hardfork3","_this$_getHardfork","hardforkTimestamp","_hardfork4","_this$_getHardfork2","eipBlock","hardforkTTD","_hardfork5","_this$_getHardfork3","nextHardforkBlockOrTimestamp","_hardfork6","_hfs$hfIndex$timestam","_nextHf$timestamp","currHfTimeOrBlock","nextHf","_hf$timestamp3","hfTimeOrBlock","nextHfBlock","_calcForkHash","hfBytes","prevBlockOrTime","blockOrTime","hfBlockBytes","inputBytes","_hardfork7","hardforkForForkHash","resArray","_hf$timestamp4","chainName","consensusType","_value3","consensusAlgorithm","_value4","consensusConfig","_value5","names","CHAIN_SPECS","Capability","TransactionType","isAccessList","firstItem","isAccessListBytes","AccessLists","accessList","AccessListJSON","bufferAccessList","newAccessList","addressBytes","storageItems","storageKeys","jsonItem","accessListItem","storageSlots","storageSlot","accessListJSON","JSONItem","slot","slots","txTypeBytes","txType","BaseTransaction","txData","_opts$allowUnlimitedI","_opts$common","cache","dataFee","activeCapabilities","DEFAULT_CHAIN","_type","txOptions","toB","vB","rB","sB","_validateCannotExceedMaxInteger","createContract","allowUnlimitedInitCodeSize","_getCommon","checkMaxInitCodeSize","supports","capability","getValidationErrors","errors","verifySignature","getBaseFee","txFee","fee","getDataFee","toCreationAddress","txCreationFee","cost","getSenderPublicKey","getSenderAddress","_errorMsg","hackApplied","Legacy","EIP155ReplayProtection","getHashedMessageToSign","_processSignature","chainIdBigInt","isSupportedChainId","_common$copy","cannotEqual","txDataKeys","_getSharedErrorPostfix","postfix","getUpfrontCost","baseFee","prio","maxPriorityFeePerGas","maxBase","maxFeePerGas","gasPrice","errorMsg","errorStr","extraCost","bind","isFrozen","validateHighS","getMessageToVerifySignature","getMessageToSign","validateYParity","getDataFeeEIP2930","FeeMarketEIP1559Transaction","_opts$freeze","FeeMarketEIP1559","accessListData","getAccessListData","verifyAccessList","_validateNotArray","EIP2718","EIP2930","EIP1559","fromTxData","getAccessListJSON","AccessListEIP2930Transaction","AccessListEIP2930","_this$accessList$leng","_this$accessList","LIMIT_BLOBS_PER_TX","BlobEIP4844Transaction","_txData$blobVersioned","_txData$blobs","_txData$kzgCommitment","_txData$kzgProofs","BlobEIP4844","maxFeePerBlobGas","blobVersionedHashes","vh","kzgCommitments","kzgProofs","proof","blobsData","cur","commitments","blobsToCommitments","hashes","commitmentsToVersionedHashes","ctx","blobsToProofs","_opts$freeze2","networkTxValues","txValues","decodedTx","validateBlobTransactionNetworkWrapper","serializeNetworkWrapper","numBlobs","meetsEIP155","chainIdDoubled","LegacyTransaction","_validateTxV","numSub","TransactionFactory","isLegacyTxData","isAccessListEIP2930TxData","isFeeMarketEIP1559TxData","isBlobEIP4844TxData","fromSerializedTx","fromSerializedData","txHash","prov","_getConnection","getProvider","fetch","fetchFromProvider","fromRPC","_txParams","_txParams$gasLimit","txParams","normalizeTxParams","logLevel","setLevel","levels","INFO","apiKey","embedHost","sentry","tracingOrigins","tracingPaths","fetchAndTrace","_url","URL","transaction","startTransaction","span","startChild","op","response","getApiKeyHeaders","debugLogResponse","statusText","options_","defaultOptions","mode","useAPIKey","_objectSpread","merge","ok","responseContentType","text","resemblesAddress","createWalletMiddleware","getAccounts","getPrivateKey","processDecryptMessage","processEncryptionPublicKey","processEthSignMessage","processPersonalMessage","processTransaction","processSignTransaction","processTypedMessage","processTypedMessageV3","processTypedMessageV4","validateAndNormalizeKeyholder","req","normalizedAccounts","_address","normalizedAddress","rpcErrors","invalidParams","fetchPrivateKey","methodNotSupported","createScaffoldMiddleware","eth_accounts","createAsyncMiddleware","eth_private_key","private_key","eth_coinbase","accounts","eth_sendTransaction","eth_signTransaction","eth_sign","extraParams","msgParams","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","personal_sign","firstParam","secondParam","warning","eth_getEncryptionPublicKey","eth_decrypt","createEthMiddleware","providerHandlers","mergeMiddleware","eth_syncing","createChainSwitchMiddleware","addChain","switchChain","wallet_addEthereumChain","_req$params","chainParams","rpcUrls","nativeCurrency","wallet_switchEthereumChain","_req$params2","createChainIdMiddleware","createProviderConfigMiddleware","providerConfig","createJsonRpcClient","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","getLastActiveSession","signClient","session","lastKeyIndex","sendJrpcRequest","providerErrors","disconnected","request","getAccountsFromNamespaces","namespaces","parseAccountId","WalletConnectV2Provider","BaseProvider","connector","chainConfig","chainNamespace","CHAIN_NAMESPACES","EIP155","skipLookupNetwork","_defineProperty","setupProvider","_providerEngineProxy","onConnectorStateUpdate","setupEngine","currentChainConfig","getChainConfig","configure","lookupNetwork","_","newChainId","getProviderHandlers$1","jrpcRes","ethMiddleware","chainSwitchMiddleware","getChainSwitchMiddleware","engine","JRPCEngine","providerFromEngine","updateProviderEngineProxy","blockExplorerUrls","ticker","symbol","tickerName","displayName","blockExplorer","decimals","connectedTopic","_this$connector","WalletLoginError","notConnectedError","_this$connector$sessi","checkIfChainIdAllowed","sessionData","allChains","getChainsFromNamespaces","chainAllowed","parsedId","parseChainId","reference","checkIfAccountAllowed","allAccounts","accountAllowed","account","_parsedAccount$addres","debug","payload","connectedChainId","rpcUrl","connectedHexChainId","maybeConfig","_class$1","providerFactory","BIG_NUMBER_WEI_MULTIPLIER","BigNumber","BIG_NUMBER_GWEI_MULTIPLIER","BIG_NUMBER_ETH_MULTIPLIER","toBigNumber","dec","toNormalizedDenomination","WEI","bigNumber","GWEI","ETH","toSpecifiedDenomination","times","dp","ROUND_HALF_UP","baseChange","conversionUtil","fromNumericBase","toNumericBase","fromDenomination","toDenomination","numberOfDecimals","convertedValue","ROUND_HALF_DOWN","converter","decGWEIToHexWEI","decGWEI","hexWEIToDecGWEI","normalizeGWEIDecimalNumbers","validateTypedMessageParams","parameters","activeChainId","typedSignatureHash","_typedData$domain","validation","jsonschema","isHexStrict","invalidInput","signTx","txFormatter","finalTxParams","formatTransaction","getCommonConfiguration","signedTx","bnToHex","inputBn","hexToBn","inputHex","BN","TRANSACTION_ENVELOPE_TYPES","TRANSACTION_TYPES","GAS_ESTIMATE_TYPES","TransactionFormatter","getProviderEngineProxy","providerProxy","isEIP1559Compatible","getEIP1559Compatibility","customChainParams","clonedTxParams","defaultGasLimit","getDefaultGasLimit","defaultGasPrice","defaultMaxFeePerGas","defaultMaxPriorityFeePerGas","getDefaultGasFees","BigNumber$1","feeHistory","finalBaseFeePerGas","priorityFeeCalcs","reward","curr","slow","plus","average","fast","estimatedBaseFee","high","maxWaitTimeEstimate","minWaitTimeEstimate","suggestedMaxFeePerGas","suggestedMaxPriorityFeePerGas","medium","low","latestBlock","isLegacyGasAPICompatible","gasData","estimates","API_SUPPORTED_CHAINIDS","fetchEip1159GasEstimates","fetchGasEstimatesViaEthFeeHistory","gasFeeEstimates","gasEstimateType","referrer","referrerPolicy","SafeGasPrice","ProposeGasPrice","FastGasPrice","fetchLegacyGasPriceEstimates","fetchEthGasPriceEstimate","fetchGasFeeEstimateData","txMeta","estimatedGasHex","targetBN","numerator","denominator","numberBN","denomBN","BnMultiplyByFraction","estimateTxGas","blockGasLimit","addGasBuffer","initialGasLimitHex","blockGasLimitHex","multiplier","initialGasLimitBn","upperGasLimitBn","muln","bufferedGasLimitBn","txParameters","txCategory","transactionCategory","determineTransactionCategory","analyzeGasUsage","EthereumPrivateKeyProvider","providerEngineProxy","signMessage","privKeyBuffer","personalSign","finalChainId","signTypedData","getEncryptionPublicKey","stripped","buff","getProviderHandlers","getAccountMiddleware","network","chainDisconnected","updatePrivatekey","wallet_updateAccount","_req$params3","accountParams","createAccountMiddleware","updateAccount","_class","_typeof","Symbol","_defineProperties","props","descriptor","configurable","writable","defineProperty","_toPropertyKey","_createClass","Constructor","protoProps","staticProps","arg","hint","prim","toPrimitive","_toPrimitive","isDeepEqual","isDeepStrictEqual","_require$codes","codes","ERR_AMBIGUOUS_ARGUMENT","ERR_INVALID_ARG_TYPE","ERR_INVALID_ARG_VALUE","ERR_INVALID_RETURN_VALUE","ERR_MISSING_ARGS","AssertionError","inspect","_require$types","isPromise","isRegExp","objectAssign","objectIs","RegExpPrototypeTest","lazyLoadComparison","comparison","warned","module","NO_EXCEPTION_SENTINEL","innerFail","obj","innerOk","argLen","generatedMessage","actual","expected","operator","stackStartFn","apply","fail","internalMessage","argsLen","emitWarning","errArgs","notEqual","deepEqual","notDeepEqual","deepStrictEqual","notDeepStrictEqual","strictEqual","notStrictEqual","Comparison","_this","_classCallCheck","expectedException","compareExceptionKey","isPrototypeOf","getActual","checkIsPromise","waitForActual","promiseFn","resultPromise","expectsError","details","fnType","expectsNoError","internalMatch","regexp","fnName","strict","_len6","_key6","throws","rejects","_len3","_key3","doesNotThrow","_len4","_key4","doesNotReject","_len5","_key5","ifError","newErr","origStack","tmp2","tmp1","doesNotMatch","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","getOwnPropertyDescriptors","defineProperties","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","_cache","Function","Wrapper","_construct","_getPrototypeOf","_setPrototypeOf","Parent","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","valueOf","setPrototypeOf","__proto__","search","this_len","blue","green","red","white","kReadableOperator","strictEqualObject","notStrictEqualObject","notIdentical","copyError","source","inspectValue","customInspect","maxArrayLength","showHidden","breakLength","showProxy","sorted","getters","createErrDiff","lastPos","skipped","actualInspected","actualLines","expectedLines","indicator","inputLength","stderr","isTTY","columns","maxCount","maxLines","_actualLines","printedLines","skippedMsg","expectedLine","actualLine","divergingLines","_Error","_inspect$custom","subClass","superClass","_inherits","_super","Derived","hasNativeReflectConstruct","Super","NewTarget","_createSuper","limit","stackTraceLimit","getColorDepth","_res","knownOperators","captureStackTrace","recurseTimes","util","createErrorType","Base","NodeError","_Base","arg1","arg2","arg3","getMessage","oneOf","thing","determiner","reason","inspected","RangeError","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_arrayLikeToArray","_unsupportedIterableToArray","_nonIterableRest","arr2","regexFlagsSupported","flags","arrayFromSet","arrayFromMap","objectGetOwnPropertySymbols","numberIsNaN","uncurryThis","hasOwnProperty","propertyIsEnumerable","objectToString","isAnyArrayBuffer","isArrayBufferView","isDate","isMap","isSet","isNativeError","isBoxedPrimitive","isNumberObject","isStringObject","isBooleanObject","isBigIntObject","isSymbolObject","isFloat32Array","isFloat64Array","isNonIndex","getOwnNonIndexProperties","kNoIterator","kIsArray","kIsSet","kIsMap","innerDeepEqual","val1","val2","memos","buf1","buf2","val1Tag","keys1","keys2","keyCheck","getTime","RegExp","areSimilarTypedArrays","areSimilarFloatArrays","_keys","_keys2","isEqualBoxedPrimitive","getEnumerables","iterationType","aKeys","bKeys","symbolKeysA","symbolKeysB","_symbolKeysB","val2MemoA","val2MemoB","areEq","memo","aValues","setMightHaveLoosePrim","bValues","_i","_val","setHasEqualElement","setEquiv","aEntries","_aEntries$i","item1","item2","mapMightHaveLoosePrim","bEntries","_i2","_bEntries$_i","mapHasEqualEntry","mapEquiv","keysA","objEquiv","setValues","findLooseMatchingPrimitives","altValue","curB","key1","key2","token","singleMatcher","multiMatcher","decodeComponents","components","decodeURIComponent","tokens","encodedURI","replaceMap","customDecodeURIComponent","hasSymbols","toStr","origDefineProperty","hasPropertyDescriptors","supportsDescriptors","predicate","predicates","keccak512","keccak384","keccak224","sha3_1","wrapHash","keccak_224","keccak_256","keccak_384","keccak_512","__importDefault","__esModule","bytesToUtf8","assertBytes","assertBool","_assert_1","TextDecoder","sliced","webCrypto","globalThis","nodeRequire","node","web","isArr","isCallable","list","thisArg","receiver","forEachArray","forEachString","forEachObject","toStringTag","hasToStringTag","$toString","callBound","isStandardArguments","isLegacyArguments","callee","supportsStandardArguments","badArrayLike","isCallableMarker","fnToStr","reflectApply","constructorRegex","isES6ClassFn","fnStr","tryFunctionObject","isIE68","isDDA","all","strClass","GeneratorFunction","isFnRegex","getProto","generatorFunc","getGeneratorFunc","callBind","define","implementation","getPolyfill","shim","polyfill","NaN","availableTypedArrays","gOPD","global","typedArrays","$indexOf","$slice","toStrTags","typedArray","proto","superProto","anyTrue","getter","tryTypedArrays","helpers","ValidatorResult","SchemaError","attribute","testSchemaNoThrow","throwError","throwAll","validateSchema","valid","getEnumerableProperty","testAdditionalProperty","property","addError","argument","preValidateProperty","makeChild","importErrors","testType","$id","anyOf","inner","nestedErrors","allOf","if","isSchema","ifValid","else","propertyNames","subschema","prop","patternProperties","pattern","_e","minProperties","maxProperties","every","additionalItems","contains","minimum","exclusiveMinimum","maximum","exclusiveMaximum","validateMultipleOfOrDivisbleBy","validationType","errorMessage","validationArgument","instanceDecimals","getDecimalPlaces","divisorDecimals","maxDecimals","round","testArrays","deepCompareStrict","multipleOf","divisibleBy","format","disableFormat","isFormat","minLength","hsp","minItems","maxItems","uniqueItems","dependencies","dep","childContext","propertyPath","disallow","notTypes","schemaId","uri","ValidationError","makeSuffix","throwFirst","stringizer","ValidatorResultError","detail","validatorType","SchemaContext","schemas","propertyName","FORMAT_REGEXPS","parseFloat","ipv4","validator","customFormats","deepMerger","deepMerge","copyist","copyistWithDeepMerge","pathEncoder","encodeURIComponent","objectGetPath","encodePath","decimalPlaces","decimalParts","Validator","SchemaScanResult","scan","validate","urilib","found","ref","scanSchema","baseuri","$ref","resolvedUri","ourBase","scanArray","extends","scanObject","definitions","unresolvedRefs","shouldResolve","addSchema","ourUri","addSubSchemaArray","addSubSchema","addSubSchemaObject","setSchemas","getSchema","urn","sch","schemaobj","schemaTraverser","superResolve","switchSchema","resolved","subctx","skipAttributes","ignoreProperties","validatorErr","allowUnknownAttributes","rewrite","parsed","fragment","date","any","InvalidStatusCodeError","InvalidCertError","DEFAULT_OPT","redirect","expectStatusCode","full","keepAlive","cors","sslAllowSelfSigned","_redirectCount","fingerprint256","statusCode","detectType","fatal","agents","fetchNode","_options","http","https","zlib","promisify","urlResolve","isSecure","compactFP","_options$sslPinnedCer","agentOpt","keepAliveMsecs","maxFreeSockets","maxCachedSessions","agentKey","sslPinnedCertificates","agent","Agent","rejectUnauthorized","_options$sslPinnedCer2","handleError","resume","brotliDecompress","unzip","handleRes","pinned","mfetchSecureConnect","socket","_socket$getPeerCertif","fp256","getPeerCertificate","isSessionReused","abort","setNoDelay","write","SAFE_HEADERS","FORBIDDEN_HEADERS","fetchBrowser","Headers","username","btoa","password","arrayBuffer","fromEntries","IS_NODE","versions","v8","objectKeys","toObject","$push","$propIsEnumerable","originalGetSymbols","source1","getSymbols","syms","nextKey","propValue","letters","lacksProperEnumerationOrder","preventExtensions","thrower","assignHasPendingExceptions","strictUriEncode","decodeComponent","splitOnFirst","filterObject","encodeFragmentIdentifier","validateArrayFormatSeparator","keysSorter","removeHash","hashStart","extract","queryStart","parseValue","parseNumbers","parseBooleans","query","arrayFormat","arrayFormatSeparator","formatter","accumulator","isEncodedArray","newValue","arrayValue","parserForArrayFormat","shouldFilter","skipNull","skipEmptyString","keyValueSep","encoderForArrayFormat","objectCopy","parseUrl","url_","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","queryString","pick","exclude","exclusionFilter","separator","separatorIndex","extendStatics","__extends","__","__assign","__rest","__decorate","decorators","desc","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","_arguments","generator","fulfilled","step","rejected","__generator","sent","trys","ops","verb","__createBinding","__values","__read","__spread","__spreadArrays","il","jl","__await","__asyncGenerator","asyncIterator","fulfill","settle","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","__classPrivateFieldGet","privateMap","__classPrivateFieldSet","validateBase64","unescape","escape","atob","randombytes","_0","gf0","gf1","D2","X","Y","ts64","vn","xi","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","leftover","fin","crypto_onetimeauth","outpos","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","neq25519","par25519","M","pow2523","crypto_scalarmult","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","crypto_box_afternm","crypto_box_open_afternm","crypto_hashblocks_hl","hh","hl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","crypto_hash","cswap","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","modL","crypto_sign","sm","smlen","crypto_sign_open","chk","den","den2","den4","den6","unpackneg","crypto_secretbox_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","cleanup","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","secretbox","keyLength","overheadLength","scalarLength","groupElementLength","checkBoxLengths","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","mlen","detached","fromSeed","seedLength","signatureLength","hashLength","setPRNG","readUInt8","isArgumentsObject","isGeneratorFunction","whichTypedArray","isTypedArray","BigIntSupported","SymbolSupported","ObjectToString","symbolValue","checkBoxedPrimitive","prototypeValueOf","isMapToString","isSetToString","isWeakMapToString","isWeakSetToString","isArrayBufferToString","isArrayBuffer","ArrayBuffer","working","isDataViewToString","isDataView","isView","isUint8Array","isUint8ClampedArray","isUint16Array","isUint32Array","isInt8Array","isInt16Array","isInt32Array","isBigInt64Array","isBigUint64Array","WeakMap","isWeakMap","WeakSet","isWeakSet","SharedArrayBufferCopy","SharedArrayBuffer","isSharedArrayBufferToString","isSharedArrayBuffer","isAsyncFunction","isMapIterator","isSetIterator","isGeneratorObject","isWebAssemblyCompiledModule","descriptors","formatRegExp","isString","objects","isNull","deprecate","noDeprecation","throwDeprecation","traceDeprecation","trace","debugs","debugEnvRegex","NODE_DEBUG","debugEnv","seen","stylize","stylizeNoColor","colors","isBoolean","_extend","isUndefined","stylizeWithColor","formatValue","styleType","style","styles","isFunction","primitive","simple","isNumber","formatPrimitive","visibleKeys","idx","arrayToHash","getOwnPropertyNames","isError","formatError","braces","toUTCString","formatProperty","formatArray","prev","numLinesEst","reduceToSingleString","line","re","debuglog","pid","isNullOrUndefined","isSymbol","isPrimitive","months","time","getHours","getMinutes","getSeconds","getDate","getMonth","inherits","kCustomPromisifiedSymbol","callbackifyOnRejected","cb","newReason","original","promiseResolve","promiseReject","promise","callbackify","callbackified","maybeCb","nextTick","rej","foundName","possibleNames","StructError","failure","failures","cached","explanation","cause","_cached","isPlainObject","print","toFailure","struct","branch","refinement","toFailures","run","coercer","ts","refiner","Struct","tuples","shiftIterator","Structs","deprecated","dynamic","lazy","_struct","_struct2","_struct3","_struct4","omit","partial","optional","Element","enums","func","intersection","constant","Key","Value","never","nullable","knowns","Never","unknowns","record","coerced","unknown","defaulted","fallback","changed","trimmed","empty","refine","getSize","threshold","exclusive","nonempty","of","asUint8Array","fromString","bases","decoder","encoder","ALPHABET","BASE_MAP","xc","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","it3","it4","vch","pbegin","pend","b58","it1","it2","Encoder","baseEncode","Decoder","baseDecode","codePointAt","prefixCodePoint","ComposedDecoder","decoders","Codec","baseX","alphabet","basex","rfc4648","bitsPerChar","written","SyntaxError","base2","base8","base10","base16","base16upper","base32","base32upper","base32pad","base32padupper","base32hex","base32hexupper","base32hexpad","base32hexpadupper","base32z","base36","base36upper","base58btc","base58flickr","base64","base64pad","base64url","base64urlpad","alphabetBytesToChars","alphabetCharsToBytes","base256emoji","byts","byt","encode_1","oldOffset","INT","MSB","MSBALL","read","REST$1","MSB$1","N1","N2","N3","N4","N5","N6","N7","N8","N9","encodingLength","encodeTo","int","varint","sizeOffset","digestOffset","Digest","Hasher","sha","subtle","sha512","textEncoder","textDecoder","for","identityBase","base58","createCodec","ascii","utf8","latin1","binary"],"sourceRoot":""}